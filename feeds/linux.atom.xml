<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Huang Huang 的博客</title><link href="https://mozillazg.com/" rel="alternate"></link><link href="https://mozillazg.com/feeds/linux.atom.xml" rel="self"></link><id>https://mozillazg.com/</id><updated>2019-06-01T00:00:00+00:00</updated><entry><title>一个因为网卡 txqueuelen 参数值太小导致丢包的 case</title><link href="https://mozillazg.com/2019/06/linux-client-io-timeout-server-lost-drop-packet-tcp-retransmitted-ifconfig-txqueuelen.html" rel="alternate"></link><updated>2019-06-01T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2019-06-01:2019/06/linux-client-io-timeout-server-lost-drop-packet-tcp-retransmitted-ifconfig-txqueuelen.html</id><summary type="html">&lt;p&gt;前段时间线上的一个服务出现 tcp 重传特别严重，同时客户端与服务端通信的过程中经常出现 io timeout 错误。最后发现是因为网卡 txqueuelen 参数的值设置的太小导致的。&lt;/p&gt;
&lt;p&gt;简单记录一下当时的现象，万一将来遇到类似的现象的时候有个参考，整体不是很完整只给自己备忘一下，有空的时候再完善。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2 id="hidid1"&gt;客户端&lt;a class="headerlink" href="#hidid1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;客户端程序使用 go 写的，与服务端端之间以 http 长连接的方式进行通信，直观的现象是日志中经常出现
&lt;tt class="docutils literal"&gt;read tcp &lt;span class="pre"&gt;&amp;lt;ip&amp;gt;:&amp;lt;port&amp;gt;&lt;/span&gt; &lt;span class="pre"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pre"&gt;&amp;lt;ip&amp;gt;:&amp;lt;port&amp;gt;:&lt;/span&gt; i/o timeout&lt;/tt&gt; 错误。&lt;/p&gt;
&lt;p&gt;由于没有客户端服务器的权限所以没有在客户端抓包。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2 id="hidid2"&gt;服务端&lt;a class="headerlink" href="#hidid2" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;服务端最先观察到的现象是客户端在频繁的重连（这里只的是频繁的发送 http 请求，前面讲到了客户端与服务端是以 http 长连接的方式通信的，正常情况是连上之后只发一个 http 请求，要等很久才会发其他的 http 请求，也就是不会出现频繁的发送 http 请求的情况）。&lt;/p&gt;
&lt;p&gt;然后查看服务端主机的系统监控，发现 tcp 重传的指标特别高。&lt;/p&gt;
&lt;p&gt;服务端抓包发现的异常情况是: 服务端丢包重传一段时间后，客户端发起了关闭连接的操作，然后又没有完成最后 ACK 而是直接 RST。&lt;/p&gt;
&lt;p&gt;例子:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
server -&amp;gt; client    [PSH, ACK] Seq=6195 Ack=1 Win=59 Len=38
server -&amp;gt; client    [TCP Retransmission] [PSH, ACK] Seq=6195 Ack=1 Win=59 Len=38
server -&amp;gt; client    [TCP Retransmission] [PSH, ACK] Seq=6195 Ack=1 Win=59 Len=38
server -&amp;gt; client    [TCP Retransmission] [PSH, ACK] Seq=6195 Ack=1 Win=59 Len=38
server -&amp;gt; client    [TCP Retransmission] [PSH, ACK] Seq=6195 Ack=1 Win=59 Len=38
server -&amp;gt; client    [TCP Retransmission] [PSH, ACK] Seq=6195 Ack=1 Win=59 Len=38
client -&amp;gt; server    [FIN, ACK] Seq=1 Ack=6233 Win=60 Len=0
server -&amp;gt; client    [PSH, ACK] Seq=6233 Ack=2 Win=59 Len=190
server -&amp;gt; client    [FIN, ACK] Seq=6423 Ack=2 Win=59 Len=0
client -&amp;gt; server    [RST] Seq=2 Win=0 Len=0
client -&amp;gt; server    [RST] Seq=2 Win=0 Len=0
&lt;/pre&gt;
&lt;p&gt;通过 ifconfig 查看网卡状态，可以发现 RX dropped 的值特别高:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ ifconfig

eth0: flags=4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt;  mtu 1500
        inet 10.0.x.x  netmask 255.255.255.0  broadcast 10.0.x.255
        inet6 xxxx  prefixlen 64  scopeid 0x20&amp;lt;link&amp;gt;
        ether xxx  txqueuelen 1000  (Ethernet)
        RX packets xxx  bytes xxx (68.2 TiB)
        RX errors 0  dropped 6485541  overruns 0  frame 0
        TX packets xxx  bytes xxx (68.5 TiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
&lt;/pre&gt;
&lt;p&gt;最后公司网络&amp;amp;虚拟化团队说是因为虚拟化时网卡的 txqueuelen 参数设置太小导致的丢包，加大了 txqueuelen 的值后丢包问题就大大缓解了（客户端没有再重连了）。&lt;/p&gt;
&lt;p&gt;这篇文章写的不是很详细，有很多证据没法拿出来或者说是缺失了，期望将来能找个时间以及找到一个可以简单在本地重现的方法，那个时候再完善这篇文章，暂时只能算是简单的 case 备忘。&lt;/p&gt;
&lt;p&gt;BTW, 还碰到一个丢包的 case 是：最终通过开启网卡多队列以及中断绑定来解决大流量下的网络丢包问题。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2 id="hidid3"&gt;参考资料&lt;a class="headerlink" href="#hidid3" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://m.newsmth.net/article/KernelTech/60177"&gt;[合集] 请教：协议栈什么情况下丢包&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="丢包"></category></entry><entry><title>net.ipv4.ip_local_port_range 的值究竟影响了啥</title><link href="https://mozillazg.com/2019/05/linux-what-net.ipv4.ip_local_port_range-effect-or-mean.html" rel="alternate"></link><updated>2019-05-04T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2019-05-04:2019/05/linux-what-net.ipv4.ip_local_port_range-effect-or-mean.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2 id="hidid1"&gt;前言&lt;a class="headerlink" href="#hidid1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;网上关于 &lt;tt class="docutils literal"&gt;net.ipv4.ip_local_port_range&lt;/tt&gt; 的值的效果众说纷纭（下面所说的连接都假定使用的是相同的协议(都是 TCP 或 UDP)）:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;大部分文章都说这个值决定了客户端的一个 ip 可用的端口数量，即一个 ip 最多只能创建 60K 多一点的连接（1025-65535），如果要突破这个限制需要客户端机器绑定多个 ip。&lt;/li&gt;
&lt;li&gt;还有部分文章说的是这个值决定的是 socket 四元组中的本地端口数量，即一个 ip 对同一个目标 ip+port 最多可以创建 60K 多一点连接，只要目标 ip 或端口不一样就可以使用相同的本地端口，不一定需要多个客户端 ip 就可以突破端口数量限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt"&gt;文档&lt;/a&gt; 中的介绍也很模糊:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ip_local_port_range - 2 INTEGERS
    Defines the local port range that is used by TCP and UDP to
    choose the local port. The first number is the first, the
    second the last local port number.
    If possible, it is better these numbers have different parity.
    (one even and one odd values)
    The default values are 32768 and 60999 respectively.
&lt;/pre&gt;
&lt;p&gt;下面就来做一些实验来确认这个选项的实际效果。&lt;/p&gt;
&lt;p&gt;实验环境:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ uname -a
Linux vagrant 4.15.0-29-generic #31-Ubuntu SMP Tue Jul 17 15:39:52 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="ip"&gt;
&lt;h2 id="hidip"&gt;相同目标 ip 和相同目标端口下的端口数量限制&lt;a class="headerlink" href="#hidip" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;先设置 ip_local_port_range 的值为非常小的范围:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ echo &amp;quot;61000 61001&amp;quot; | sudo tee /proc/sys/net/ipv4/ip_local_port_range
61000 61001

$ cat /proc/sys/net/ipv4/ip_local_port_range
61000       61001
&lt;/pre&gt;
&lt;p&gt;然后对相同 ip 和端口发送 tcp 请求。创建两个连接，达到最大端口数量限制:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ nohup nc 123.125.114.144 80 -v &amp;amp;
[1] 16196
$ nohup: ignoring input and appending output to 'nohup.out'

$ nohup nc 123.125.114.144 80 -v &amp;amp;
[2] 16197
$ nohup: ignoring input and appending output to 'nohup.out'

$ ss -ant |grep 10.0.2.15:61
ESTAB   0        0                10.0.2.15:61001       123.125.114.144:80
ESTAB   0        0                10.0.2.15:61000       123.125.114.144:80
&lt;/pre&gt;
&lt;p&gt;然后再创建第三个连接，此时预期应该会失败，因为超出的端口数量现在:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
vagrant&amp;#64;vagrant:~$ nc 123.125.114.144 80 -v
nc: connect to 123.125.114.144 port 80 (tcp) failed: Cannot assign requested address
&lt;/pre&gt;
&lt;p&gt;可以看到确实如预期的失败了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2 id="hidid2"&gt;相同目标 ip 不同目标端口&lt;a class="headerlink" href="#hidid2" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;下面看看相同目标 ip 不同目标端口是否可以突破这个端口限制:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ nohup nc 123.125.114.144 443 -v &amp;amp;
[3] 16215
$ nohup: ignoring input and appending output to 'nohup.out'

$ nohup nc 123.125.114.144 443 -v &amp;amp;
[4] 16216
$ nohup: ignoring input and appending output to 'nohup.out'

$ ss -ant |grep 10.0.2.15:61
ESTAB   0        0                10.0.2.15:61001       123.125.114.144:443
ESTAB   0        0                10.0.2.15:61001       123.125.114.144:80
ESTAB   0        0                10.0.2.15:61000       123.125.114.144:443
ESTAB   0        0                10.0.2.15:61000       123.125.114.144:80
&lt;/pre&gt;
&lt;p&gt;可以看到相同目标 ip 不同目标端口下，每个目标端口都有一个独立的端口限制，即，相同源 ip 的源端口是可以相同的。&lt;/p&gt;
&lt;p&gt;按照推测这两个目标端口应该只能创建四个连接，下面试试看:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ ss -ant |grep 10.0.2.15:61
ESTAB   0        0                10.0.2.15:61001       123.125.114.144:443
ESTAB   0        0                10.0.2.15:61001       123.125.114.144:80
ESTAB   0        0                10.0.2.15:61000       123.125.114.144:443
ESTAB   0        0                10.0.2.15:61000       123.125.114.144:80

$ nc 123.125.114.144 443 -v
nc: connect to 123.125.114.144 port 443 (tcp) failed: Cannot assign requested address
&lt;/pre&gt;
&lt;p&gt;确实是不能再创建连接了，因为每个目标端口都达到了 ip_local_port_range 的限制。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2 id="hidid3"&gt;多个目标 ip 相同目标端口&lt;a class="headerlink" href="#hidid3" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;下面看一下多个目标 ip 相同目标端口下的情况:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ nohup nc 220.181.57.216 80 -v &amp;amp;
[5] 16222
$ nohup: ignoring input and appending output to 'nohup.out'

$ nohup nc 220.181.57.216 80 -v &amp;amp;
[6] 16223
$ nohup: ignoring input and appending output to 'nohup.out'

$ nc 220.181.57.216 80 -v
nc: connect to 220.181.57.216 port 80 (tcp) failed: Cannot assign requested address

$ ss -ant |grep :80
SYN-SENT  0        1               10.0.2.15:61001       220.181.57.216:80
SYN-SENT  0        1               10.0.2.15:61000       220.181.57.216:80
SYN-SENT  0        1               10.0.2.15:61001      123.125.114.144:80
SYN-SENT  0        1               10.0.2.15:61000      123.125.114.144:80
&lt;/pre&gt;
&lt;p&gt;可以看到，每个目标 ip 都有独立的 ip_local_port_range 限制。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2 id="hidid4"&gt;多个目标 ip 不同目标端口&lt;a class="headerlink" href="#hidid4" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;下面看一下多个目标 ip 相同不同端口下的情况，按照前面的经验两个 ip 加两个端口应该只能创建 8 个连接&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ nohup nc 123.125.114.144 80 -v &amp;amp;

$ nohup nc 123.125.114.144 80 -v &amp;amp;

$ nc 123.125.114.144 80 -v
nc: connect to 123.125.114.144 port 80 (tcp) failed: Cannot assign requested address

$ nohup nc 123.125.114.144 443 -v &amp;amp;

$ nohup nc 123.125.114.144 443 -v &amp;amp;

$ nc 123.125.114.144 443 -v
nc: connect to 123.125.114.144 port 443 (tcp) failed: Cannot assign requested address

$ nohup nc 220.181.57.216 80 -v &amp;amp;

$ nohup nc 220.181.57.216 80 -v &amp;amp;

$ nc 220.181.57.216 80 -v
nc: connect to 220.181.57.216 port 80 (tcp) failed: Cannot assign requested address

$ nohup nc 220.181.57.216 443 -v &amp;amp;

$ nohup nc 220.181.57.216 443 -v &amp;amp;

$ nc 220.181.57.216 443 -v
nc: connect to 220.181.57.216 port 443 (tcp) failed: Cannot assign requested address

$ ss -ant |grep 10.0.2.15:61
SYN-SENT  0        1               10.0.2.15:61001       220.181.57.216:80
ESTAB     0        0               10.0.2.15:61001      123.125.114.144:443
ESTAB     0        0               10.0.2.15:61000       220.181.57.216:443
SYN-SENT  0        1               10.0.2.15:61000       220.181.57.216:80
SYN-SENT  0        1               10.0.2.15:61001      123.125.114.144:80
ESTAB     0        0               10.0.2.15:61000      123.125.114.144:443
SYN-SENT  0        1               10.0.2.15:61000      123.125.114.144:80
ESTAB     0        0               10.0.2.15:61001       220.181.57.216:443
&lt;/pre&gt;
&lt;p&gt;可以看到确实如预期的只能创建8个连接。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2 id="hidid5"&gt;总结&lt;a class="headerlink" href="#hidid5" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;那么是否就可以说前言中的第一种说法就是错的呢，查了一下资料其实也不能说第一种说法是错误的：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;当系统的内核版本小于 3.2 时，第一种说法是正确的&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://marc.info/?l=haproxy&amp;amp;m=139315478227467&amp;amp;w=2"&gt;当系统的内核版本大于等于 3.2 时，第二种说法是正确的&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2 id="hidid6"&gt;参考资料&lt;a class="headerlink" href="#hidid6" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt"&gt;kernel.org/doc/Documentation/networking/ip-sysctl.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://medium.com/&amp;#64;pawilon/tuning-your-linux-kernel-and-haproxy-instance-for-high-loads-1a2105ea553e"&gt;Tuning your Linux kernel and HAProxy instance for high loads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://medium.freecodecamp.org/load-testing-haproxy-part-2-4c8677780df6"&gt;Load Testing HAProxy (Part 2) – freeCodeCamp.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/2332741/what-is-the-theoretical-maximum-number-of-open-tcp-connections-that-a-modern-lin"&gt;What is the theoretical maximum number of open TCP connections that a modern Linux box can have - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#connection-table-slot"&gt;Coping with the TCP TIME-WAIT state on busy Linux servers | Vincent Bernat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://marc.info/?l=haproxy&amp;amp;m=139315478227467&amp;amp;w=2"&gt;'Re: Fix for rare EADDRNOTAVAIL error' - MARC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="sysctl"></category></entry><entry><title>strace 常用操作</title><link href="https://mozillazg.com/2019/03/linux-debug-with-strace-cookbook-examples.html" rel="alternate"></link><updated>2019-03-30T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2019-03-30:2019/03/linux-debug-with-strace-cookbook-examples.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2 id="hidid1"&gt;前言&lt;a class="headerlink" href="#hidid1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://man7.org/linux/man-pages/man1/strace.1.html"&gt;strace&lt;/a&gt; 可以用来查看/记录程序运行过程中调用的
&lt;a class="reference external" href="http://man7.org/linux/man-pages/man2/syscalls.2.html"&gt;系统调用&lt;/a&gt; 以及接收到的进程信号（signal），
对于我们日常 debug 疑难杂症非常的有帮助，是一个非常好的 debug 工具。本文简单记录一下 strace 的常用功能和操作。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2 id="hidid2"&gt;输出的含义&lt;a class="headerlink" href="#hidid2" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;我们通过一个简单的命令来查看 strace 程序的典型输出：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ strace ls /tmp/trace
execve&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/bin/ls&amp;quot;&lt;/span&gt;, &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;/tmp/trace&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, &lt;span class="o"&gt;[&lt;/span&gt;/* &lt;span class="m"&gt;41&lt;/span&gt; vars */&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0
brk&lt;span class="o"&gt;(&lt;/span&gt;0&lt;span class="o"&gt;)&lt;/span&gt;                                  &lt;span class="o"&gt;=&lt;/span&gt; 0x11af000
mmap&lt;span class="o"&gt;(&lt;/span&gt;NULL, 4096, PROT_READ&lt;span class="p"&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class="p"&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x7f0738c16000
access&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/ld.so.preload&amp;quot;&lt;/span&gt;, R_OK&lt;span class="o"&gt;)&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; -1 ENOENT &lt;span class="o"&gt;(&lt;/span&gt;No such file or directory&lt;span class="o"&gt;)&lt;/span&gt;
open&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/ld.so.cache&amp;quot;&lt;/span&gt;, O_RDONLY&lt;span class="o"&gt;)&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; 3
fstat&lt;span class="o"&gt;(&lt;/span&gt;3, &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;st_mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;S_IFREG&lt;span class="p"&gt;|&lt;/span&gt;0644, &lt;span class="nv"&gt;st_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;35759, ...&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0
mmap&lt;span class="o"&gt;(&lt;/span&gt;NULL, 35759, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x7f0738c0a000
close&lt;span class="o"&gt;(&lt;/span&gt;3&lt;span class="o"&gt;)&lt;/span&gt;                                &lt;span class="o"&gt;=&lt;/span&gt; 0
open&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/lib64/libselinux.so.1&amp;quot;&lt;/span&gt;, O_RDONLY&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 3
read&lt;span class="o"&gt;(&lt;/span&gt;3, &lt;span class="s2"&gt;&amp;quot;\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&amp;gt;\0\1\0\0\0PX\0\0\0\0\0\0&amp;quot;&lt;/span&gt;..., 832&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 832
fstat&lt;span class="o"&gt;(&lt;/span&gt;3, &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;st_mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;S_IFREG&lt;span class="p"&gt;|&lt;/span&gt;0755, &lt;span class="nv"&gt;st_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;122040, ...&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0
....
fstat&lt;span class="o"&gt;(&lt;/span&gt;1, &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;st_mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;S_IFCHR&lt;span class="p"&gt;|&lt;/span&gt;0620, &lt;span class="nv"&gt;st_rdev&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;makedev&lt;span class="o"&gt;(&lt;/span&gt;136, 0&lt;span class="o"&gt;)&lt;/span&gt;, ...&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0
mmap&lt;span class="o"&gt;(&lt;/span&gt;NULL, 4096, PROT_READ&lt;span class="p"&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class="p"&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x7fb97a060000
write&lt;span class="o"&gt;(&lt;/span&gt;1, &lt;span class="s2"&gt;&amp;quot;test_dir  test.txt\n&amp;quot;&lt;/span&gt;, 19test_dir  test.txt
&lt;span class="o"&gt;)&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; 19
close&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt;                                &lt;span class="o"&gt;=&lt;/span&gt; 0
munmap&lt;span class="o"&gt;(&lt;/span&gt;0x7fb97a060000, 4096&lt;span class="o"&gt;)&lt;/span&gt;            &lt;span class="o"&gt;=&lt;/span&gt; 0
close&lt;span class="o"&gt;(&lt;/span&gt;2&lt;span class="o"&gt;)&lt;/span&gt;                                &lt;span class="o"&gt;=&lt;/span&gt; 0
exit_group&lt;span class="o"&gt;(&lt;/span&gt;0&lt;span class="o"&gt;)&lt;/span&gt;                           &lt;span class="o"&gt;=&lt;/span&gt; ?
+++ exited with &lt;span class="m"&gt;0&lt;/span&gt; +++
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;比如下面的这个输出:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
execve(&amp;quot;/bin/ls&amp;quot;, [&amp;quot;ls&amp;quot;, &amp;quot;/tmp/trace&amp;quot;], [/* 41 vars */]) = 0
&lt;/pre&gt;
&lt;p&gt;的含义如下：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;execve&lt;/tt&gt;: 系统调用的名称。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(&amp;quot;/bin/ls&amp;quot;,&lt;/span&gt; [&amp;quot;ls&amp;quot;, &lt;span class="pre"&gt;&amp;quot;/tmp/trace&amp;quot;],&lt;/span&gt; [/* 41 vars &lt;span class="pre"&gt;*/])&lt;/span&gt;&lt;/tt&gt;: 这个括号里是系统调用的参数。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;= 0&lt;/tt&gt; : 这个 0 是系统调用的返回值，不一定是数字看具体的系统调用返回啥结果就是啥值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面有些系统调用的返回值比较特殊，比如:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
access(&amp;quot;/etc/ld.so.preload&amp;quot;, R_OK)      = -1 ENOENT (No such file or directory)
&lt;/pre&gt;
&lt;p&gt;后面这个 &lt;tt class="docutils literal"&gt;ENOENT (No such file or directory)&lt;/tt&gt; 中的 &lt;tt class="docutils literal"&gt;ENOENT&lt;/tt&gt; 是错误码，
&lt;tt class="docutils literal"&gt;(No such file or directory)&lt;/tt&gt; 是错误码的解释。&lt;/p&gt;
&lt;p&gt;上面是系统调用相关的输出格式和含义，下面再看一个进程信号(signal)的输出格式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ strace -p 15718
Process &lt;span class="m"&gt;15718&lt;/span&gt; attached
&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;1, &lt;span class="o"&gt;[&lt;/span&gt;0&lt;span class="o"&gt;]&lt;/span&gt;, NULL, NULL, NULL&lt;span class="o"&gt;)&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; ? ERESTARTNOHAND &lt;span class="o"&gt;(&lt;/span&gt;To be restarted &lt;span class="k"&gt;if&lt;/span&gt; no handler&lt;span class="o"&gt;)&lt;/span&gt;
--- SIGTERM &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;si_signo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;SIGTERM, &lt;span class="nv"&gt;si_code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;SI_USER, &lt;span class="nv"&gt;si_pid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;15757, &lt;span class="nv"&gt;si_uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;500&lt;span class="o"&gt;}&lt;/span&gt; ---
+++ killed by SIGTERM +++
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
--- SIGTERM {si_signo=SIGTERM, si_code=SI_USER, si_pid=15757, si_uid=500} ---
&lt;/pre&gt;
&lt;p&gt;这一句就是进程接收到的具体 signal 的信息。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2 id="hidid3"&gt;常用命令行参数&lt;a class="headerlink" href="#hidid3" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;常用的参数组合:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
strace -f -s 1024 -tt -T -yy -p &amp;lt;pid&amp;gt;
strace -f -s 1024 -tt -T -yy -p &amp;lt;pid&amp;gt; -o &amp;lt;filename&amp;gt;
strace -c -p &amp;lt;pid&amp;gt;
strace -f -s 1024 -tt -T -yy -C -p &amp;lt;pid&amp;gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-p&lt;/span&gt; &amp;lt;pid&amp;gt;&lt;/tt&gt;: 附加到进程中，记录某个进程的系统调用和进程信号信息。多个 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-p&lt;/span&gt; &amp;lt;pid&amp;gt;&lt;/tt&gt; 可以实现同时追踪多个进程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-f&lt;/span&gt;&lt;/tt&gt;: 同时追踪子进程的系统调用情况（如果是多线程程序的话，会同时追踪所有线程）。如果不加 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-f&lt;/span&gt;&lt;/tt&gt; 参数的话默认只追踪指定的单个进程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-o&lt;/span&gt; &amp;lt;filename&amp;gt;&lt;/tt&gt;: 把输出结果保存到文件中（默认是输出到标准错误）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-ff&lt;/span&gt;&lt;/tt&gt;: 与 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-o&lt;/span&gt; &amp;lt;filename&amp;gt;&lt;/tt&gt; 一起使用，会把每个 pid (进程 pid 或线程 id) 的 strace 数据保存到 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;&amp;lt;filename&amp;gt;.&amp;lt;pid&amp;gt;&lt;/span&gt;&lt;/tt&gt; 的文件中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt; &amp;lt;expr&amp;gt;&lt;/tt&gt;: 过滤事件，只输出符合规则的事件，可以用来指定只看某些系统调用的情况，比如： &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt; open,read&lt;/tt&gt; 。
或者不看某些系统调用： &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt; '!open,read'&lt;/tt&gt; ，更强大的过滤功能可以查看 &lt;a class="reference external" href="http://man7.org/linux/man-pages/man1/strace.1.html"&gt;strace(1)&lt;/a&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-s&lt;/span&gt; &amp;lt;size&amp;gt;&lt;/tt&gt;: 指定字符串数据的大小，默认 32。可以通过 -s 来显示更详细的信息或精简信息（比如很多系统调用的参数的值会被截断，可以通过 -s 配置更大的 size 来查看更详细的参数值）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-tt&lt;/span&gt;&lt;/tt&gt;: 显示系统调用是在哪个时刻调用的，包含微秒（ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-t&lt;/span&gt;&lt;/tt&gt; 参数一样的效果就是时间不包含微秒）:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ strace -e open,read -s 2 -tt ls
14:32:18.877470 read(3, &amp;quot;\177E&amp;quot;..., 832) = 832
14:32:18.878249 read(3, &amp;quot;\177E&amp;quot;..., 832) = 832
14:32:18.878867 read(3, &amp;quot;\177E&amp;quot;..., 832) = 832
14:32:18.879386 read(3, &amp;quot;\177E&amp;quot;..., 832) = 832
14:32:18.879871 read(3, &amp;quot;\177E&amp;quot;..., 832) = 832
14:32:18.880923 read(3, &amp;quot;no&amp;quot;..., 1024)  = 420
14:32:18.881255 read(3, &amp;quot;&amp;quot;, 1024)       = 0

上面的第一列时间信息即为 -tt 的效果。
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-T&lt;/span&gt;&lt;/tt&gt;: 显示执行系统调用所花费的时间，单位是秒&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ strace -e read -s 2 -T pwd
read(3, &amp;quot;\177E&amp;quot;..., 832)                = 832 &amp;lt;0.000012&amp;gt;

上面行末的 &amp;lt;0.000012&amp;gt; 即为 -T 的效果。
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-y&lt;/span&gt;&lt;/tt&gt;: 输出文件描述符所对应的文件路径&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ strace -e read -s 10  cat test.txt
read(3, &amp;quot;\177ELF\2\1\1\3\0\0&amp;quot;..., 832)  = 832
read(3, &amp;quot;hello\n&amp;quot;, 131072)              = 6
hello
read(3, &amp;quot;&amp;quot;, 131072)                     = 0

$ strace -e read -s 10 -y  cat test.txt
read(3&amp;lt;/lib/x86_64-linux-gnu/libc-2.27.so&amp;gt;, &amp;quot;\177ELF\2\1\1\3\0\0&amp;quot;..., 832) = 832
read(3&amp;lt;/path/to/test.txt&amp;gt;, &amp;quot;hello\n&amp;quot;, 131072) = 6
hello
read(3&amp;lt;/path/to/test.txt&amp;gt;, &amp;quot;&amp;quot;, 131072) = 0

可以看到加了 -y 后文件描述符后面会跟它所对应的文件的路径
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-yy&lt;/span&gt;&lt;/tt&gt;: 输出文件描述更详细的信息，比如 socket 文件描述符输出所对应的协议信息。&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ strace -e connect -s 3  nc baidu.com 80
...
connect(3, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr(&amp;quot;127.0.0.53&amp;quot;)}, 16) = 0
...

$ strace -e connect -s 3 -y  nc baidu.com 80
...
connect(3&amp;lt;socket:[22180]&amp;gt;, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr(&amp;quot;127.0.0.53&amp;quot;)}, 16) = 0

$ strace -e connect -s 3 -yy  nc baidu.com 80
...
connect(3&amp;lt;UDP:[22202]&amp;gt;, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr(&amp;quot;127.0.0.53&amp;quot;)}, 16) = 0

可以看到 -yy 会显示上面的 UDP 这个协议信息。
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-c&lt;/span&gt;&lt;/tt&gt;: 统计系统调用的次数、种类以及错误信息，会隐藏详细的追踪信息（前面的 -e 过滤参数也可以用于这个）:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ strace -c cat test.txt
hello
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 18.45    0.000019           3         7           mmap
 18.45    0.000019           5         4           mprotect
 17.48    0.000018           9         2           munmap
 13.59    0.000014           4         4           openat
  9.71    0.000010          10         1           write
  6.80    0.000007           2         3           read
  5.83    0.000006           2         3         3 access
  3.88    0.000004           1         5           fstat
  2.91    0.000003           1         6           close
  1.94    0.000002           1         3           brk
  0.97    0.000001           1         1           execve
  0.00    0.000000           0         1           arch_prctl
  0.00    0.000000           0         1           fadvise64
------ ----------- ----------- --------- --------- ----------------
100.00    0.000103                    41         3 total
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-C&lt;/span&gt;&lt;/tt&gt;: 跟 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-c&lt;/span&gt;&lt;/tt&gt; 类似，只是增加了会输出详细的追踪信息&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ strace -e read -C -s 3 cat test.txt
read(3, &amp;quot;\177EL&amp;quot;..., 832)               = 832
read(3, &amp;quot;hel&amp;quot;..., 131072)               = 6
hello
read(3, &amp;quot;&amp;quot;, 131072)                     = 0
+++ exited with 0 +++
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
  0.00    0.000000           0         3           read
------ ----------- ----------- --------- --------- ----------------
100.00    0.000000                     3           total
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3 id="hidid4"&gt;常用过滤表达式&lt;a class="headerlink" href="#hidid4" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt; &amp;lt;expr&amp;gt;&lt;/tt&gt; 这个参数可以用来指定需要 trace 哪些事件，格式如下:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[qualifier=][!][?]value1[,[?]value2]...

其中 qualifier 的值是 trace, abbrev, verbose, raw,
signal, read, write, fault, inject, or kvm 。默认是 trace

value 就是各种过滤条件了。
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt; &lt;span class="pre"&gt;trace=&amp;lt;set&amp;gt;&lt;/span&gt;&lt;/tt&gt; : &lt;tt class="docutils literal"&gt;&amp;lt;set&amp;gt;&lt;/tt&gt; 是系统调用名称（默认是 &lt;tt class="docutils literal"&gt;trace=all&lt;/tt&gt; ），比如 &lt;tt class="docutils literal"&gt;trace=open,close,read,write&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt; &lt;span class="pre"&gt;trace=/&amp;lt;regex&amp;gt;&lt;/span&gt;&lt;/tt&gt;: 可以通过这种方式来用正则表达式指定系统调用名称，支持的正则语法可以参考 &lt;a class="reference external" href="http://man7.org/linux/man-pages/man7/regex.7.html"&gt;regex(7)&lt;/a&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt; &lt;span class="pre"&gt;trace=%file&lt;/span&gt;&lt;/tt&gt;: 文件相关系统调用。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt; &lt;span class="pre"&gt;trace=%desc&lt;/span&gt;&lt;/tt&gt;: 文件描述符相关。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt; &lt;span class="pre"&gt;trace=%process&lt;/span&gt;&lt;/tt&gt;: 进程管理相关系统调用。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt; &lt;span class="pre"&gt;trace=%network&lt;/span&gt;&lt;/tt&gt;: 网络相关。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt; &lt;span class="pre"&gt;trace=%signal&lt;/span&gt;&lt;/tt&gt;: 信号相关。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt; &lt;span class="pre"&gt;trace=%ipc&lt;/span&gt;&lt;/tt&gt;: IPC 相关。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt; &lt;span class="pre"&gt;trace=%memory&lt;/span&gt;&lt;/tt&gt;: 内存 mapping 相关。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt; &lt;span class="pre"&gt;signal=&amp;lt;set&amp;gt;&lt;/span&gt;&lt;/tt&gt;: &lt;tt class="docutils literal"&gt;&amp;lt;set&amp;gt;&lt;/tt&gt; 是进程信号的名称（默认是 &lt;tt class="docutils literal"&gt;signal=all&lt;/tt&gt; ），比如 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt; signal=SIGTERM&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2 id="hidid5"&gt;常见系统调用&lt;a class="headerlink" href="#hidid5" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://man7.org/linux/man-pages/man2/open.2.html"&gt;open()&lt;/a&gt; : 用于打开或创建一个文件。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://man7.org/linux/man-pages/man2/read.2.html"&gt;read()&lt;/a&gt; : 用于读取一个文件。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://man7.org/linux/man-pages/man2/write.2.html"&gt;write()&lt;/a&gt; : 写文件。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://man7.org/linux/man-pages/man2/connect.2.html"&gt;connect()&lt;/a&gt; : 建立网络连接。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://man7.org/linux/man-pages/man2/sendto.2.html"&gt;sendto()&lt;/a&gt; : 发送网络数据。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://man7.org/linux/man-pages/man2/recvfrom.2.html"&gt;recvfrom()&lt;/a&gt; : 接收网络数据。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://man7.org/linux/man-pages/man2/futex.2.html"&gt;futex()&lt;/a&gt; : 锁相关操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多关于某个系统调用的含义/用途可以通过 &lt;tt class="docutils literal"&gt;man 2 &amp;lt;syscall&amp;gt;&lt;/tt&gt; （把 &lt;tt class="docutils literal"&gt;&amp;lt;syscall&amp;gt;&lt;/tt&gt; 替换为实际的系统调用名称，比如 &lt;tt class="docutils literal"&gt;man 2 open&lt;/tt&gt; ）命令行查看或者访问
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://man7.org/linux/man-pages/man2/&amp;lt;syscall&amp;gt;.2.html&lt;/span&gt;&lt;/tt&gt; 这个网址（把 &lt;tt class="docutils literal"&gt;&amp;lt;syscall&amp;gt;&lt;/tt&gt; 替换为实际的系统调用名称, 比如 &lt;a class="reference external" href="http://man7.org/linux/man-pages/man2/open.2.html"&gt;http://man7.org/linux/man-pages/man2/open.2.html&lt;/a&gt;）亦或是 Google 一下。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2 id="hidid6"&gt;总结&lt;a class="headerlink" href="#hidid6" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;更多关于 strace 的信息可以从参考资料的 strace(1) 中获取，如果对输出中系统调用不了解的话可以参考参考资料中的 syscalls(2) 中的信息，同时也别忘了搜索引擎是你的好朋友，有啥不明白的记得 Google 一下。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2 id="hidid7"&gt;参考资料&lt;a class="headerlink" href="#hidid7" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://man7.org/linux/man-pages/man1/strace.1.html"&gt;strace(1) - Linux manual page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://man7.org/linux/man-pages/man2/syscalls.2.html"&gt;syscalls(2) - Linux manual page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://man7.org/linux/man-pages/man7/regex.7.html"&gt;regex(7) - Linux manual page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="strace"></category><category term="debug"></category></entry><entry><title>Bash Shell 常用语法和操作</title><link href="https://mozillazg.com/2018/08/linux-bash-shell-script-cookbook.html" rel="alternate"></link><updated>2018-08-12T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2018-08-12:2018/08/linux-bash-shell-script-cookbook.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2 id="hidid1"&gt;变量&lt;a class="headerlink" href="#hidid1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;变量名=值&lt;/tt&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2 id="hidid2"&gt;数组&lt;a class="headerlink" href="#hidid2" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="range"&gt;
&lt;h3 id="hidrange"&gt;range&lt;a class="headerlink" href="#hidrange" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;语法:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;start..end..step&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 输出 1 2 3&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; value in &lt;span class="o"&gt;{&lt;/span&gt;1..3&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;

&lt;span class="c1"&gt;# 输出 1 3 5&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; value in &lt;span class="o"&gt;{&lt;/span&gt;1..6..2&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="if"&gt;
&lt;h2 id="hidif"&gt;if&lt;a class="headerlink" href="#hidif" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;if 语句的语法如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &amp;lt;some test&amp;gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
    &amp;lt;commands&amp;gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &amp;lt;some test&amp;gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
    &amp;lt;different commands&amp;gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &amp;lt;other commands&amp;gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;比如:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$age&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -gt &lt;span class="m"&gt;18&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;you are &lt;/span&gt;&lt;span class="nv"&gt;$age&lt;/span&gt;&lt;span class="s2"&gt; &amp;gt; 18&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$age&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -eq &lt;span class="m"&gt;18&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;you are &lt;/span&gt;&lt;span class="nv"&gt;$age&lt;/span&gt;&lt;span class="s2"&gt; == 18&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;you are &lt;/span&gt;&lt;span class="nv"&gt;$age&lt;/span&gt;&lt;span class="s2"&gt; &amp;lt; 18&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3 id="hidid3"&gt;常用的条件判断&lt;a class="headerlink" href="#hidid3" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="38%" /&gt;
&lt;col width="63%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;条件表达式&lt;/th&gt;
&lt;th class="head"&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;! 表达式&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-n 字符串&lt;/td&gt;
&lt;td&gt;字符串长度大于 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-z 字符串&lt;/td&gt;
&lt;td&gt;字符串长度等于 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;A = B&lt;/td&gt;
&lt;td&gt;字符串 A B 相等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;A != B&lt;/td&gt;
&lt;td&gt;字符串 A B 不相等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;m -eq n&lt;/td&gt;
&lt;td&gt;数字 m n 相等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;m -gt n&lt;/td&gt;
&lt;td&gt;数字 m 大于 n&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;m -lt n&lt;/td&gt;
&lt;td&gt;数字 m 小于 n&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-d 路径&lt;/td&gt;
&lt;td&gt;文件路径存在，并且是个目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-e 路径&lt;/td&gt;
&lt;td&gt;文件存在&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-s 路径&lt;/td&gt;
&lt;td&gt;文件存在，并且大小大于 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-r 路径&lt;/td&gt;
&lt;td&gt;文件存在，并且拥有读权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-w 路径&lt;/td&gt;
&lt;td&gt;文件存在，并且拥有写权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-x 路径&lt;/td&gt;
&lt;td&gt;文件存在，并且拥有执行权限&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;[]&lt;/tt&gt; 实际调用的是 &lt;tt class="docutils literal"&gt;test&lt;/tt&gt; 命令，我们可以用 &lt;tt class="docutils literal"&gt;test&lt;/tt&gt; 命令来测试条件表达式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;abc&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; 18
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;
1
$ &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; -eq 1
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;
0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以及可以用 &lt;tt class="docutils literal"&gt;&amp;amp;&amp;amp;&lt;/tt&gt; 和 &lt;tt class="docutils literal"&gt;||&lt;/tt&gt; 组合判断多个条件表达式，实现 and 和 or 的功能&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="case-switch-case"&gt;
&lt;h2 id="hidcase-switch-case"&gt;case(switch case)&lt;a class="headerlink" href="#hidcase-switch-case" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;语法:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt; &amp;lt;variable&amp;gt; in
&amp;lt;pattern 1&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &amp;lt;commands&amp;gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
&amp;lt;pattern 2&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &amp;lt;other commands&amp;gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt; in
start&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; starting
    &lt;span class="p"&gt;;;&lt;/span&gt;
stop&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; stoping
    &lt;span class="p"&gt;;;&lt;/span&gt;
restart&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; restarting
    &lt;span class="p"&gt;;;&lt;/span&gt;
*&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; don&lt;span class="se"&gt;\&amp;#39;&lt;/span&gt;t know
    &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="for"&gt;
&lt;h2 id="hidfor"&gt;for&lt;a class="headerlink" href="#hidfor" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; var in &amp;lt;list&amp;gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &amp;lt;commands&amp;gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同时 &lt;tt class="docutils literal"&gt;for&lt;/tt&gt; 也支持 &lt;tt class="docutils literal"&gt;break&lt;/tt&gt; 和 &lt;tt class="docutils literal"&gt;continue&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;names&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tom jim jake&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; name in &lt;span class="nv"&gt;$names&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; age in &lt;span class="o"&gt;{&lt;/span&gt;1..10&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$age&lt;/span&gt; -eq &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="k"&gt;continue&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;

    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$age&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$age&lt;/span&gt; -gt &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="while"&gt;
&lt;h2 id="hidwhile"&gt;while&lt;a class="headerlink" href="#hidwhile" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &amp;lt;some test&amp;gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &amp;lt;commands&amp;gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;total&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$total&lt;/span&gt; -le &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$total&lt;/span&gt;
    &lt;span class="o"&gt;((&lt;/span&gt;total++&lt;span class="o"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="until"&gt;
&lt;h2 id="hiduntil"&gt;until&lt;a class="headerlink" href="#hiduntil" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;until&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &amp;lt;some test&amp;gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &amp;lt;commands&amp;gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;total&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="k"&gt;until&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$total&lt;/span&gt; -gt &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$total&lt;/span&gt;
    &lt;span class="o"&gt;((&lt;/span&gt;total++&lt;span class="o"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="select"&gt;
&lt;h2 id="hidselect"&gt;select 单项选择&lt;a class="headerlink" href="#hidselect" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;选择功能一般用 case 语法用的多，不过 select 也可以实现，
select 的功能类似 while + case，比较适合反复询问用户选择项直到用户选择了输入了合法的选择项。&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt; var in &amp;lt;list&amp;gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &amp;lt;commands&amp;gt;
    &lt;span class="o"&gt;[&lt;/span&gt;break&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以用 break 跳出 select 以及可以通过修改 PS3 变量的值修改提示内容。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;PS3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;please choice: &amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;select&lt;/span&gt; value in &lt;span class="o"&gt;{&lt;/span&gt;1..5&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; -gt &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2 id="hidid4"&gt;函数&lt;a class="headerlink" href="#hidid4" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;语法:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function_name &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &amp;lt;commands&amp;gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# or&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; function_name &lt;span class="o"&gt;{&lt;/span&gt;
    &amp;lt;commands&amp;gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3 id="hidid5"&gt;参数&lt;a class="headerlink" href="#hidid5" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在函数体内可以通过 $1, $2, $3, ... 获取调用时传入的位置参数&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3 id="hidid6"&gt;返回值&lt;a class="headerlink" href="#hidid6" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;不支持返回值功能，不过可以用 return x 指定一个状态吗:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; 3
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;test&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;   &lt;span class="c1"&gt;# 3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3 id="hidid7"&gt;变量作用域&lt;a class="headerlink" href="#hidid7" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;默认函数类的变量是全局变量，可以通过 local 定义局部变量：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;local&amp;#39;&lt;/span&gt;

    &lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;233&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;666&amp;#39;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt;, &lt;span class="nv"&gt;$b&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;global&amp;#39;&lt;/span&gt;

&lt;span class="nb"&gt;test&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$b&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3 id="hidid8"&gt;创建跟外部命令同名的函数&lt;a class="headerlink" href="#hidid8" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; ls &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;command&lt;/span&gt; ls -lh
&lt;span class="o"&gt;}&lt;/span&gt;

ls
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;主要是不要忘了加 command，不加的话，上面的 ls 会无限递归不会按预期的调用 ls 命令。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2 id="hidid9"&gt;字符串操作&lt;a class="headerlink" href="#hidid9" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3 id="hidid10"&gt;字符串替换&lt;a class="headerlink" href="#hidid10" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id11"&gt;
&lt;h4 id="hidid11"&gt;替换子串&lt;a class="headerlink" href="#hidid11" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;test&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hello_world&amp;quot;&lt;/span&gt;
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;test&lt;/span&gt;&lt;span class="p"&gt;/_/-&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
hello-world
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;test&lt;/span&gt;&lt;span class="p"&gt;/world/bar&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
hello_bar
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h4 id="hidid12"&gt;删除前缀&lt;a class="headerlink" href="#hidid12" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;test&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foofoo_bar_foofoo&amp;quot;&lt;/span&gt;
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;test&lt;/span&gt;&lt;span class="p"&gt;#foo&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
foo_bar_foofoo
$ &lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;test&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nv"&gt;$prefix&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
foo_bar_foofoo
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h4 id="hidid13"&gt;删除后缀&lt;a class="headerlink" href="#hidid13" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;test&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foofoo_bar_foofoo&amp;quot;&lt;/span&gt;
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;test&lt;/span&gt;&lt;span class="p"&gt;%foo&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
foofoo_bar_foo
$ &lt;span class="nv"&gt;suffix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;test&lt;/span&gt;&lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="nv"&gt;$suffix&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
foofoo_bar_foo
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id14"&gt;
&lt;h3 id="hidid14"&gt;打印字符串&lt;a class="headerlink" href="#hidid14" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;推荐使用 &lt;tt class="docutils literal"&gt;printf&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hello world\\n&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hello %s\\n&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;world&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;echo&lt;/tt&gt; 也可以：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; hello
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id15"&gt;
&lt;h2 id="hidid15"&gt;文件操作&lt;a class="headerlink" href="#hidid15" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id16"&gt;
&lt;h3 id="hidid16"&gt;保存大段文本&lt;a class="headerlink" href="#hidid16" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;可以使用 &lt;tt class="docutils literal"&gt;tee&lt;/tt&gt; 和 &lt;tt class="docutils literal"&gt;EOF&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tee test.text &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;
&lt;span class="s"&gt;hello&lt;/span&gt;
&lt;span class="s"&gt;    world&lt;/span&gt;

&lt;span class="s"&gt;!&lt;/span&gt;

&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;保存包含 EOF 命令的文本可以用多个 EOF 的变种:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tee a.sh &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class="s"&gt;tee b.text &amp;lt;&amp;lt; EOF&lt;/span&gt;2
 &lt;span class="nb"&gt;echo&lt;/span&gt; hello
EOF2
EOF


$ tee a.sh &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; tee b.text &amp;lt;&amp;lt; EOF&lt;/span&gt;2
&amp;gt; &lt;span class="nb"&gt;echo&lt;/span&gt; hello
&amp;gt; EOF2
&amp;gt; EOF
tee b.text &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF2&lt;/span&gt;
&lt;span class="s"&gt;echo hello&lt;/span&gt;
&lt;span class="s"&gt;EOF2&lt;/span&gt;

$ cat a.sh
tee b.text &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF2&lt;/span&gt;
&lt;span class="s"&gt;echo hello&lt;/span&gt;
&lt;span class="s"&gt;EOF2&lt;/span&gt;

$ bash a.sh
&lt;span class="nb"&gt;echo&lt;/span&gt; hello

$ cat b.text
&lt;span class="nb"&gt;echo&lt;/span&gt; hello
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;append 更新可以使用 &lt;tt class="docutils literal"&gt;tee &lt;span class="pre"&gt;-a&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id17"&gt;
&lt;h2 id="hidid17"&gt;其他实用功能&lt;a class="headerlink" href="#hidid17" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="cd"&gt;
&lt;h3&gt;隔离 &lt;tt class="docutils literal"&gt;cd&lt;/tt&gt; 命令的干扰&lt;/h3&gt;
&lt;p&gt;可以用括号来隔离:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# pwd=/tmp&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="nb"&gt;cd&lt;/span&gt; test/
    ls   &lt;span class="c1"&gt;# pwd = /tmp/test/&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# pwd=/tmp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id18"&gt;
&lt;h3 id="hidid18"&gt;设置功能标志&lt;a class="headerlink" href="#hidid18" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一般会在脚本中设置如下标志：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt; -euo pipefail
&lt;span class="nv"&gt;IFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\n\t&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;常用的功能标志如下：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;运行的时候显示执行到那一条语句了: &lt;tt class="docutils literal"&gt;set &lt;span class="pre"&gt;-x&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat a.sh
&lt;span class="nb"&gt;set&lt;/span&gt; -x

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;

$ bash a.sh
+ &lt;span class="nb"&gt;echo&lt;/span&gt; hello
hello
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;bash &lt;span class="pre"&gt;-x&lt;/span&gt; xx.sh&lt;/tt&gt; 也可以实现同样的效果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat a.sh
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;

$ bash -x a.sh
+ &lt;span class="nb"&gt;echo&lt;/span&gt; hello
hello
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;有任何命令的退出码不是 0 就退出: &lt;tt class="docutils literal"&gt;set &lt;span class="pre"&gt;-e&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat a.sh
abc
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;

$ bash a.sh
a.sh: line 1: abc: &lt;span class="nb"&gt;command&lt;/span&gt; not found
hello

$ cat a.sh
&lt;span class="nb"&gt;set&lt;/span&gt; -e
abc
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;

$ bash a.sh
a.sh: line 2: abc: &lt;span class="nb"&gt;command&lt;/span&gt; not found
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;bash &lt;span class="pre"&gt;-e&lt;/span&gt; xx.sh&lt;/tt&gt; 也可以实现同样的效果。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;引用未定义的变量时出错并退出: &lt;tt class="docutils literal"&gt;set &lt;span class="pre"&gt;-u&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat a.sh
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$abc&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; hello

$ bash a.sh

hello

$ cat a.sh
&lt;span class="nb"&gt;set&lt;/span&gt; -u
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$abc&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; hello

$ bash a.sh
a.sh: line 2: abc: unbound variable
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;bash &lt;span class="pre"&gt;-u&lt;/span&gt; xx.sh&lt;/tt&gt; 也可以实现同样的效果。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;管道命令中有一个命令失败整个管道操作的退出码将是失败的那个命令的退出码,
未设置这个标志时是最后一个操作的退出码: &lt;tt class="docutils literal"&gt;set &lt;span class="pre"&gt;-o&lt;/span&gt; pipefail&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat a.sh
la la la &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;aa&amp;#39;&lt;/span&gt;

$ bash a.sh
a.sh: line 1: la: &lt;span class="nb"&gt;command&lt;/span&gt; not found
aa

$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;
0

$ cat a.sh
&lt;span class="nb"&gt;set&lt;/span&gt; -o pipefail
la la la &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;aa&amp;#39;&lt;/span&gt;

$ bash a.sh
a.sh: line 2: la: &lt;span class="nb"&gt;command&lt;/span&gt; not found
aa

$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;
127
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;设置单词切分使用的分隔符，默认是 &lt;tt class="docutils literal"&gt;$' \n\t'&lt;/tt&gt; （空格、换行、制表符），
可以通过 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;IFS=$'\n\t'&lt;/span&gt;&lt;/tt&gt; 设置为换行和制表符:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat a.sh
&lt;span class="nv"&gt;names&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;foo bar&amp;quot;&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;foobar tom&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;names&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;

$ bash a.sh
foo
bar
foobar
tom

$ cat a.sh
&lt;span class="nv"&gt;names&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;foo bar&amp;quot;&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;foobar tom&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;IFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\n\t&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;names&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;

$ bash a.sh
foo bar
foobar tom
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更多的 set 支持的标志可以查看 &lt;a class="reference external" href="https://www.gnu.org/software/bash/manual/bashref.html#The-Set-Builtin"&gt;Bash Reference Manual&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id19"&gt;
&lt;h2 id="hidid19"&gt;参考资料&lt;a class="headerlink" href="#hidid19" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://ryanstutorials.net/bash-scripting-tutorial/bash-if-statements.php"&gt;If Statements - Bash Scripting Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://ryanstutorials.net/bash-scripting-tutorial/bash-loops.php"&gt;Loops - Bash Scripting Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.gnu.org/software/bash/manual/bashref.html#The-Set-Builtin"&gt;Bash Reference Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://redsymbol.net/articles/unofficial-bash-strict-mode/"&gt;Use the Unofficial Bash Strict Mode (Unless You Looove Debugging)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="bash"></category><category term="shell"></category></entry><entry><title>tcpdump 常用操作</title><link href="https://mozillazg.com/2018/01/tcpdump-common-useful-examples-cookbook.html" rel="alternate"></link><updated>2018-01-14T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2018-01-14:2018/01/tcpdump-common-useful-examples-cookbook.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2 id="hidid1"&gt;常用参数&lt;a class="headerlink" href="#hidid1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-i&lt;/span&gt; interface&lt;/tt&gt;: 设置抓取的网卡名（可以使用 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-i&lt;/span&gt; any&lt;/tt&gt; 抓取所有网卡的数据包）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -i eth0
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-D&lt;/span&gt;&lt;/tt&gt;: 列出可用的网卡列表&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo tcpdump -D
1.eth0
2.nflog &lt;span class="o"&gt;(&lt;/span&gt;Linux netfilter log &lt;span class="o"&gt;(&lt;/span&gt;NFLOG&lt;span class="o"&gt;)&lt;/span&gt; interface&lt;span class="o"&gt;)&lt;/span&gt;
3.nfqueue &lt;span class="o"&gt;(&lt;/span&gt;Linux netfilter queue &lt;span class="o"&gt;(&lt;/span&gt;NFQUEUE&lt;span class="o"&gt;)&lt;/span&gt; interface&lt;span class="o"&gt;)&lt;/span&gt;
4.usbmon1 &lt;span class="o"&gt;(&lt;/span&gt;USB bus number 1&lt;span class="o"&gt;)&lt;/span&gt;
5.any &lt;span class="o"&gt;(&lt;/span&gt;Pseudo-device that captures on all interfaces&lt;span class="o"&gt;)&lt;/span&gt;
6.lo
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-w&lt;/span&gt; file&lt;/tt&gt;: 把捕获的包数据写入到文件中（可以使用 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-w&lt;/span&gt; -&lt;/tt&gt; 输出到标准输出）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -i eth0 -w debug.cap
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-C&lt;/span&gt; size&lt;/tt&gt;: 使用 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-w&lt;/span&gt;&lt;/tt&gt; 写入文件时，限制文件的最大大小，超出时新开一个文件（单位是 1,000,000 bytes）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo tcpdump -i eth0 -w debug.cap -C 1
$ ls debug* -l
-rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; tcpdump tcpdump &lt;span class="m"&gt;1000956&lt;/span&gt; Jan &lt;span class="m"&gt;14&lt;/span&gt; 10:16 debug.cap
-rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; tcpdump tcpdump &lt;span class="m"&gt;1000323&lt;/span&gt; Jan &lt;span class="m"&gt;14&lt;/span&gt; 10:32 debug.cap1
-rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; tcpdump tcpdump &lt;span class="m"&gt;1000017&lt;/span&gt; Jan &lt;span class="m"&gt;14&lt;/span&gt; 10:51 debug.cap2
-rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; tcpdump tcpdump  &lt;span class="m"&gt;970705&lt;/span&gt; Jan &lt;span class="m"&gt;14&lt;/span&gt; 11:08 debug.cap3
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-r&lt;/span&gt; file&lt;/tt&gt;: 从文件中读取包数据&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -r debug.cap
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-v&lt;/span&gt;&lt;/tt&gt;: 启用 verbose output，抓包时输出包的附加信息（可以使用多个 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-v&lt;/span&gt;&lt;/tt&gt;: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-v&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-vv&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-vvv&lt;/span&gt;&lt;/tt&gt; 多个 &lt;tt class="docutils literal"&gt;v&lt;/tt&gt; 会显示更多更详细的信息）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -v
tcpdump -vv
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-A&lt;/span&gt;&lt;/tt&gt;: 以 ASCII 码方式显示每一个数据包(不会显示数据包中链路层头部信息). 在抓取包含网页数据的数据包时, 可方便查看数据&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-x&lt;/span&gt;&lt;/tt&gt;: 打印每个包的头部数据, 同时会以16进制打印出每个包的数据(但不包括连接层的头部)&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-xx&lt;/span&gt;&lt;/tt&gt;: 打印每个包的头部数据, 同时会以16进制打印出每个包的数据, 其中包括数据链路层的头部&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-X&lt;/span&gt;&lt;/tt&gt;: 打印每个包的头部数据, 同时会以16进制和 ASCII 码形式打印出每个包的数据(但不包括连接层的头部)&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-XX&lt;/span&gt;&lt;/tt&gt;: 打印每个包的头部数据, 同时会以16进制和 ASCII 码形式打印出每个包的数据, 其中包括数据链路层的头部&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-c&lt;/span&gt; count&lt;/tt&gt;: 设置抓取到多少个包后就退出&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -i eth0 -c 100
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-n&lt;/span&gt;&lt;/tt&gt;: 不要把地址转换为主机名（直接显示 ip 不要解析为域名）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -n
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-nn&lt;/span&gt;&lt;/tt&gt;: 不要把转换协议和端口号（直接显示协议和端口号，不要转换为协议名称，比如 http）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -nn
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-s&lt;/span&gt; snaplen&lt;/tt&gt;: 设置 tcpdump 的数据包抓取长度为 snaplen , 为 0 时表示让 tcpdump 自动选择合适的长度来抓取数据包.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -s 0
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-S&lt;/span&gt;&lt;/tt&gt;: 打印TCP 数据包的顺序号时, 使用绝对的顺序号, 而不是相对的顺序号.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump -S
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-Z&lt;/span&gt; user&lt;/tt&gt;: 使tcpdump 放弃自己的超级权限(如果以root用户启动tcpdump, tcpdump将会有超级用户权限), 并把当前tcpdump的用户ID设置为user, 组ID设置为user首要所属组的ID&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo tcpdump -Z user2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;常用的参数组合:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo tcpdump -i eth0 -nnS -s &lt;span class="m"&gt;0&lt;/span&gt; -c &lt;span class="m"&gt;100&lt;/span&gt; -Avvv &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;expression&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;
sudo tcpdump -i eth0 -nnS -s &lt;span class="m"&gt;1024&lt;/span&gt; -c &lt;span class="m"&gt;100&lt;/span&gt; -Avvv &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;expression&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;
sudo tcpdump -i eth0 -nnS -s &lt;span class="m"&gt;1024&lt;/span&gt; -C &lt;span class="m"&gt;10&lt;/span&gt; -c &lt;span class="m"&gt;10000&lt;/span&gt; -v -w debug.cap &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;expression&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;默认 tcpdump 会抓取所有的数据，可以通过指定过滤规则来过滤数据包。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2 id="hidid2"&gt;常用过滤规则&lt;a class="headerlink" href="#hidid2" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;过滤规则一般包含三种修饰符的组合：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;type: 指定id 所代表的对象类型, id可以是名字也可以是数字. 可选的对象类型有: host, net, port 以及portrange，默认是 host&lt;/li&gt;
&lt;li&gt;dir: 描述id 所对应的传输方向, 即发往id 还是从id 接收（而id 到底指什么需要看其前面的type 修饰符）.可取的方向为: src, dst, src or dst, src and dst&lt;/li&gt;
&lt;li&gt;proto: 描述id 所属的协议. 可选的协议有: ether, fddi, tr, wlan, ip, ip6, arp, rarp, decnet, tcp以及 upd&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过括号(&lt;tt class="docutils literal"&gt;\( xxx \)&lt;/tt&gt;) 和 bool 操作符可以组合多种过滤规则，一对括号是一组:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;否定操作: &lt;tt class="docutils literal"&gt;!&lt;/tt&gt; 或 &lt;tt class="docutils literal"&gt;not&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;与操作: &lt;tt class="docutils literal"&gt;&amp;amp;&amp;amp;&lt;/tt&gt; 或 &lt;tt class="docutils literal"&gt;and&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;或操作: &lt;tt class="docutils literal"&gt;||&lt;/tt&gt; 或 &lt;tt class="docutils literal"&gt;or&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;详情见文档：&lt;a class="reference external" href="http://www.tcpdump.org/manpages/pcap-filter.7.html"&gt;Manpage of PCAP-FILTER&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面列出一下常用的过滤规则:&lt;/p&gt;
&lt;div class="section" id="ip"&gt;
&lt;h3 id="hidip"&gt;过滤 ip/域名&lt;a class="headerlink" href="#hidip" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;过滤目标域名是 baidu.com:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
dst host baidu.com
&lt;/pre&gt;
&lt;p&gt;源 ip 或者目标 ip 是 192.168.1.3:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
host 192.168.1.3
&lt;/pre&gt;
&lt;p&gt;源 ip 是 192.168.1.3:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
src host 192.168.1.3
&lt;/pre&gt;
&lt;p&gt;目标 ip 是 192.168.1.3:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
dst host 192.168.1.3
&lt;/pre&gt;
&lt;p&gt;过滤范围内的 ip /网段 ip:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
net 192.168.0.0/24
net 192.168.0.0 mask 255.255.255.0
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3 id="hidid3"&gt;过滤端口&lt;a class="headerlink" href="#hidid3" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;过滤 80 端口:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
port 80
&lt;/pre&gt;
&lt;p&gt;排除端口:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
not port 80
host www.example.com and not \(port 80 or port 25\)
host www.example.com and not port 80 and not port 25
&lt;/pre&gt;
&lt;p&gt;端口范围:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
(tcp[0:2] &amp;gt; 1500 and tcp[0:2] &amp;lt; 1550) or (tcp[2:2] &amp;gt; 1500 and tcp[2:2] &amp;lt; 1550)

tcp portrange 1501-1549
&lt;/pre&gt;
&lt;p&gt;DNS 53 端口:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
port 53
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3 id="hidid4"&gt;过滤协议&lt;a class="headerlink" href="#hidid4" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ipv4: &lt;tt class="docutils literal"&gt;ip&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;ipv6: &lt;tt class="docutils literal"&gt;ip6&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;tcp: &lt;tt class="docutils literal"&gt;tcp&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;udp: &lt;tt class="docutils literal"&gt;udp&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;arp: &lt;tt class="docutils literal"&gt;arp&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;icmp: &lt;tt class="docutils literal"&gt;icmp&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3 id="hidid5"&gt;过滤协议头&lt;a class="headerlink" href="#hidid5" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;过滤 tcp SYN 消息包:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
'tcp[tcpflags] &amp;amp; (tcp-syn) != 0'
&lt;/pre&gt;
&lt;p&gt;过滤 tcp SYN/ACK 消息包:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
'tcp[tcpflags] &amp;amp; (tcp-syn|tcp-ack) != 0'
&lt;/pre&gt;
&lt;p&gt;常用的 tcp 标记:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
tcp-fin, tcp-syn, tcp-rst, tcp-push, tcp-ack, tcp-urg, tcp-ece, tcp-cwr
&lt;/pre&gt;
&lt;p&gt;源端口大于1024的TCP数据包:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
'tcp[0:2] &amp;gt; 1024'
&lt;/pre&gt;
&lt;p&gt;注意要用引号引起来。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="http"&gt;
&lt;h3 id="hidhttp"&gt;过滤 HTTP&lt;a class="headerlink" href="#hidhttp" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;过滤 GET 请求:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
'tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2):4] = 0x47455420'
&lt;/pre&gt;
&lt;p&gt;上面的 &lt;tt class="docutils literal"&gt;0x47455420&lt;/tt&gt; 是 &lt;tt class="docutils literal"&gt;'GET '&lt;/tt&gt; 的 16 进制:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt;&amp;gt; list(map(hex, [ord(x) for x in 'GET ']))
['0x47', '0x45', '0x54', '0x20']
&lt;/pre&gt;
&lt;p&gt;过滤 POST 请求:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
'tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2):4] = 0x504f5354 &amp;amp;&amp;amp; tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2) + 4:1] = 0x20'

&amp;gt;&amp;gt;&amp;gt; list(map(hex, [ord(x) for x in 'POST ']))
['0x50', '0x4f', '0x53', '0x54', '0x20']
&lt;/pre&gt;
&lt;p&gt;过滤 PUT 请求:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
'tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2):4] = 0x50555420'

&amp;gt;&amp;gt;&amp;gt; list(map(hex, [ord(x) for x in 'PUT ']))
['0x50', '0x55', '0x54', '0x20']
&lt;/pre&gt;
&lt;p&gt;过滤 PATH 请求:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
'tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2):4] = 0x50415443 &amp;amp;&amp;amp; tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2) + 4:2] = 0x4820'

&amp;gt;&amp;gt;&amp;gt; list(map(hex, [ord(x) for x in 'PATCH ']))
['0x50', '0x41', '0x54', '0x43', '0x48', '0x20']
&lt;/pre&gt;
&lt;p&gt;之所以拆分成了多个条件是因为 &lt;tt class="docutils literal"&gt;tcpdump: data size must be 1, 2, or 4&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;过滤 DELETE 请求:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
'tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2):4] = 0x44454c45 &amp;amp;&amp;amp; tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2) + 4:2] = 0x5445 &amp;amp;&amp;amp; tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2) + 6:1] = 0x20'

&amp;gt;&amp;gt;&amp;gt; list(map(hex, [ord(x) for x in 'DELETE ']))
['0x44', '0x45', '0x4c', '0x45', '0x54', '0x45', '0x20']
&lt;/pre&gt;
&lt;p&gt;过滤 HEAD 请求:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
'tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2):4] = 0x48454144 &amp;amp;&amp;amp; tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2) + 4:1] = 0x20'

&amp;gt;&amp;gt;&amp;gt; list(map(hex, [ord(x) for x in 'HEAD ']))
['0x48', '0x45', '0x41', '0x44', '0x20']
&lt;/pre&gt;
&lt;p&gt;过滤 OPTIONS 请求:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
'tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2):4] = 0x4f505449 &amp;amp;&amp;amp; tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2) + 4:4] = 0x4f4e5320'

&amp;gt;&amp;gt;&amp;gt; list(map(hex, [ord(x) for x in 'OPTIONS ']))
['0x4f', '0x50', '0x54', '0x49', '0x4f', '0x4e', '0x53', '0x20']
&lt;/pre&gt;
&lt;p&gt;过滤 HTTP 响应 (&lt;tt class="docutils literal"&gt;HTTP/1.&lt;/tt&gt;):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
'tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2):4] = 0x48545450 &amp;amp;&amp;amp; tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2) + 4:2] = 0x2f31 &amp;amp;&amp;amp; tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2) + 6:1] = 0x2e'
&lt;/pre&gt;
&lt;p&gt;HTTP request header &amp;amp;&amp;amp; body &amp;amp;&amp;amp; response header &amp;amp;&amp;amp; body:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
'(((ip[2:2] - ((ip[0]&amp;amp;0xf)&amp;lt;&amp;lt;2)) - ((tcp[12]&amp;amp;0xf0)&amp;gt;&amp;gt;2)) != 0)'
&lt;/pre&gt;
&lt;p&gt;自动生成 HTTP 相关过滤规则的脚本: &lt;a class="reference external" href="https://www.wireshark.org/tools/string-cf.html"&gt;https://www.wireshark.org/tools/string-cf.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上面的规则可以通过括号和操作符进行各种组合，从而组合出复杂的过滤规则。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo tcpdump host 192.168.8.3 -Avv
sudo tcpdump dst host baidu.com and dst port &lt;span class="m"&gt;80&lt;/span&gt; -i eth0 -vv
sudo tcpdump dst host baidu.com and not dst port &lt;span class="m"&gt;80&lt;/span&gt; -i eth0 -vv
sudo tcpdump dst host baidu.com and not &lt;span class="se"&gt;\(&lt;/span&gt;dst port &lt;span class="m"&gt;80&lt;/span&gt; or dst port 443&lt;span class="se"&gt;\)&lt;/span&gt; -i en0 -vv
sudo tcpdump dst host baidu.com and &lt;span class="s1"&gt;&amp;#39;tcp[tcpflags] &amp;amp; (tcp-syn) != 0&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2 id="hidid6"&gt;参考资料&lt;a class="headerlink" href="#hidid6" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wiki.wireshark.org/CaptureFilters"&gt;CaptureFilters - The Wireshark Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.tcpdump.org/manpages/pcap-filter.7.html"&gt;Manpage of PCAP-FILTER&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.cnblogs.com/ggjucheng/archive/2012/01/14/2322659.html"&gt;Linux tcpdump命令详解 - ggjucheng - 博客园&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.zioer.org/2017/07/14/linux-command-for-tcpdump/"&gt;tcpdump命令常用方法 | 卡卡罗特&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://linuxwiki.github.io/NetTools/tcpdump.html#210http-get"&gt;tcpdump - Linux Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://blog.wains.be/2007/2007-10-01-tcpdump-advanced-filters/"&gt;Tcpdump advanced filters - Sebastien Wains - A blog about Linux and Open Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/4777042/can-i-use-tcpdump-to-get-http-requests-response-header-and-response-body"&gt;android - Can I use tcpdump to get HTTP requests, response header and response body? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="tcpdump"></category></entry><entry><title>一种解决 HAProxy 节点网络异常（sendmsg: Invalid argument, Connection timed out ）的办法</title><link href="https://mozillazg.com/2017/10/linux-a-way-to-fix-haproxy-network-connection-timeout-ping-sendmsg-Invalid-argument-socket-errno-110-connection-timed-out.html" rel="alternate"></link><updated>2017-10-21T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2017-10-21:2017/10/linux-a-way-to-fix-haproxy-network-connection-timeout-ping-sendmsg-Invalid-argument-socket-errno-110-connection-timed-out.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2 id="hidid1"&gt;问题&lt;a class="headerlink" href="#hidid1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;之前连接一个 HAProxy 前端服务时总是时不时出现 &lt;tt class="docutils literal"&gt;[Errno 110] Connection timed out&lt;/tt&gt; ，并且本地 ping 服务器丢包率特别高。
到服务器上看了以后，发现 &lt;tt class="docutils literal"&gt;ping 127.0.0.1&lt;/tt&gt; 的丢包率也特别高，而且 ping
命令还出现 &lt;tt class="docutils literal"&gt;ping: sendmsg: Invalid argument&lt;/tt&gt; 错误:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
64 bytes from 127.0.0.1: icmp_seq=150 ttl=64 time=0.050 ms
64 bytes from 127.0.0.1: icmp_seq=151 ttl=64 time=0.062 ms
ping: sendmsg: Invalid argument
ping: sendmsg: Invalid argument
ping: sendmsg: Invalid argument
ping: sendmsg: Invalid argument
ping: sendmsg: Invalid argument
ping: sendmsg: Invalid argument
64 bytes from 127.0.0.1: icmp_seq=158 ttl=64 time=0.962 ms
64 bytes from 127.0.0.1: icmp_seq=159 ttl=64 time=0.033 ms
&lt;/pre&gt;
&lt;p&gt;查看 &lt;tt class="docutils literal"&gt;dmesg &lt;span class="pre"&gt;-H&lt;/span&gt;&lt;/tt&gt; 有很多类似 &lt;tt class="docutils literal"&gt;net_ratelimit: 478 callbacks suppressed&lt;/tt&gt; 的记录:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
```
[  +6.555833] net_ratelimit: 478 callbacks suppressed
[Oct19 11:08] net_ratelimit: 57 callbacks suppressed
```
&lt;/pre&gt;
&lt;p&gt;需要提一下的就是，这个 HAProxy 服务在一个非常大的内网(large subnets)里，
内网里很多机器都会去连接这个服务。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2 id="hidid2"&gt;解决方法&lt;a class="headerlink" href="#hidid2" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;修改了一下 sysctl, 加大了 ARP cache:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo sysctl -w net.ipv4.neigh.default.gc_thresh1=1024
$ sudo sysctl -w net.ipv4.neigh.default.gc_thresh2=2048
$ sudo sysctl -w net.ipv4.neigh.default.gc_thresh3=4096
$ sudo sysctl -p
$ sudo sysctl -a |grep net.ipv4.neigh.default.gc_thresh
&lt;/pre&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3 id="hidid3"&gt;为什么要修改为上面的值？&lt;a class="headerlink" href="#hidid3" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;先来看看这几个配置项的含义(摘自 &lt;a class="reference external" href="https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt"&gt;https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt&lt;/a&gt;):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
neigh/default/gc_thresh1 - INTEGER
    Minimum number of entries to keep.  Garbage collector will not
    purge entries if there are fewer than this number.
    Default: 128

neigh/default/gc_thresh2 - INTEGER
    Threshold when garbage collector becomes more aggressive about
    purging entries. Entries older than 5 seconds will be cleared
    when over this number.
    Default: 512

neigh/default/gc_thresh3 - INTEGER
    Maximum number of neighbor entries allowed.  Increase this
    when using large numbers of interfaces and when communicating
    with large numbers of directly-connected peers.
    Default: 1024
&lt;/pre&gt;
&lt;p&gt;ARP 相关的 &lt;a class="reference external" href="https://www.ibm.com/developerworks/community/wikis/home?lang=en#!/wiki/Welcome%20to%20High%20Performance%20Computing%20(HPC)%20Central/page/Linux%20System%20Tuning%20Recommendations"&gt;简单解释就是&lt;/a&gt; (详见 &lt;a class="reference external" href="http://man7.org/linux/man-pages/man7/arp.7.html"&gt;arp(7)&lt;/a&gt;):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;net.ipv4.neigh.default.gc_thresh1&lt;/tt&gt;: min IPV4 entries to keep in ARP cache -  garbage collection never runs if this many or less entries are in cache&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;net.ipv4.neigh.default.gc_thresh2&lt;/tt&gt;: IPV4 entries allowed in ARP cache before garbage collection will be scheduled in 5 seconds&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;net.ipv4.neigh.default.gc_thresh3&lt;/tt&gt;: maximum IPV4 entries allowed in ARP cache; garbage collection runs when this many entries reached&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后我们通过 &lt;tt class="docutils literal"&gt;arp &lt;span class="pre"&gt;-an|wc&lt;/span&gt; &lt;span class="pre"&gt;-l&lt;/span&gt;&lt;/tt&gt; 查看当前记录的 ARP 记录的数量:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ arp -an|wc -l
1108
&lt;/pre&gt;
&lt;p&gt;或者通过 &lt;tt class="docutils literal"&gt;ip &lt;span class="pre"&gt;-4&lt;/span&gt; neigh show nud all | wc &lt;span class="pre"&gt;-l&lt;/span&gt;&lt;/tt&gt; 查看当前 IPv4 的 ARP 记录的数量:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ ip -4 neigh show nud all | wc -l
1112
&lt;/pre&gt;
&lt;p&gt;可以看到上面的值比 &lt;tt class="docutils literal"&gt;net.ipv4.neigh.default.gc_thresh3&lt;/tt&gt; 的默认值 &lt;tt class="docutils literal"&gt;1024&lt;/tt&gt; 要大，
&amp;lt;del&amp;gt;*此时就会进行 gc 操作，如果 gc 操作持续时间太久就会导致新的 ARP 记录无法被创建，进而导致 ARP 通信无法正常完成，TCP 之类的操作更加就无法完成了(有空的时候再仔细求证这个理解...)* ，&amp;lt;/del&amp;gt; 所以我们要修改为更大的值。&lt;/p&gt;
&lt;p&gt;如果上面的值特别大，可以考虑配置再大一点的值，比如:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
net.ipv4.neigh.default.gc_thresh1 = 8192
net.ipv4.neigh.default.gc_thresh2 = 32768
net.ipv4.neigh.default.gc_thresh3 = 65536
&lt;/pre&gt;
&lt;p&gt;注：上面修改的都是 IPv4 相关的配置，如果有用到 IPv6 网络的话可以把对应的配置项也修改一下。
注：如果机器性能特别好或者比较介意 gc，可以考虑把值调到非常非常大，然后禁用 gc:
&lt;tt class="docutils literal"&gt;net.ipv4.neigh.default.gc_interval&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;net.ipv4.neigh.default.gc_stale_time&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2 id="hidid5"&gt;参考资料&lt;a class="headerlink" href="#hidid5" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bugzilla.redhat.com/show_bug.cgi?id=1316981"&gt;Bug 1316981 – Arp table kernel tuning necessary for large neutron environments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bugzilla.redhat.com/show_bug.cgi?id=1498213"&gt;Bug 1498213 – Increase ARP cache size on loadbalancers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.4/html/installation_and_configuration/setting-up-a-router#deploy-router-arp-cach-tuning-for-large-scale-clusters"&gt;Chapter&amp;nbsp;4.&amp;nbsp;Setting up a Router - Red Hat Customer Portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.petri.com/csc_arp_cache"&gt;ARP cache: What is it and how can it help you? - Petri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt"&gt;kernel.org/doc/Documentation/networking/ip-sysctl.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.ibm.com/developerworks/community/wikis/home?lang=en#!/wiki/Welcome%20to%20High%20Performance%20Computing%20(HPC)%20Central/page/Linux%20System%20Tuning%20Recommendations"&gt;Welcome to High Performance Computing (HPC) Central : Linux System Tuning Recommendations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://networkengineering.stackexchange.com/questions/2327/what-happens-when-the-arp-cache-overflows"&gt;router - What happens when the ARP cache overflows? - Network Engineering Stack Exchange&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://packetfence.org/support/faq/article/solving-neighbour-table-overflow-errors-large-subnets.html?no_cache=1"&gt;PacketFence: Solving neighbour table overflow errors (large subnets)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.e-rave.nl/kernel-neighbour-table-overflow"&gt;Kernel: Neighbour table overflow | Mark's Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://man7.org/linux/man-pages/man7/arp.7.html"&gt;arp(7) - Linux manual page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://learningnetwork.cisco.com/thread/35629"&gt;ARP and ARP Cache - 35629 - The Cisco Learning Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.tcpipguide.com/free/t_ARPCaching.htm"&gt;The TCP/IP Guide - ARP Caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Address_Resolution_Protocol"&gt;Address Resolution Protocol - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="ping"></category><category term="sysctl"></category><category term="HAProxy"></category><category term="ARP"></category></entry><entry><title>如何在 centos 7 上编译 boost</title><link href="https://mozillazg.com/2016/04/linux-how-to-build-boost.python-on-centos7.md.html" rel="alternate"></link><updated>2016-04-17T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2016-04-17:2016/04/linux-how-to-build-boost.python-on-centos7.md.html</id><summary type="html">&lt;p&gt;本文主要记录一下如何在 centos 7 上编译 boost 库，同时也适用于 ubuntu（安装系统包的命令需要改为 &lt;code&gt;apt-get&lt;/code&gt;）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装编译工具 &lt;code&gt;clang&lt;/code&gt; ，也可以使用 &lt;code&gt;gcc&lt;/code&gt; 代替，只需要将下面命令中的 &lt;code&gt;clang&lt;/code&gt; 替换为 &lt;code&gt;gcc&lt;/code&gt; 即可&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install clang
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载 boost: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载 boost_1_60_0.tar.gz( &lt;a href="http://sourceforge.net/projects/boost/files/boost/1.60.0/"&gt;http://sourceforge.net/projects/boost/files/boost/1.60.0/&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;解压: &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mv boost_1_60_0.tar.gz /opt/
cd /opt/
tar zxvf boost_1_60_0.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编译 boost（同时编译所有的 boost lib， &lt;strong&gt;内存和 CPU 如果不够的话可能会编译失败甚至导致系统死机&lt;/strong&gt; ）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd boost_1_60_0/
# 可以通过 ./bootstrap.sh --help 查看更多选项
./bootstrap.sh  --with-toolset=clang --with-libraries=all
./b2
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编译安装 boost.build&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd toos/build/
./bootstrap.sh  --with-toolset=clang
./b2
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置 ld&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo &amp;quot;/opt/boost_1_60_0/stage/lib&amp;quot; &amp;gt;&amp;gt; /etc/ld.so.conf
ldconfig
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;需要记下的几个路径，代码编译的时候可能会用到&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* boost 目录: `/opt/boost_1_60_0/`
* lib 目录:  `/opt/boost_1_60_0/stage/lib`
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;参考资料:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.boost.org/doc/libs/1_60_0/more/getting_started/unix-variants.html"&gt;Boost Getting Started on Unix Variants - 1.60.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="boost"></category><category term="python"></category><category term="c++"></category></entry><entry><title>使用 wireshark 查看 tcpdump 的抓包结果</title><link href="https://mozillazg.com/2015/05/open-tcpdump-result-with-wireshark-gui.html" rel="alternate"></link><updated>2015-05-10T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-05-10:2015/05/open-tcpdump-result-with-wireshark-gui.html</id><summary type="html">&lt;p&gt;本文将讲解如何使用 wireshark 查看 tcpdump 的抓包结果&lt;/p&gt;
&lt;h2&gt;保存 tcpdump 抓包结果&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo tcpdump -i eth0 -w dump.pcap
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; 指定要抓取的网卡&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt; 指定结果保存位置&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo tcpdump -i eth0 -w dump.pcap -v
tcpdump: listening on eth0, link-type EN10MB &lt;span class="o"&gt;(&lt;/span&gt;Ethernet&lt;span class="o"&gt;)&lt;/span&gt;, capture size &lt;span class="m"&gt;65535&lt;/span&gt; bytes
Got 15
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;-v&lt;/code&gt; 主要是为了得到 &lt;code&gt;Got 15&lt;/code&gt; 这个数，当想要停止的时候，按下 &lt;code&gt;ctrl + c&lt;/code&gt; 就可以了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo tcpdump -i eth0 -w dump.pcap -v
tcpdump: listening on eth0, link-type EN10MB &lt;span class="o"&gt;(&lt;/span&gt;Ethernet&lt;span class="o"&gt;)&lt;/span&gt;, capture size &lt;span class="m"&gt;65535&lt;/span&gt; bytes
^C71 packets captured
&lt;span class="m"&gt;71&lt;/span&gt; packets received by filter
&lt;span class="m"&gt;0&lt;/span&gt; packets dropped by kernel
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后用 &lt;code&gt;sz&lt;/code&gt; 命令或其他方式把 dump.pcap 文件下载到本地：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sz dump.pcap
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;在 wireshark 中打开&lt;/h2&gt;
&lt;p&gt;【file】—【open】选中 dump.pcap 文件就可以查看抓包结果了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="open.png" src="/static/images/tcpdump-wireshark/open.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="open2.png" src="/static/images/tcpdump-wireshark/open2.png" /&gt;&lt;/p&gt;
&lt;p&gt;顺便说一个查看 http 请求和响应的方法:&lt;/p&gt;
&lt;p&gt;&lt;img alt="view-http.png" src="/static/images/tcpdump-wireshark/view-http.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="http.png" src="/static/images/tcpdump-wireshark/http.png" /&gt;&lt;/p&gt;
&lt;h2&gt;其他 tcpdump 技巧&lt;/h2&gt;
&lt;p&gt;抓取本机进程发往指定端口的请求:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo tcpdump dst port 8000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;过滤 http 请求和响应:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo tcpdump host 3sd.me and port 80 -v
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;过滤 GET 请求:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo tcpdump host 3sd.me and port 80 and &amp;#39;tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2):4] = 0x47455420&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;过滤 POST 请求：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo tcpdump host 3sd.me and port 80 and &amp;#39;tcp dst port 80 and (tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2):4] = 0x504f5354)&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用 &lt;code&gt;-A&lt;/code&gt; 参数使返回值人类可读&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo tcpdump -A host 3sd.me and port &lt;span class="m"&gt;80&lt;/span&gt; and &lt;span class="s1"&gt;&amp;#39;tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2):4] = 0x47455420&amp;#39;&lt;/span&gt;
tcpdump: verbose output suppressed, use -v or -vv &lt;span class="k"&gt;for&lt;/span&gt; full protocol decode
listening on eth0, link-type EN10MB &lt;span class="o"&gt;(&lt;/span&gt;Ethernet&lt;span class="o"&gt;)&lt;/span&gt;, capture size &lt;span class="m"&gt;65535&lt;/span&gt; bytes
18:41:59.219052 IP xxx.xxx.xxx.xxxx &amp;gt; 3sd.me.http: Flags &lt;span class="o"&gt;[&lt;/span&gt;P.&lt;span class="o"&gt;]&lt;/span&gt;, seq 2875869606:2875869979, ack 2796606839, win 64240, length 373
E.....@.r..Gh..j..P....P.jI....wP....7..GET /JbVGP HTTP/1.1
Host: 3sd.me
Connection: Keep-Alive
User-Agent: Mozilla/5.0 &lt;span class="o"&gt;(&lt;/span&gt;Macintosh&lt;span class="p"&gt;;&lt;/span&gt; Intel Mac OS X 10.9&lt;span class="p"&gt;;&lt;/span&gt; rv:35.0&lt;span class="o"&gt;)&lt;/span&gt; Gecko/20100101 Firefox/35.0
Accept: text/html, application/xml&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;q&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;q&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0.1
Accept-Language: en
Accept-Encoding: gzip, deflate
Referer: http://3sd.me/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;更多过滤规则请参考 https://wiki.wireshark.org/CaptureFilters&lt;/p&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.wireshark.org/CaptureFilters"&gt;https://wiki.wireshark.org/CaptureFilters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wireshark.org/docs/wsug_html_chunked/AppToolstcpdump.html"&gt;https://www.wireshark.org/docs/wsug_html_chunked/AppToolstcpdump.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wireshark.org/tools/string-cf.html"&gt;https://www.wireshark.org/tools/string-cf.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sites.google.com/site/jimmyxu101/testing/use-tcpdump-to-monitor-http-traffic"&gt;https://sites.google.com/site/jimmyxu101/testing/use-tcpdump-to-monitor-http-traffic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/4777042/can-i-use-tcpdump-to-get-http-requests-response-header-and-response-body"&gt;http://stackoverflow.com/questions/4777042/can-i-use-tcpdump-to-get-http-requests-response-header-and-response-body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/252179/how-to-inspect-outgoing-http-requests-of-a-single-application"&gt;http://askubuntu.com/questions/252179/how-to-inspect-outgoing-http-requests-of-a-single-application&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="tcpdump"></category><category term="wireshark"></category></entry><entry><title>[linx]解决编译 hping 时出现 "undefined reference to `hping_script'" 错误</title><link href="https://mozillazg.com/2015/03/linux-centos5-build-hping-error-undefined-reference-to-hping_script.html" rel="alternate"></link><updated>2015-03-08T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-03-08:2015/03/linux-centos5-build-hping-error-undefined-reference-to-hping_script.html</id><summary type="html">&lt;p&gt;错误信息如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo make
...
pd.o -L/usr/local/lib -lpcap  -ltcl8.4.threads -lm -lpthread
main.o: In &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;main&lt;span class="s1"&gt;&amp;#39;:&lt;/span&gt;
&lt;span class="s1"&gt;/xxx/main.c:186: undefined reference to `hping_script&amp;#39;&lt;/span&gt;
collect2: ld returned &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; status
make: *** &lt;span class="o"&gt;[&lt;/span&gt;hping3&lt;span class="o"&gt;]&lt;/span&gt; Error 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解决: 执行 &lt;code&gt;make clean&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo make clean
rm -rf hping3 *.o libars.a
$ sudo make
...
This binary is TCL scripting capable
use &lt;span class="sb"&gt;`&lt;/span&gt;make strip&lt;span class="s1"&gt;&amp;#39; to strip hping3 binary&lt;/span&gt;
&lt;span class="s1"&gt;use `make install&amp;#39;&lt;/span&gt; to install hping3
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://wiki.hping.org/20"&gt;http://wiki.hping.org/20&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>[linux]查看通过 yum 安装的包的文件安装位置</title><link href="https://mozillazg.com/2015/02/linux-find-files-from-installed-yum-package.html" rel="alternate"></link><updated>2015-02-28T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-02-28:2015/02/linux-find-files-from-installed-yum-package.html</id><summary type="html">&lt;p&gt;可以通过 &lt;code&gt;yum-utils&lt;/code&gt; 工具查看所安装的包的文件位置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum install yum-utils
$ sudo repoquery --list python27
/usr/bin/pydoc27
/usr/bin/python2.7
/usr/share/doc/python27-2.7.9
/usr/share/doc/python27-2.7.9/LICENSE
/usr/share/doc/python27-2.7.9/README
/usr/share/man/man1/python2.1.gz
/usr/share/man/man1/python2.7.1.gz
&lt;/pre&gt;&lt;/div&gt;</summary><category term="yum"></category></entry><entry><title>[linux] centos 下安装 snmpwalk 命令</title><link href="https://mozillazg.com/2014/12/linux-install-snmpwalk-command-on-centos.html" rel="alternate"></link><updated>2014-12-11T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-12-11:2014/12/linux-install-snmpwalk-command-on-centos.html</id><summary type="html">&lt;p&gt;&lt;code&gt;snmpwalk&lt;/code&gt; 命令可以用来探测交换机端口的实时带宽情况。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# yum provides */snmpwalk
yum install net-snmp-utils
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>[linux]退出码 127 含义</title><link href="https://mozillazg.com/2014/12/linux-what-is-mean-exit-code-127.html" rel="alternate"></link><updated>2014-12-11T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-12-11:2014/12/linux-what-is-mean-exit-code-127.html</id><summary type="html">&lt;p&gt;在 bash 下退出码 &lt;code&gt;127&lt;/code&gt; 的含义是 &lt;strong&gt;命令不存在&lt;/strong&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ foo
未找到 &lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt; 命令，您要输入的是否是：
 命令 &lt;span class="s1"&gt;&amp;#39;fog&amp;#39;&lt;/span&gt; 来自于包 &lt;span class="s1"&gt;&amp;#39;ruby-fog&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;universe&lt;span class="o"&gt;)&lt;/span&gt;
 命令 &lt;span class="s1"&gt;&amp;#39;fox&amp;#39;&lt;/span&gt; 来自于包 &lt;span class="s1"&gt;&amp;#39;objcryst-fox&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;universe&lt;span class="o"&gt;)&lt;/span&gt;
 命令 &lt;span class="s1"&gt;&amp;#39;xoo&amp;#39;&lt;/span&gt; 来自于包 &lt;span class="s1"&gt;&amp;#39;xoo&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;universe&lt;span class="o"&gt;)&lt;/span&gt;
 命令 &lt;span class="s1"&gt;&amp;#39;fgo&amp;#39;&lt;/span&gt; 来自于包 &lt;span class="s1"&gt;&amp;#39;fgo&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;universe&lt;span class="o"&gt;)&lt;/span&gt;
 命令 &lt;span class="s1"&gt;&amp;#39;fio&amp;#39;&lt;/span&gt; 来自于包 &lt;span class="s1"&gt;&amp;#39;fio&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;universe&lt;span class="o"&gt;)&lt;/span&gt;
 命令 &lt;span class="s1"&gt;&amp;#39;fop&amp;#39;&lt;/span&gt; 来自于包 &lt;span class="s1"&gt;&amp;#39;fop&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt;
 命令 &lt;span class="s1"&gt;&amp;#39;goo&amp;#39;&lt;/span&gt; 来自于包 &lt;span class="s1"&gt;&amp;#39;goo&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;universe&lt;span class="o"&gt;)&lt;/span&gt;
 命令 &lt;span class="s1"&gt;&amp;#39;zoo&amp;#39;&lt;/span&gt; 来自于包 &lt;span class="s1"&gt;&amp;#39;zoo&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;universe&lt;span class="o"&gt;)&lt;/span&gt;
foo：未找到命令
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;
127
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>[linux]常用的 CentOS 5/6/7 yum 源</title><link href="https://mozillazg.com/2014/11/linux-recommended-centos-5-6-7-yum-source.html" rel="alternate"></link><updated>2014-11-23T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-11-23:2014/11/linux-recommended-centos-5-6-7-yum-source.html</id><summary type="html">&lt;p&gt;下面是一些常用的 CentOS yum 源。&lt;/p&gt;
&lt;h2&gt;rpmforge&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# centos 5 i386
rpm -Uvh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el5.rf.i386.rpm
# centos 5 x86_64
rpm -Uvh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el5.rf.x86_64.rpm

# centos 6 i686
rpm -Uvh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el6.rf.i686.
# centos 6 x86_64
rpm -Uvh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm

# centos 7
rpm -Uvh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;epel&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# centos 5 i386
rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm
# centos 5 x86_64
rpm -Uvh http://download.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm

# centos 6 i386
rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
# centos 6 x86_64
rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm

# centos 7
rpm -Uvh http://download.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-12.noarch.rpm
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;remi&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# centos 5
rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm
# centos 6
rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
# centos 7
rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;vim /etc/yum.repos.d/remi.repo&lt;/code&gt; 更改 &lt;code&gt;enabled=1&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;ius&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# centos 5 i386
rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/CentOS/5/i386/ius-release-1.0-13.ius.centos5.noarch.rpm
# centos 5 x86_64
rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/CentOS/5/x86_64/epel-release-5-4.noarch.rpm

# centos 6 i386
rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/CentOS/6/i386/ius-release-1.0-13.ius.centos6.noarch.rpm
# centos 6 x86_64
rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/CentOS/6/x86_64/ius-release-1.0-13.ius.centos6.noarch.rpm

# centos 7
rpm http://dl.iuscommunity.org/pub/ius/stable/CentOS/7/x86_64/ius-release-1.0-15.ius.centos7.noarch.rpm
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- yum install centos-release-SCL --&gt;</summary></entry><entry><title>[linux]修复执行 make 命令时，提示：warning: Clock skew detected，导致无法执行 make 命令的问题</title><link href="https://mozillazg.com/2014/11/linux-fix-make-warning-Clock-skew-detected.html" rel="alternate"></link><updated>2014-11-20T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-11-20:2014/11/linux-fix-make-warning-Clock-skew-detected.html</id><summary type="html">&lt;p&gt;有时，执行 &lt;code&gt;make&lt;/code&gt; 命令时会出现如下提示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Clock&lt;/span&gt; &lt;span class="n"&gt;skew&lt;/span&gt; &lt;span class="n"&gt;detected&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Your&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;incomplete&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;导致无法执行 &lt;code&gt;make&lt;/code&gt; 命令。&lt;/p&gt;
&lt;p&gt;出现这个提示的原因是因为 Makefile 的修改时间大于系统的当前时间。
比如把本机的 Makefile 文件上传到服务器上时，而服务器上的时间比本机时间要慢，就会出现这种情况。&lt;/p&gt;
&lt;p&gt;有两种解决办法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同步本地时间和服务器时间。&lt;/li&gt;
&lt;li&gt;在服务器上通过 touch 命令修改 Makefile 文件的修改时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/3824500/compling-c-on-remote-linux-machine-clock-skew-detected-warning"&gt;Compling C++ on remote Linux machine - "clock skew detected" warning - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>[linux] 修复 Redmine 无法发送通知邮件，提示 550 5.7.1 Unable to relay 的问题</title><link href="https://mozillazg.com/2014/06/linux-fix-redmine-send-mail-error-550-5.7.1-Unable-to-relay.html" rel="alternate"></link><updated>2014-06-09T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-06-09:2014/06/linux-fix-redmine-send-mail-error-550-5.7.1-Unable-to-relay.html</id><summary type="html">&lt;p&gt;前两天接手了公司 Redmine 系统的维护工作，需要写一个安装维护文档。
所以我就在本地虚拟机上尝试进行了一下安装。
安装后，测试使用的过程中遇到了无法发送通知邮件的问题， 日志信息如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;The following error occured while sending email notification:
&amp;quot;550 5.7.1 Unable to relay&amp;quot;.
Check your configuration in config/configuration.yml.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Redmine 版本： 1.2.1&lt;/p&gt;
&lt;p&gt;最终的解决办法是，修改 config/configuration.yml ，添加 &lt;code&gt;authentication: :none&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;default:
  # Outgoing emails configuration (see examples above)
  email_delivery:
    delivery_method: :smtp
    smtp_settings:
      address: domain.com
      port: 25
      domain: domain.com
      authentication: :none    # 修改项
      # authentication: :login
      # user_name: &amp;quot;redmine@example.net&amp;quot;
      # password: &amp;quot;redmine&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.redmine.org/boards/2/topics/19732"&gt;Test e-mail works but notifications aren't send - Redmine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://community.bitnami.com/t/notification-emails-not-sent-but-test-emails-do-work/2186/2"&gt;Notification Emails not sent, but test emails do work - Bitnami Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.redmine.org/boards/2/topics/30851"&gt;Redmine 2.0: error sending email&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="linux"></category><category term="redmine"></category></entry><entry><title>[linux]配置 vsftp 启用被动模式（passive mode）解决客户端"no route to host"错误</title><link href="https://mozillazg.com/2014/05/linux-configure-vsftp-enable-passive-mode.html" rel="alternate"></link><updated>2014-05-20T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-05-20:2014/05/linux-configure-vsftp-enable-passive-mode.html</id><summary type="html">&lt;p&gt;系统: CentOS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;修改 vsftpd.conf，启用被动模式，指定端口:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pasv_min_port=12000
pasv_max_port=12199
pasv_enable=YES
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置防火墙 iptables，允许端口访问:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iptables -I INPUT -p tcp --dport 12000:12199 -j ACCEPT
service iptables save
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://serverfault.com/questions/421161/how-to-configure-vsftpd-to-work-with-passive-mode"&gt;centos - How to configure vsftpd to work with passive mode - Server Fault &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://unix.stackexchange.com/questions/58291/how-to-check-the-passive-and-active-ftp"&gt;How to check the Passive and Active FTP - Unix &amp;amp; Linux Stack Exchange &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="linux"></category><category term="vsftp"></category></entry><entry><title>[linux]修复 gcc 编译时的出现的 "CPU you selected does not support x86-64 instruction set" 错误</title><link href="https://mozillazg.com/2014/05/linux-fix-gcc-error-CPU-you-selected-does-not-support-x86-64-instruction-set.html" rel="alternate"></link><updated>2014-05-20T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-05-20:2014/05/linux-fix-gcc-error-CPU-you-selected-does-not-support-x86-64-instruction-set.html</id><summary type="html">&lt;p&gt;前两天在服务器上安装 &lt;code&gt;gevent&lt;/code&gt; 时出现了 &lt;code&gt;gevent/gevent.core.c:1: error: CPU you selected does not support x86-64 instruction set&lt;/code&gt; 错误：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install gevent
Downloading/unpacking gevent
  Running setup.py egg_info &lt;span class="k"&gt;for&lt;/span&gt; package gevent
    ....

    building &lt;span class="s1"&gt;&amp;#39;gevent.core&amp;#39;&lt;/span&gt; extension
    gcc -pthread -DNDEBUG -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; -fexceptions -fstack-protector --param&lt;span class="o"&gt;=&lt;/span&gt;ssp-buffer-size&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt; -m64 -mtune&lt;span class="o"&gt;=&lt;/span&gt;generic -D_GNU_SOURCE -fPIC -fwrapv -O2 -mcpu&lt;span class="o"&gt;=&lt;/span&gt;i686 -march&lt;span class="o"&gt;=&lt;/span&gt;i686 -fPIC -DLIBEV_EMBED&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; -DEV_COMMON&lt;span class="o"&gt;=&lt;/span&gt; -DEV_CLEANUP_ENABLE&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; -DEV_EMBED_ENABLE&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; -DEV_PERIODIC_ENABLE&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; -Ibuild/temp.linux-x86_64-2.6/libev -Ilibev -I/usr/include/python2.6 -c gevent/gevent.core.c -o build/temp.linux-x86_64-2.6/gevent/gevent.core.o

    gevent/gevent.core.c:1: error: CPU you selected does not support x86-64 instruction &lt;span class="nb"&gt;set&lt;/span&gt;

    error: &lt;span class="nb"&gt;command&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;gcc&amp;#39;&lt;/span&gt; failed with &lt;span class="nb"&gt;exit&lt;/span&gt; status 1

    ....
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后使用的解决方法是设置一下环境变量 &lt;code&gt;CFLAGS&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;CFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-march=x86-64&amp;#39;&lt;/span&gt;
$ pip install gevent
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://unix.stackexchange.com/questions/82089/pip-install-cpu-you-selected-does-not-support-x86-64-instruction-set"&gt;Pip install - CPU you selected does not support x86-64 instruction set&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="linux"></category></entry><entry><title>socket 错误码含义列表</title><link href="https://mozillazg.com/2013/10/socket-errno-list.html" rel="alternate"></link><updated>2013-10-22T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-10-22:2013/10/socket-errno-list.html</id><summary type="html">&lt;p&gt;为了防止源链接失效，存档一下。&lt;/p&gt;
&lt;div class="section" id="linux"&gt;
&lt;h2 id="hidlinux"&gt;linux&lt;a class="headerlink" href="#hidlinux" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;来源：&lt;a class="reference external" href="https://github.com/torvalds/linux/blob/master/include/uapi/asm-generic/errno.h"&gt;https://github.com/torvalds/linux/blob/master/include/uapi/asm-generic/errno.h&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#ifndef _ASM_GENERIC_ERRNO_H&lt;/span&gt;
&lt;span class="cp"&gt;#define _ASM_GENERIC_ERRNO_H&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;asm-generic/errno-base.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define     EDEADLK         35      &lt;/span&gt;&lt;span class="cm"&gt;/* Resource deadlock would occur */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENAMETOOLONG    36      &lt;/span&gt;&lt;span class="cm"&gt;/* File name too long */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOLCK          37      &lt;/span&gt;&lt;span class="cm"&gt;/* No record locks available */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt; * This error code is special: arch syscall entry code will return&lt;/span&gt;
&lt;span class="cm"&gt; * -ENOSYS if users try to call a syscall that doesn&amp;#39;t exist.  To keep&lt;/span&gt;
&lt;span class="cm"&gt; * failures of syscalls that really do exist distinguishable from&lt;/span&gt;
&lt;span class="cm"&gt; * failures due to attempts to use a nonexistent syscall, syscall&lt;/span&gt;
&lt;span class="cm"&gt; * implementations should refrain from returning -ENOSYS.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOSYS          38      &lt;/span&gt;&lt;span class="cm"&gt;/* Invalid system call number */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define     ENOTEMPTY       39      &lt;/span&gt;&lt;span class="cm"&gt;/* Directory not empty */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ELOOP           40      &lt;/span&gt;&lt;span class="cm"&gt;/* Too many symbolic links encountered */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EWOULDBLOCK     EAGAIN  &lt;/span&gt;&lt;span class="cm"&gt;/* Operation would block */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOMSG          42      &lt;/span&gt;&lt;span class="cm"&gt;/* No message of desired type */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EIDRM           43      &lt;/span&gt;&lt;span class="cm"&gt;/* Identifier removed */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ECHRNG          44      &lt;/span&gt;&lt;span class="cm"&gt;/* Channel number out of range */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EL2NSYNC        45      &lt;/span&gt;&lt;span class="cm"&gt;/* Level 2 not synchronized */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EL3HLT          46      &lt;/span&gt;&lt;span class="cm"&gt;/* Level 3 halted */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EL3RST          47      &lt;/span&gt;&lt;span class="cm"&gt;/* Level 3 reset */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ELNRNG          48      &lt;/span&gt;&lt;span class="cm"&gt;/* Link number out of range */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EUNATCH         49      &lt;/span&gt;&lt;span class="cm"&gt;/* Protocol driver not attached */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOCSI          50      &lt;/span&gt;&lt;span class="cm"&gt;/* No CSI structure available */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EL2HLT          51      &lt;/span&gt;&lt;span class="cm"&gt;/* Level 2 halted */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EBADE           52      &lt;/span&gt;&lt;span class="cm"&gt;/* Invalid exchange */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EBADR           53      &lt;/span&gt;&lt;span class="cm"&gt;/* Invalid request descriptor */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EXFULL          54      &lt;/span&gt;&lt;span class="cm"&gt;/* Exchange full */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOANO          55      &lt;/span&gt;&lt;span class="cm"&gt;/* No anode */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EBADRQC         56      &lt;/span&gt;&lt;span class="cm"&gt;/* Invalid request code */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EBADSLT         57      &lt;/span&gt;&lt;span class="cm"&gt;/* Invalid slot */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define     EDEADLOCK       EDEADLK&lt;/span&gt;

&lt;span class="cp"&gt;#define     EBFONT          59      &lt;/span&gt;&lt;span class="cm"&gt;/* Bad font file format */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOSTR          60      &lt;/span&gt;&lt;span class="cm"&gt;/* Device not a stream */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENODATA         61      &lt;/span&gt;&lt;span class="cm"&gt;/* No data available */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ETIME           62      &lt;/span&gt;&lt;span class="cm"&gt;/* Timer expired */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOSR           63      &lt;/span&gt;&lt;span class="cm"&gt;/* Out of streams resources */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENONET          64      &lt;/span&gt;&lt;span class="cm"&gt;/* Machine is not on the network */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOPKG          65      &lt;/span&gt;&lt;span class="cm"&gt;/* Package not installed */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EREMOTE         66      &lt;/span&gt;&lt;span class="cm"&gt;/* Object is remote */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOLINK         67      &lt;/span&gt;&lt;span class="cm"&gt;/* Link has been severed */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EADV            68      &lt;/span&gt;&lt;span class="cm"&gt;/* Advertise error */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ESRMNT          69      &lt;/span&gt;&lt;span class="cm"&gt;/* Srmount error */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ECOMM           70      &lt;/span&gt;&lt;span class="cm"&gt;/* Communication error on send */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EPROTO          71      &lt;/span&gt;&lt;span class="cm"&gt;/* Protocol error */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EMULTIHOP       72      &lt;/span&gt;&lt;span class="cm"&gt;/* Multihop attempted */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EDOTDOT         73      &lt;/span&gt;&lt;span class="cm"&gt;/* RFS specific error */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EBADMSG         74      &lt;/span&gt;&lt;span class="cm"&gt;/* Not a data message */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EOVERFLOW       75      &lt;/span&gt;&lt;span class="cm"&gt;/* Value too large for defined data type */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOTUNIQ        76      &lt;/span&gt;&lt;span class="cm"&gt;/* Name not unique on network */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EBADFD          77      &lt;/span&gt;&lt;span class="cm"&gt;/* File descriptor in bad state */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EREMCHG         78      &lt;/span&gt;&lt;span class="cm"&gt;/* Remote address changed */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ELIBACC         79      &lt;/span&gt;&lt;span class="cm"&gt;/* Can not access a needed shared library */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ELIBBAD         80      &lt;/span&gt;&lt;span class="cm"&gt;/* Accessing a corrupted shared library */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ELIBSCN         81      &lt;/span&gt;&lt;span class="cm"&gt;/* .lib section in a.out corrupted */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ELIBMAX         82      &lt;/span&gt;&lt;span class="cm"&gt;/* Attempting to link in too many shared libraries */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ELIBEXEC        83      &lt;/span&gt;&lt;span class="cm"&gt;/* Cannot exec a shared library directly */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EILSEQ          84      &lt;/span&gt;&lt;span class="cm"&gt;/* Illegal byte sequence */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ERESTART        85      &lt;/span&gt;&lt;span class="cm"&gt;/* Interrupted system call should be restarted */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ESTRPIPE        86      &lt;/span&gt;&lt;span class="cm"&gt;/* Streams pipe error */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EUSERS          87      &lt;/span&gt;&lt;span class="cm"&gt;/* Too many users */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOTSOCK        88      &lt;/span&gt;&lt;span class="cm"&gt;/* Socket operation on non-socket */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EDESTADDRREQ    89      &lt;/span&gt;&lt;span class="cm"&gt;/* Destination address required */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EMSGSIZE        90      &lt;/span&gt;&lt;span class="cm"&gt;/* Message too long */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EPROTOTYPE      91      &lt;/span&gt;&lt;span class="cm"&gt;/* Protocol wrong type for socket */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOPROTOOPT     92      &lt;/span&gt;&lt;span class="cm"&gt;/* Protocol not available */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EPROTONOSUPPORT 93      &lt;/span&gt;&lt;span class="cm"&gt;/* Protocol not supported */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ESOCKTNOSUPPORT 94      &lt;/span&gt;&lt;span class="cm"&gt;/* Socket type not supported */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EOPNOTSUPP      95      &lt;/span&gt;&lt;span class="cm"&gt;/* Operation not supported on transport endpoint */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EPFNOSUPPORT    96      &lt;/span&gt;&lt;span class="cm"&gt;/* Protocol family not supported */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EAFNOSUPPORT    97      &lt;/span&gt;&lt;span class="cm"&gt;/* Address family not supported by protocol */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EADDRINUSE      98      &lt;/span&gt;&lt;span class="cm"&gt;/* Address already in use */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EADDRNOTAVAIL   99      &lt;/span&gt;&lt;span class="cm"&gt;/* Cannot assign requested address */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENETDOWN        100     &lt;/span&gt;&lt;span class="cm"&gt;/* Network is down */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENETUNREACH     101     &lt;/span&gt;&lt;span class="cm"&gt;/* Network is unreachable */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENETRESET       102     &lt;/span&gt;&lt;span class="cm"&gt;/* Network dropped connection because of reset */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ECONNABORTED    103     &lt;/span&gt;&lt;span class="cm"&gt;/* Software caused connection abort */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ECONNRESET      104     &lt;/span&gt;&lt;span class="cm"&gt;/* Connection reset by peer */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOBUFS         105     &lt;/span&gt;&lt;span class="cm"&gt;/* No buffer space available */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EISCONN         106     &lt;/span&gt;&lt;span class="cm"&gt;/* Transport endpoint is already connected */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOTCONN        107     &lt;/span&gt;&lt;span class="cm"&gt;/* Transport endpoint is not connected */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ESHUTDOWN       108     &lt;/span&gt;&lt;span class="cm"&gt;/* Cannot send after transport endpoint shutdown */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ETOOMANYREFS    109     &lt;/span&gt;&lt;span class="cm"&gt;/* Too many references: cannot splice */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ETIMEDOUT       110     &lt;/span&gt;&lt;span class="cm"&gt;/* Connection timed out */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ECONNREFUSED    111     &lt;/span&gt;&lt;span class="cm"&gt;/* Connection refused */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EHOSTDOWN       112     &lt;/span&gt;&lt;span class="cm"&gt;/* Host is down */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EHOSTUNREACH    113     &lt;/span&gt;&lt;span class="cm"&gt;/* No route to host */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EALREADY        114     &lt;/span&gt;&lt;span class="cm"&gt;/* Operation already in progress */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EINPROGRESS     115     &lt;/span&gt;&lt;span class="cm"&gt;/* Operation now in progress */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ESTALE          116     &lt;/span&gt;&lt;span class="cm"&gt;/* Stale file handle */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EUCLEAN         117     &lt;/span&gt;&lt;span class="cm"&gt;/* Structure needs cleaning */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOTNAM         118     &lt;/span&gt;&lt;span class="cm"&gt;/* Not a XENIX named type file */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENAVAIL         119     &lt;/span&gt;&lt;span class="cm"&gt;/* No XENIX semaphores available */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EISNAM          120     &lt;/span&gt;&lt;span class="cm"&gt;/* Is a named type file */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EREMOTEIO       121     &lt;/span&gt;&lt;span class="cm"&gt;/* Remote I/O error */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EDQUOT          122     &lt;/span&gt;&lt;span class="cm"&gt;/* Quota exceeded */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define     ENOMEDIUM       123     &lt;/span&gt;&lt;span class="cm"&gt;/* No medium found */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EMEDIUMTYPE     124     &lt;/span&gt;&lt;span class="cm"&gt;/* Wrong medium type */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ECANCELED       125     &lt;/span&gt;&lt;span class="cm"&gt;/* Operation Canceled */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOKEY          126     &lt;/span&gt;&lt;span class="cm"&gt;/* Required key not available */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EKEYEXPIRED     127     &lt;/span&gt;&lt;span class="cm"&gt;/* Key has expired */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EKEYREVOKED     128     &lt;/span&gt;&lt;span class="cm"&gt;/* Key has been revoked */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EKEYREJECTED    129     &lt;/span&gt;&lt;span class="cm"&gt;/* Key was rejected by service */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* for robust mutexes */&lt;/span&gt;
&lt;span class="cp"&gt;#define     EOWNERDEAD      130     &lt;/span&gt;&lt;span class="cm"&gt;/* Owner died */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOTRECOVERABLE 131     &lt;/span&gt;&lt;span class="cm"&gt;/* State not recoverable */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define ERFKILL             132     &lt;/span&gt;&lt;span class="cm"&gt;/* Operation not possible due to RF-kill */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define EHWPOISON   133     &lt;/span&gt;&lt;span class="cm"&gt;/* Memory page has hardware error */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mac"&gt;
&lt;h2 id="hidmac"&gt;mac&lt;a class="headerlink" href="#hidmac" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;来源：&lt;a class="reference external" href="https://opensource.apple.com/source/xnu/xnu-3248.60.10/bsd/sys/errno.h"&gt;https://opensource.apple.com/source/xnu/xnu-3248.60.10/bsd/sys/errno.h&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt; * Copyright (c) 2000-2012 Apple, Inc. All rights reserved.&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * @APPLE_OSREFERENCE_LICENSE_HEADER_START@&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * This file contains Original Code and/or Modifications of Original Code&lt;/span&gt;
&lt;span class="cm"&gt; * as defined in and that are subject to the Apple Public Source License&lt;/span&gt;
&lt;span class="cm"&gt; * Version 2.0 (the &amp;#39;License&amp;#39;). You may not use this file except in&lt;/span&gt;
&lt;span class="cm"&gt; * compliance with the License. The rights granted to you under the License&lt;/span&gt;
&lt;span class="cm"&gt; * may not be used to create, or enable the creation or redistribution of,&lt;/span&gt;
&lt;span class="cm"&gt; * unlawful or unlicensed copies of an Apple operating system, or to&lt;/span&gt;
&lt;span class="cm"&gt; * circumvent, violate, or enable the circumvention or violation of, any&lt;/span&gt;
&lt;span class="cm"&gt; * terms of an Apple operating system software license agreement.&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * Please obtain a copy of the License at&lt;/span&gt;
&lt;span class="cm"&gt; * http://www.opensource.apple.com/apsl/ and read it before using this file.&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * The Original Code and all software distributed under the License are&lt;/span&gt;
&lt;span class="cm"&gt; * distributed on an &amp;#39;AS IS&amp;#39; basis, WITHOUT WARRANTY OF ANY KIND, EITHER&lt;/span&gt;
&lt;span class="cm"&gt; * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,&lt;/span&gt;
&lt;span class="cm"&gt; * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,&lt;/span&gt;
&lt;span class="cm"&gt; * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.&lt;/span&gt;
&lt;span class="cm"&gt; * Please see the License for the specific language governing rights and&lt;/span&gt;
&lt;span class="cm"&gt; * limitations under the License.&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * @APPLE_OSREFERENCE_LICENSE_HEADER_END@&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cm"&gt;/* Copyright (c) 1995 NeXT Computer, Inc. All Rights Reserved */&lt;/span&gt;
&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt; * Copyright (c) 1982, 1986, 1989, 1993&lt;/span&gt;
&lt;span class="cm"&gt; *  The Regents of the University of California.  All rights reserved.&lt;/span&gt;
&lt;span class="cm"&gt; * (c) UNIX System Laboratories, Inc.&lt;/span&gt;
&lt;span class="cm"&gt; * All or some portions of this file are derived from material licensed&lt;/span&gt;
&lt;span class="cm"&gt; * to the University of California by American Telephone and Telegraph&lt;/span&gt;
&lt;span class="cm"&gt; * Co. or Unix System Laboratories, Inc. and are reproduced herein with&lt;/span&gt;
&lt;span class="cm"&gt; * the permission of UNIX System Laboratories, Inc.&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * Redistribution and use in source and binary forms, with or without&lt;/span&gt;
&lt;span class="cm"&gt; * modification, are permitted provided that the following conditions&lt;/span&gt;
&lt;span class="cm"&gt; * are met:&lt;/span&gt;
&lt;span class="cm"&gt; * 1. Redistributions of source code must retain the above copyright&lt;/span&gt;
&lt;span class="cm"&gt; *    notice, this list of conditions and the following disclaimer.&lt;/span&gt;
&lt;span class="cm"&gt; * 2. Redistributions in binary form must reproduce the above copyright&lt;/span&gt;
&lt;span class="cm"&gt; *    notice, this list of conditions and the following disclaimer in the&lt;/span&gt;
&lt;span class="cm"&gt; *    documentation and/or other materials provided with the distribution.&lt;/span&gt;
&lt;span class="cm"&gt; * 3. All advertising materials mentioning features or use of this software&lt;/span&gt;
&lt;span class="cm"&gt; *    must display the following acknowledgement:&lt;/span&gt;
&lt;span class="cm"&gt; *  This product includes software developed by the University of&lt;/span&gt;
&lt;span class="cm"&gt; *  California, Berkeley and its contributors.&lt;/span&gt;
&lt;span class="cm"&gt; * 4. Neither the name of the University nor the names of its contributors&lt;/span&gt;
&lt;span class="cm"&gt; *    may be used to endorse or promote products derived from this software&lt;/span&gt;
&lt;span class="cm"&gt; *    without specific prior written permission.&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS&amp;#39;&amp;#39; AND&lt;/span&gt;
&lt;span class="cm"&gt; * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE&lt;/span&gt;
&lt;span class="cm"&gt; * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE&lt;/span&gt;
&lt;span class="cm"&gt; * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE&lt;/span&gt;
&lt;span class="cm"&gt; * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL&lt;/span&gt;
&lt;span class="cm"&gt; * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS&lt;/span&gt;
&lt;span class="cm"&gt; * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&lt;/span&gt;
&lt;span class="cm"&gt; * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT&lt;/span&gt;
&lt;span class="cm"&gt; * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY&lt;/span&gt;
&lt;span class="cm"&gt; * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF&lt;/span&gt;
&lt;span class="cm"&gt; * SUCH DAMAGE.&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; *  @(#)errno.h     8.5 (Berkeley) 1/21/94&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;

&lt;span class="cp"&gt;#ifndef     _SYS_ERRNO_H_&lt;/span&gt;
&lt;span class="cp"&gt;#define     _SYS_ERRNO_H_&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;sys/cdefs.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#if !defined(KERNEL) &amp;amp;&amp;amp; !defined(KERNEL_PRIVATE)&lt;/span&gt;

&lt;span class="cp"&gt;#if defined(__STDC_WANT_LIB_EXT1__) &amp;amp;&amp;amp; __STDC_WANT_LIB_EXT1__ &amp;gt;= 1&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;sys/_types/_errno_t.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;

&lt;span class="n"&gt;__BEGIN_DECLS&lt;/span&gt;
&lt;span class="k"&gt;extern&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nf"&gt;__error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;#define errno (*__error())&lt;/span&gt;
&lt;span class="n"&gt;__END_DECLS&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;

&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt; * Error codes&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;

&lt;span class="cp"&gt;#define     EPERM           1               &lt;/span&gt;&lt;span class="cm"&gt;/* Operation not permitted */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOENT          2               &lt;/span&gt;&lt;span class="cm"&gt;/* No such file or directory */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ESRCH           3               &lt;/span&gt;&lt;span class="cm"&gt;/* No such process */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EINTR           4               &lt;/span&gt;&lt;span class="cm"&gt;/* Interrupted system call */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EIO             5               &lt;/span&gt;&lt;span class="cm"&gt;/* Input/output error */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENXIO           6               &lt;/span&gt;&lt;span class="cm"&gt;/* Device not configured */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     E2BIG           7               &lt;/span&gt;&lt;span class="cm"&gt;/* Argument list too long */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOEXEC         8               &lt;/span&gt;&lt;span class="cm"&gt;/* Exec format error */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EBADF           9               &lt;/span&gt;&lt;span class="cm"&gt;/* Bad file descriptor */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ECHILD          10              &lt;/span&gt;&lt;span class="cm"&gt;/* No child processes */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EDEADLK         11              &lt;/span&gt;&lt;span class="cm"&gt;/* Resource deadlock avoided */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
                    &lt;span class="cm"&gt;/* 11 was EAGAIN */&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOMEM          12              &lt;/span&gt;&lt;span class="cm"&gt;/* Cannot allocate memory */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EACCES          13              &lt;/span&gt;&lt;span class="cm"&gt;/* Permission denied */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EFAULT          14              &lt;/span&gt;&lt;span class="cm"&gt;/* Bad address */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#if __DARWIN_C_LEVEL &amp;gt;= __DARWIN_C_FULL&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOTBLK         15              &lt;/span&gt;&lt;span class="cm"&gt;/* Block device required */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;span class="cp"&gt;#define     EBUSY           16              &lt;/span&gt;&lt;span class="cm"&gt;/* Device / Resource busy */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EEXIST          17              &lt;/span&gt;&lt;span class="cm"&gt;/* File exists */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EXDEV           18              &lt;/span&gt;&lt;span class="cm"&gt;/* Cross-device link */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENODEV          19              &lt;/span&gt;&lt;span class="cm"&gt;/* Operation not supported by device */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOTDIR         20              &lt;/span&gt;&lt;span class="cm"&gt;/* Not a directory */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EISDIR          21              &lt;/span&gt;&lt;span class="cm"&gt;/* Is a directory */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EINVAL          22              &lt;/span&gt;&lt;span class="cm"&gt;/* Invalid argument */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENFILE          23              &lt;/span&gt;&lt;span class="cm"&gt;/* Too many open files in system */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EMFILE          24              &lt;/span&gt;&lt;span class="cm"&gt;/* Too many open files */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOTTY          25              &lt;/span&gt;&lt;span class="cm"&gt;/* Inappropriate ioctl for device */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ETXTBSY         26              &lt;/span&gt;&lt;span class="cm"&gt;/* Text file busy */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EFBIG           27              &lt;/span&gt;&lt;span class="cm"&gt;/* File too large */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOSPC          28              &lt;/span&gt;&lt;span class="cm"&gt;/* No space left on device */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ESPIPE          29              &lt;/span&gt;&lt;span class="cm"&gt;/* Illegal seek */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EROFS           30              &lt;/span&gt;&lt;span class="cm"&gt;/* Read-only file system */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EMLINK          31              &lt;/span&gt;&lt;span class="cm"&gt;/* Too many links */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EPIPE           32              &lt;/span&gt;&lt;span class="cm"&gt;/* Broken pipe */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* math software */&lt;/span&gt;
&lt;span class="cp"&gt;#define     EDOM            33              &lt;/span&gt;&lt;span class="cm"&gt;/* Numerical argument out of domain */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ERANGE          34              &lt;/span&gt;&lt;span class="cm"&gt;/* Result too large */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* non-blocking and interrupt i/o */&lt;/span&gt;
&lt;span class="cp"&gt;#define     EAGAIN          35              &lt;/span&gt;&lt;span class="cm"&gt;/* Resource temporarily unavailable */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EWOULDBLOCK     EAGAIN          &lt;/span&gt;&lt;span class="cm"&gt;/* Operation would block */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EINPROGRESS     36              &lt;/span&gt;&lt;span class="cm"&gt;/* Operation now in progress */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EALREADY        37              &lt;/span&gt;&lt;span class="cm"&gt;/* Operation already in progress */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* ipc/network software -- argument errors */&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOTSOCK        38              &lt;/span&gt;&lt;span class="cm"&gt;/* Socket operation on non-socket */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EDESTADDRREQ    39              &lt;/span&gt;&lt;span class="cm"&gt;/* Destination address required */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EMSGSIZE        40              &lt;/span&gt;&lt;span class="cm"&gt;/* Message too long */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EPROTOTYPE      41              &lt;/span&gt;&lt;span class="cm"&gt;/* Protocol wrong type for socket */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOPROTOOPT     42              &lt;/span&gt;&lt;span class="cm"&gt;/* Protocol not available */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EPROTONOSUPPORT 43              &lt;/span&gt;&lt;span class="cm"&gt;/* Protocol not supported */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#if __DARWIN_C_LEVEL &amp;gt;= __DARWIN_C_FULL&lt;/span&gt;
&lt;span class="cp"&gt;#define     ESOCKTNOSUPPORT 44              &lt;/span&gt;&lt;span class="cm"&gt;/* Socket type not supported */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;span class="cp"&gt;#define ENOTSUP             45              &lt;/span&gt;&lt;span class="cm"&gt;/* Operation not supported */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#if !__DARWIN_UNIX03 &amp;amp;&amp;amp; !defined(KERNEL)&lt;/span&gt;
&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt; * This is the same for binary and source copmpatability, unless compiling&lt;/span&gt;
&lt;span class="cm"&gt; * the kernel itself, or compiling __DARWIN_UNIX03; if compiling for the&lt;/span&gt;
&lt;span class="cm"&gt; * kernel, the correct value will be returned.  If compiling non-POSIX&lt;/span&gt;
&lt;span class="cm"&gt; * source, the kernel return value will be converted by a stub in libc, and&lt;/span&gt;
&lt;span class="cm"&gt; * if compiling source with __DARWIN_UNIX03, the conversion in libc is not&lt;/span&gt;
&lt;span class="cm"&gt; * done, and the caller gets the expected (discrete) value.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#define     EOPNOTSUPP       ENOTSUP        &lt;/span&gt;&lt;span class="cm"&gt;/* Operation not supported on socket */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="cm"&gt;/* !__DARWIN_UNIX03 &amp;amp;&amp;amp; !KERNEL */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#if __DARWIN_C_LEVEL &amp;gt;= __DARWIN_C_FULL&lt;/span&gt;
&lt;span class="cp"&gt;#define     EPFNOSUPPORT    46              &lt;/span&gt;&lt;span class="cm"&gt;/* Protocol family not supported */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;span class="cp"&gt;#define     EAFNOSUPPORT    47              &lt;/span&gt;&lt;span class="cm"&gt;/* Address family not supported by protocol family */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EADDRINUSE      48              &lt;/span&gt;&lt;span class="cm"&gt;/* Address already in use */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EADDRNOTAVAIL   49              &lt;/span&gt;&lt;span class="cm"&gt;/* Can&amp;#39;t assign requested address */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* ipc/network software -- operational errors */&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENETDOWN        50              &lt;/span&gt;&lt;span class="cm"&gt;/* Network is down */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENETUNREACH     51              &lt;/span&gt;&lt;span class="cm"&gt;/* Network is unreachable */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENETRESET       52              &lt;/span&gt;&lt;span class="cm"&gt;/* Network dropped connection on reset */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ECONNABORTED    53              &lt;/span&gt;&lt;span class="cm"&gt;/* Software caused connection abort */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ECONNRESET      54              &lt;/span&gt;&lt;span class="cm"&gt;/* Connection reset by peer */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOBUFS         55              &lt;/span&gt;&lt;span class="cm"&gt;/* No buffer space available */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EISCONN         56              &lt;/span&gt;&lt;span class="cm"&gt;/* Socket is already connected */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOTCONN        57              &lt;/span&gt;&lt;span class="cm"&gt;/* Socket is not connected */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#if __DARWIN_C_LEVEL &amp;gt;= __DARWIN_C_FULL&lt;/span&gt;
&lt;span class="cp"&gt;#define     ESHUTDOWN       58              &lt;/span&gt;&lt;span class="cm"&gt;/* Can&amp;#39;t send after socket shutdown */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ETOOMANYREFS    59              &lt;/span&gt;&lt;span class="cm"&gt;/* Too many references: can&amp;#39;t splice */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;span class="cp"&gt;#define     ETIMEDOUT       60              &lt;/span&gt;&lt;span class="cm"&gt;/* Operation timed out */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ECONNREFUSED    61              &lt;/span&gt;&lt;span class="cm"&gt;/* Connection refused */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define     ELOOP           62              &lt;/span&gt;&lt;span class="cm"&gt;/* Too many levels of symbolic links */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENAMETOOLONG    63              &lt;/span&gt;&lt;span class="cm"&gt;/* File name too long */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* should be rearranged */&lt;/span&gt;
&lt;span class="cp"&gt;#if __DARWIN_C_LEVEL &amp;gt;= __DARWIN_C_FULL&lt;/span&gt;
&lt;span class="cp"&gt;#define     EHOSTDOWN       64              &lt;/span&gt;&lt;span class="cm"&gt;/* Host is down */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;span class="cp"&gt;#define     EHOSTUNREACH    65              &lt;/span&gt;&lt;span class="cm"&gt;/* No route to host */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOTEMPTY       66              &lt;/span&gt;&lt;span class="cm"&gt;/* Directory not empty */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* quotas &amp;amp; mush */&lt;/span&gt;
&lt;span class="cp"&gt;#if __DARWIN_C_LEVEL &amp;gt;= __DARWIN_C_FULL&lt;/span&gt;
&lt;span class="cp"&gt;#define     EPROCLIM        67              &lt;/span&gt;&lt;span class="cm"&gt;/* Too many processes */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EUSERS          68              &lt;/span&gt;&lt;span class="cm"&gt;/* Too many users */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;span class="cp"&gt;#define     EDQUOT          69              &lt;/span&gt;&lt;span class="cm"&gt;/* Disc quota exceeded */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* Network File System */&lt;/span&gt;
&lt;span class="cp"&gt;#define     ESTALE          70              &lt;/span&gt;&lt;span class="cm"&gt;/* Stale NFS file handle */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#if __DARWIN_C_LEVEL &amp;gt;= __DARWIN_C_FULL&lt;/span&gt;
&lt;span class="cp"&gt;#define     EREMOTE         71              &lt;/span&gt;&lt;span class="cm"&gt;/* Too many levels of remote in path */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EBADRPC         72              &lt;/span&gt;&lt;span class="cm"&gt;/* RPC struct is bad */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ERPCMISMATCH    73              &lt;/span&gt;&lt;span class="cm"&gt;/* RPC version wrong */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EPROGUNAVAIL    74              &lt;/span&gt;&lt;span class="cm"&gt;/* RPC prog. not avail */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EPROGMISMATCH   75              &lt;/span&gt;&lt;span class="cm"&gt;/* Program version wrong */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EPROCUNAVAIL    76              &lt;/span&gt;&lt;span class="cm"&gt;/* Bad procedure for program */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;

&lt;span class="cp"&gt;#define     ENOLCK          77              &lt;/span&gt;&lt;span class="cm"&gt;/* No locks available */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENOSYS          78              &lt;/span&gt;&lt;span class="cm"&gt;/* Function not implemented */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#if __DARWIN_C_LEVEL &amp;gt;= __DARWIN_C_FULL&lt;/span&gt;
&lt;span class="cp"&gt;#define     EFTYPE          79              &lt;/span&gt;&lt;span class="cm"&gt;/* Inappropriate file type or format */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EAUTH           80              &lt;/span&gt;&lt;span class="cm"&gt;/* Authentication error */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENEEDAUTH       81              &lt;/span&gt;&lt;span class="cm"&gt;/* Need authenticator */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* Intelligent device errors */&lt;/span&gt;
&lt;span class="cp"&gt;#define     EPWROFF         82      &lt;/span&gt;&lt;span class="cm"&gt;/* Device power is off */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EDEVERR         83      &lt;/span&gt;&lt;span class="cm"&gt;/* Device error, e.g. paper out */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;

&lt;span class="cp"&gt;#define     EOVERFLOW       84              &lt;/span&gt;&lt;span class="cm"&gt;/* Value too large to be stored in data type */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* Program loading errors */&lt;/span&gt;
&lt;span class="cp"&gt;#if __DARWIN_C_LEVEL &amp;gt;= __DARWIN_C_FULL&lt;/span&gt;
&lt;span class="cp"&gt;#define EBADEXEC    85      &lt;/span&gt;&lt;span class="cm"&gt;/* Bad executable */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define EBADARCH    86      &lt;/span&gt;&lt;span class="cm"&gt;/* Bad CPU type in executable */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define ESHLIBVERS  87      &lt;/span&gt;&lt;span class="cm"&gt;/* Shared library version mismatch */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define EBADMACHO   88      &lt;/span&gt;&lt;span class="cm"&gt;/* Malformed Macho file */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;

&lt;span class="cp"&gt;#define     ECANCELED       89              &lt;/span&gt;&lt;span class="cm"&gt;/* Operation canceled */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define EIDRM               90              &lt;/span&gt;&lt;span class="cm"&gt;/* Identifier removed */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define ENOMSG              91              &lt;/span&gt;&lt;span class="cm"&gt;/* No message of desired type */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define EILSEQ              92              &lt;/span&gt;&lt;span class="cm"&gt;/* Illegal byte sequence */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#if __DARWIN_C_LEVEL &amp;gt;= __DARWIN_C_FULL&lt;/span&gt;
&lt;span class="cp"&gt;#define ENOATTR             93              &lt;/span&gt;&lt;span class="cm"&gt;/* Attribute not found */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;

&lt;span class="cp"&gt;#define EBADMSG             94              &lt;/span&gt;&lt;span class="cm"&gt;/* Bad message */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define EMULTIHOP   95              &lt;/span&gt;&lt;span class="cm"&gt;/* Reserved */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ENODATA         96              &lt;/span&gt;&lt;span class="cm"&gt;/* No message available on STREAM */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define ENOLINK             97              &lt;/span&gt;&lt;span class="cm"&gt;/* Reserved */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define ENOSR               98              &lt;/span&gt;&lt;span class="cm"&gt;/* No STREAM resources */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define ENOSTR              99              &lt;/span&gt;&lt;span class="cm"&gt;/* Not a STREAM */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EPROTO          100             &lt;/span&gt;&lt;span class="cm"&gt;/* Protocol error */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define ETIME               101             &lt;/span&gt;&lt;span class="cm"&gt;/* STREAM ioctl timeout */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#if __DARWIN_UNIX03 || defined(KERNEL)&lt;/span&gt;
&lt;span class="cm"&gt;/* This value is only discrete when compiling __DARWIN_UNIX03, or KERNEL */&lt;/span&gt;
&lt;span class="cp"&gt;#define     EOPNOTSUPP      102             &lt;/span&gt;&lt;span class="cm"&gt;/* Operation not supported on socket */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="cm"&gt;/* __DARWIN_UNIX03 || KERNEL */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define ENOPOLICY   103             &lt;/span&gt;&lt;span class="cm"&gt;/* No such policy registered */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#if __DARWIN_C_LEVEL &amp;gt;= 200809L&lt;/span&gt;
&lt;span class="cp"&gt;#define ENOTRECOVERABLE 104         &lt;/span&gt;&lt;span class="cm"&gt;/* State not recoverable */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define EOWNERDEAD      105         &lt;/span&gt;&lt;span class="cm"&gt;/* Previous owner died */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;

&lt;span class="cp"&gt;#if __DARWIN_C_LEVEL &amp;gt;= __DARWIN_C_FULL&lt;/span&gt;
&lt;span class="cp"&gt;#define     EQFULL          106             &lt;/span&gt;&lt;span class="cm"&gt;/* Interface output queue is full */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     ELAST           106             &lt;/span&gt;&lt;span class="cm"&gt;/* Must be equal largest errno */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;

&lt;span class="cp"&gt;#ifdef KERNEL&lt;/span&gt;
&lt;span class="cm"&gt;/* pseudo-errors returned inside kernel to modify return to process */&lt;/span&gt;
&lt;span class="cp"&gt;#define     ERESTART        (-1)            &lt;/span&gt;&lt;span class="cm"&gt;/* restart syscall */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define     EJUSTRETURN     (-2)            &lt;/span&gt;&lt;span class="cm"&gt;/* don&amp;#39;t modify regs, just return */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#ifdef BSD_KERNEL_PRIVATE&lt;/span&gt;
&lt;span class="cp"&gt;#define ERECYCLE    (-5)            &lt;/span&gt;&lt;span class="cm"&gt;/* restart lookup under heavy vnode pressure/recycling */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define EREDRIVEOPEN        (-6)&lt;/span&gt;
&lt;span class="cp"&gt;#define EKEEPLOOKING        (-7)&lt;/span&gt;
&lt;span class="cp"&gt;#define ERESERVEDNAME       (-8)            &lt;/span&gt;&lt;span class="cm"&gt;/* path is known but not usable */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;/* used for cvwait error returns to Libc */&lt;/span&gt;
&lt;span class="cp"&gt;#define ECVCERORR   256&lt;/span&gt;
&lt;span class="cp"&gt;#define ECVPERORR   512&lt;/span&gt;
&lt;span class="cp"&gt;#else &lt;/span&gt;&lt;span class="cm"&gt;/* BSD_KERNEL_PRIVATE */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;/* -5, -6 and -7 and -106 are reserved for kernel internal use */&lt;/span&gt;
&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="cm"&gt;/* BSD_KERNEL_PRIVATE */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#ifdef PRIVATE&lt;/span&gt;
&lt;span class="cp"&gt;#define     EQSUSPENDED     (-EQFULL)       &lt;/span&gt;&lt;span class="cm"&gt;/* Output queue is suspended */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="cm"&gt;/* PRIVATE */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="cm"&gt;/* KERNEL */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="cm"&gt;/* _SYS_ERRNO_H_ */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="socket"></category><category term="errno"></category></entry><entry><title>[linux]无法启动 rabbitmq-server，出现 timeout 错误</title><link href="https://mozillazg.com/2013/10/linux-RabbitMQ-server-can-not-start-with-host-timeout-error.html" rel="alternate"></link><updated>2013-10-20T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-10-20:2013/10/linux-RabbitMQ-server-can-not-start-with-host-timeout-error.html</id><summary type="html">&lt;p&gt;上次安装 rabbitmq 时，有台服务器上 &lt;code&gt;service rabbitmq-server start&lt;/code&gt; 总是起不来。
错误日志里出现如下错误：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ERROR&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;epmd&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;yourhostname&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xxxxx&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解决办法就是, 修改 /etc/hosts 将本机的 hostname 加进去：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;127.0.0.1    yourhostname
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rabbitmq.com/ec2.html#issues-hostname"&gt;RabbitMQ - Amazon EC2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/jch/2522701"&gt;Troubleshooting RabbitMQ installation on OSX via homebrew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://forum.sourcefabric.org/discussion/comment/13783"&gt;rabbitmq-server starting.... TIMEOUT - Airtime Support Discussions on Sourcefabric Forum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="linux"></category></entry><entry><title>[linux]bash 下 ; &amp;&amp; || 的区别</title><link href="https://mozillazg.com/2013/09/linux-bash-run-mutil-cmd.html" rel="alternate"></link><updated>2013-09-28T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-09-28:2013/09/linux-bash-run-mutil-cmd.html</id><summary type="html">&lt;p&gt;linux 中 bash 下执行多个命令时，; &amp;amp;&amp;amp; || 操作符的区别：&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="27%" /&gt;
&lt;col width="73%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;cmd1 ; cmd2&lt;/td&gt;
&lt;td&gt;cmd1 和 cmd2 &lt;strong&gt;都会&lt;/strong&gt; 被执行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;cmd1 &amp;amp;&amp;amp; cmd2&lt;/td&gt;
&lt;td&gt;如果 cmd1 执行 &lt;strong&gt;成功&lt;/strong&gt; 则执行 cmd2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;cmd1 || cmd2&lt;/td&gt;
&lt;td&gt;如果 cmd1 执行 &lt;strong&gt;失败&lt;/strong&gt; 则执行 cmd2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2 id="hidid1"&gt;参考&lt;a class="headerlink" href="#hidid1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://superuser.com/questions/619016/what-is-the-difference-between-command-command-and-command-command"&gt;linux - what is the difference between &amp;quot;command &amp;amp;&amp;amp; command&amp;quot; and &amp;quot;command ; command&amp;quot; - Super User&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="linux"></category><category term="bash"></category><category term="shell"></category></entry><entry><title>[linux]创建指定大小的文件</title><link href="https://mozillazg.com/2013/08/linux-create-a-file-with-given-size.html" rel="alternate"></link><updated>2013-08-03T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-08-03:2013/08/linux-create-a-file-with-given-size.html</id><summary type="html">&lt;p&gt;比如创建 10M 大小的文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 创建大小为 10M 的文件：abc.exe&lt;/span&gt;
dd &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/zero &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;abc.exe &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1M &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;10

&lt;span class="c1"&gt;# 只生成属性为 10M 大小的文件，但不占用实际硬盘空间&lt;/span&gt;
dd &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/zero &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;abc.exe &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1M &lt;span class="nv"&gt;seek&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://rubyer.me/blog/196/"&gt;Linux生成指定大小文件的方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="linux"></category></entry><entry><title>[linux]修复 GPG key retrieval failed: [Errno 14] Could not open/read file:///etc/pki/rpm-gpg/RPM-GPG-KEY-rpmforge-dag</title><link href="https://mozillazg.com/2013/08/linux-gpg-key-retrieval-failed-errno-14.html" rel="alternate"></link><updated>2013-08-02T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-08-02:2013/08/linux-gpg-key-retrieval-failed-errno-14.html</id><summary type="html">&lt;p&gt;两种方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;编辑 &lt;code&gt;/etc/yum/etc/yum.repos.d/rpmforge.repo&lt;/code&gt;，更改 &lt;code&gt;gpgcheck=0&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;rpm --import http://apt.sw.be/RPM-GPG-KEY.dag.txt&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://easylinuxalways.blogspot.jp/2013/04/gpg-key-retrieval-failed.html"&gt;GPG key retrieval failed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="linux"></category><category term="rpmforge"></category></entry><entry><title>[linux]screen 常用命令</title><link href="https://mozillazg.com/2013/05/linux-screen-command.html" rel="alternate"></link><updated>2013-05-16T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-05-16:2013/05/linux-screen-command.html</id><summary type="html">&lt;p&gt;通过 screen 命令可以让终端命令在我们断开远程服务器后依旧运行而不会中断。&lt;/p&gt;
&lt;h2&gt;安装 screen 命令&lt;/h2&gt;
&lt;p&gt;redhat/centos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install screen
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ubuntu:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install screen
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;常用的 screen 命令&lt;/h2&gt;
&lt;p&gt;新建一个名为 django 的 screen shell：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;screen -S django
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;新建一个名为 django 的后台 screen shell：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;screen -dS django
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看所有的 screen shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ screen -ls
There are screens on:
    1429.django &lt;span class="o"&gt;(&lt;/span&gt;Detached&lt;span class="o"&gt;)&lt;/span&gt;
    23264.abc   &lt;span class="o"&gt;(&lt;/span&gt;Detached&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="m"&gt;2&lt;/span&gt; Sockets in /var/run/screen/S-abc.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;打开后台状态为 Detached 且名称为 django 的 screen shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ screen -r django
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将当前 screen shell 转到后台（Detached），按快捷键: &lt;code&gt;Ctrl + a + d&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;打开后台状态为 Attached 且名称为 django 的 screen shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ screen -r django
There is a screen on:
    1429.django &lt;span class="o"&gt;(&lt;/span&gt;Attached&lt;span class="o"&gt;)&lt;/span&gt;
There is no screen to be resumed matching django.
$ screen -x django
&lt;/pre&gt;&lt;/div&gt;</summary><category term="linux"></category><category term="screen"></category></entry><entry><title>[linux]编译 aria2c 时，出现 C compiler cannot create executables 错误</title><link href="https://mozillazg.com/2013/05/linux-compile-aria2c-error-C-compiler-cannot-create-executables.html" rel="alternate"></link><updated>2013-05-11T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-05-11:2013/05/linux-compile-aria2c-error-C-compiler-cannot-create-executables.html</id><summary type="html">&lt;p&gt;编译安装 aria2c 时，出现了如下错误：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[root@dev aria2-1.17.1]# ./configure
checking for gcc... gcc
checking whether the C compiler works... no
configure: error: in `/root/temp/aria2-1.17.1&amp;#39;:
configure: error: C compiler cannot create executables
See `config.log&amp;#39; for more details
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解决办法： 清空 LIBS 及 CFLAGS 变量的值&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[root@dev aria2-1.17.1]# export LIBS=
[root@dev aria2-1.17.1]# 
[root@dev aria2-1.17.1]# export CFLAGS=
[root@dev aria2-1.17.1]# ./configure
checking for gcc... gcc
checking whether the C compiler works... yes
&lt;/pre&gt;&lt;/div&gt;</summary><category term="linux"></category></entry><entry><title>[linux]解决 sendmail 错误： FEATURE() should be before MAILER()</title><link href="https://mozillazg.com/2013/02/linux-fix-sendmail-configuration-error-feature-should-be-before-mailer.html" rel="alternate"></link><updated>2013-02-22T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-02-22:2013/02/linux-fix-sendmail-configuration-error-feature-should-be-before-mailer.html</id><summary type="html">&lt;p&gt;错误详情：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt; m4 /etc/mail/sendmail.mc &amp;gt; /etc/mail/sendmail.cf
&lt;span class="go"&gt;*** ERROR: FEATURE() should be before MAILER()&lt;/span&gt;
&lt;span class="go"&gt;*** MAILER(`local&amp;#39;) must appear after FEATURE(`always_add_domain&amp;#39;)*** ERROR: FEATURE() should be before MAILER()&lt;/span&gt;
&lt;span class="go"&gt;*** MAILER(`local&amp;#39;) must appear after FEATURE(`allmasquerade&amp;#39;)*** ERROR: FEATURE() should be before MAILER()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解决办法：&lt;/p&gt;
&lt;p&gt;按照提示，编辑 /etc/mail/sendmail.mc 文件，将 FEATURE() 放到 MAILER() 之前：&lt;/p&gt;
&lt;p&gt;更改&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dnl #
dnl # Default Mailer setup
MAILER_DEFINITIONS
MAILER(`local&amp;#39;)dnl
MAILER(`smtp&amp;#39;)dnl

dnl # Masquerading options
FEATURE(`always_add_domain&amp;#39;)dnl
MASQUERADE_AS(`tumblr.3sd.me&amp;#39;)dnl
FEATURE(`allmasquerade&amp;#39;)dnl
FEATURE(`masquerade_envelope&amp;#39;)dnl
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;为&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dnl #

dnl # Masquerading options
FEATURE(`always_add_domain&amp;#39;)dnl
MASQUERADE_AS(`tumblr.3sd.me&amp;#39;)dnl
FEATURE(`allmasquerade&amp;#39;)dnl
FEATURE(`masquerade_envelope&amp;#39;)dnl

dnl # Default Mailer setup
MAILER_DEFINITIONS
MAILER(`local&amp;#39;)dnl
MAILER(`smtp&amp;#39;)dnl
&lt;/pre&gt;&lt;/div&gt;</summary><category term="linux"></category><category term="ubuntu"></category><category term="sendmail"></category></entry><entry><title>[linux] 更改 ssh 私钥 Passphrase</title><link href="https://mozillazg.com/2013/01/linux-ssh-change-passphrase.html" rel="alternate"></link><updated>2013-01-31T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-01-31:2013/01/linux-ssh-change-passphrase.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ~/.ssh
&lt;span class="gp"&gt;$&lt;/span&gt; ssh-keygen -f id_rsa -p
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cyberciti.biz/faq/howto-ssh-changing-passphrase/"&gt;OpenSSH Change a Passphrase With ssh-keygen command&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="linux"></category><category term="ssh"></category></entry><entry><title>[linux]入手 VPS 后首先该做的事情</title><link href="https://mozillazg.com/2013/01/linux-vps-first-things-need-to-do.html" rel="alternate"></link><updated>2013-01-10T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-01-10:2013/01/linux-vps-first-things-need-to-do.html</id><summary type="html">&lt;p&gt;本文将介绍入手 VPS 后首先该做的一些事情。&lt;/p&gt;
&lt;p&gt;本文推荐使用 Xshell 作为 Windows 下的 SSH 客户端。&lt;/p&gt;
&lt;h2&gt;更改 root 用户密码&lt;/h2&gt;
&lt;p&gt;使用 root 登录 ssh 后，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;Xshell:\&amp;gt; ssh root@192.168.1.2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;首先要做的事情就是更改 root 密码，密码记得要复杂点：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt; passwd
&lt;span class="go"&gt;Enter new UNIX password: &lt;/span&gt;
&lt;span class="go"&gt;Retype new UNIX password: &lt;/span&gt;
&lt;span class="go"&gt;passwd: password updated successfully&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改完密码之后可以断开 ssh 重新使用 root 登录验证一下密码。&lt;/p&gt;
&lt;h2&gt;创建普通用户&lt;/h2&gt;
&lt;p&gt;为了安全，平时我们应该以普通用户的身份操作 VPS。所以需要创建一个普通用户。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt; useradd -m hello
&lt;span class="gp"&gt;#&lt;/span&gt; passwd hello
&lt;span class="go"&gt;Enter new UNIX password: &lt;/span&gt;
&lt;span class="go"&gt;Retype new UNIX password: &lt;/span&gt;
&lt;span class="go"&gt;passwd: password updated successfully&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;给用户添加 sudo 命令的使用权限：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\nhello ALL=(ALL) ALL\n&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/sudoers
&lt;span class="gp"&gt;#&lt;/span&gt; tail -3 /etc/sudoers

&lt;span class="go"&gt;hello ALL=(ALL) ALL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;!--
如果不想每次使用 `sudo` 都输入 root 密码，上面的命令修改为：

    :::console
    # echo -e "\nhello ALL=(ALL) NOPASSWD:ALL\n" &gt;&gt; /etc/sudoers
    # tail -3 /etc/sudoers

    hello ALL=(ALL) NOPASSWD:ALL
--&gt;

&lt;h2&gt;使用 SSH 密匙认证登录 VPS&lt;/h2&gt;
&lt;p&gt;为了安全与方便，需要使用 SSH 密匙认证的方式来登录 VPS 。&lt;/p&gt;
&lt;p&gt;首先切换到普通用户下，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt; sudo su -l hello
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果出现 sudo: unable to resolve host xxx 错误:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;查看 hostname:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt; head /etc/hostname
&lt;span class="go"&gt;ubuntu&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改文件 /etc/hosts，增加一行内容 &lt;code&gt;127.0.0.1 hostname&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\n127.0.0.1 ubuntu\n&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/hosts
&lt;span class="gp"&gt;#&lt;/span&gt; tail -3 /etc/hosts

&lt;span class="go"&gt;127.0.0.1 ubuntu&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;生成密钥（可选，可以使用本地已有的公钥，把公钥内容追加到 ~/.ssh/authorized_keys 里就可以了）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ssh-keygen
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一路回车。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ~/.ssh 
&lt;span class="gp"&gt;$&lt;/span&gt; cat id_rsa.pub &amp;gt;&amp;gt; authorized_keys
&lt;span class="gp"&gt;$&lt;/span&gt; ls 
&lt;span class="go"&gt;authorized_keys  id_rsa  id_rsa.pub&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; chmod &lt;span class="m"&gt;600&lt;/span&gt; authorized_keys
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;id_rsa 文件就是客户端用来登录的私钥了，下面我们要把他从服务器上下载下来。&lt;/p&gt;
&lt;p&gt;点击 Xshell 导航栏的“new file transfer” 图标，进入一个终端界面后：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; /home/hello/.ssh
&lt;span class="gp"&gt;$&lt;/span&gt; get id_rsa
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;此时 id_rsa 文件已经在 Xshell 的安装目录下了。然后再配置 xshell 使用密钥登录即可。&lt;/p&gt;
&lt;h2&gt;禁用 root 登录及密码认证登录&lt;/h2&gt;
&lt;p&gt;为了安全起见，我们需要配置 SSH 从而达到禁用 root 登录及密码认证登录的目的。&lt;/p&gt;
&lt;p&gt;在进行下面的配置前你需要再三确认可以通过上面生成的密钥以普通用户的身份登录 VPS，并且 root 密码正确无误的记下来了。&lt;/p&gt;
&lt;p&gt;编辑 sshd 服务器端配置文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo vi /etc/ssh/sshd_config
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将 26 行左右的 &lt;code&gt;#PermitRootLogin yes&lt;/code&gt; 改为 &lt;code&gt;PermitRootLogin no&lt;/code&gt; ，     &lt;br /&gt;
50 行左右的 &lt;code&gt;#PasswordAuthentication yes&lt;/code&gt; 改为 &lt;code&gt;PasswordAuthentication no&lt;/code&gt;。                 &lt;br /&gt;
修改端口, 将 &lt;code&gt;#Port 22&lt;/code&gt; 改为 &lt;code&gt;Port 端口号数字&lt;/code&gt;(比如： &lt;code&gt;Port 7564&lt;/code&gt;)。&lt;/p&gt;
&lt;p&gt;重启 ssh 服务：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo service sshd restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置防火墙 (centos 5/6, ubuntu)&lt;/h2&gt;
&lt;p&gt;下面将使用 iptables 作为服务器的防火墙，如果服务器没有安装的话需要先安装 iptables。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo apt-get install iptables             &lt;span class="c1"&gt;# ubuntu&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; yum install iptables                      &lt;span class="c1"&gt;# centos&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;对于 centos/redhat（适用 centos 5, centos 6）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo vi /etc/sysconfig/iptables

&lt;span class="gp"&gt;#&lt;/span&gt; Firewall configuration written by system-config-firewall
&lt;span class="gp"&gt;#&lt;/span&gt; Manual customization of this file is not recommended.
&lt;span class="go"&gt;*filter&lt;/span&gt;
&lt;span class="go"&gt;:INPUT ACCEPT [0:0]&lt;/span&gt;
&lt;span class="go"&gt;:FORWARD ACCEPT [0:0]&lt;/span&gt;
&lt;span class="go"&gt;:OUTPUT ACCEPT [0:0]&lt;/span&gt;
&lt;span class="go"&gt;-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT&lt;/span&gt;
&lt;span class="go"&gt;-A INPUT -p icmp -j ACCEPT&lt;/span&gt;
&lt;span class="go"&gt;-A INPUT -i lo -j ACCEPT&lt;/span&gt;
&lt;span class="go"&gt;-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT   # 如果有修改 sshd 服务端口号，改为修改后的数字&lt;/span&gt;
&lt;span class="go"&gt;-A INPUT -j REJECT --reject-with icmp-host-prohibited&lt;/span&gt;
&lt;span class="go"&gt;-A FORWARD -j REJECT --reject-with icmp-host-prohibited&lt;/span&gt;
&lt;span class="go"&gt;-A INPUT -j DROP&lt;/span&gt;
&lt;span class="go"&gt;COMMIT&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ubuntu：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo vi /etc/iptables.up.rules  &lt;span class="c1"&gt;# 添加上面的规则&lt;/span&gt;

&lt;span class="gp"&gt;$&lt;/span&gt; sudo vim /etc/network/interfaces
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在  'iface lo inet loopback' 后增加一行 pre-up iptables-restore &amp;lt; /etc/iptables.up.rules&lt;/p&gt;
&lt;p&gt;应用防火墙规则：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo service iptables restart  &lt;span class="c1"&gt;# centos  5, 6&lt;/span&gt;

&lt;span class="gp"&gt;$&lt;/span&gt; sudo iptables-restore &amp;lt; /etc/iptables.up.rules   &lt;span class="c1"&gt;# ubuntu&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;开机启动 iptables ：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo chkconfig iptables on  &lt;span class="c1"&gt;# redhat/centos  5, 6&lt;/span&gt;

&lt;span class="gp"&gt;$&lt;/span&gt; sudo apt-get install sysv-rc-conf  &lt;span class="c1"&gt;# ubuntu&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; sudo sysv-rc-conf iptables on    &lt;span class="c1"&gt;# ubuntu&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;centos 7/8&lt;/h3&gt;
&lt;p&gt;centos 使用 firewalld 服务管理 iptables，上面的配置方法不再生效，需要使用下面的配置方法。&lt;/p&gt;
&lt;h2&gt;修改时区&lt;/h2&gt;
&lt;p&gt;修改时区为东八区，提示信息中输入 &lt;code&gt;y&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://matrix.42qu.com/10728837"&gt;Linux : 大三学生的作品- 42qu.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.linode.com/wiki/index.php/Configuring_IPtables_on_ubuntu_server"&gt;Configuring IPtables on ubuntu server - LinodeWiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.kolab.org/en-US/Kolab_Groupware/3.0/html/Community_Installation_Guide/chap-Community_Installation_Guide-Preparing_the_System.html#sect-Community_Installation_Guide-Preparing_the_System-System_Firewall"&gt;Chapter 1. Preparing the System&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="linux"></category><category term="vps"></category><category term="ssh"></category><category term="iptables"></category><category term="ubuntu"></category><category term="centos"></category></entry></feed>