<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Huang Huang 的博客</title><link href="https://mozillazg.com/" rel="alternate"></link><link href="https://mozillazg.com/feeds/go.atom.xml" rel="self"></link><id>https://mozillazg.com/</id><updated>2019-05-12T00:00:00+00:00</updated><entry><title>Go: 谨慎使用 math/rand 包中的默认随机数函数</title><link href="https://mozillazg.com/2019/05/go-be-careful-of-math-rand-functions.html" rel="alternate"></link><updated>2019-05-12T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2019-05-12:2019/05/go-be-careful-of-math-rand-functions.html</id><summary type="html">&lt;p&gt;一句话总结：math/rand 包中默认的随机数相关函数共享了一个全局锁，
即：所有使用默认随机函数的代码都会去竞争一个全局锁，有时这可能不是你想要的结果。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2 id="hidid1"&gt;全局锁&lt;a class="headerlink" href="#hidid1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;比如 &lt;tt class="docutils literal"&gt;rand.Int63&lt;/tt&gt; 这个函数的 &lt;a class="reference external" href="https://github.com/golang/go/blob/cdb776529ea7a4beac4c8a4d6a9ce149045bd6b5/src/math/rand/rand.go#L319"&gt;源代码&lt;/a&gt; 如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;Int63n&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="kt"&gt;int64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;int64&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;globalRand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Int63n&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到它其实是调用了一个全局的 Rand 实例 &lt;tt class="docutils literal"&gt;globalRand&lt;/tt&gt; ，我们来看一下 &lt;tt class="docutils literal"&gt;globalRand&lt;/tt&gt;
的 &lt;a class="reference external" href="https://github.com/golang/go/blob/release-branch.go1.12/src/math/rand/rand.go#L288"&gt;定义&lt;/a&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;globalRand&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;New&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;lockedSource&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NewSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).(&lt;/span&gt;&lt;span class="nx"&gt;Source64&lt;/span&gt;&lt;span class="p"&gt;)})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过 &lt;a class="reference external" href="https://github.com/golang/go/blob/cdb776529ea7a4beac4c8a4d6a9ce149045bd6b5/src/math/rand/rand.go#L67"&gt;New&lt;/a&gt; 的源码以及 &lt;a class="reference external" href="https://github.com/golang/go/blob/cdb776529ea7a4beac4c8a4d6a9ce149045bd6b5/src/math/rand/rand.go#L109"&gt;globalRand.Int63n&lt;/a&gt; 的源码可以看到关键点是 &lt;tt class="docutils literal"&gt;lockedSource.Int63&lt;/tt&gt; 方法的定义:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;lockedSource&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;     &lt;span class="nx"&gt;lk&lt;/span&gt;  &lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Mutex&lt;/span&gt;
&lt;/span&gt;     &lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="nx"&gt;Source64&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;lockedSource&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Int63&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="kt"&gt;int64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;     &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Lock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;     &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Int63&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
     &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Unlock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过同样的方法查看其他默认的随机函数可以发现，所有的默认随机函数都共享了一个全局锁，调用这些默认随机函数的时候都会先进行一次获取锁的操作。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2 id="hidid2"&gt;解决方法&lt;a class="headerlink" href="#hidid2" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;大部分情况下不需要管这个全局锁的问题，因为大部分情况下都不会介意这点性能消耗。
如果确实特别在意这点性能消耗的话，可以通过定义一个你的包共享的或者结构体实例共享的 Rand 实例来优化锁的性能消耗（最小化锁的粒度，不跟其他包/代码竞争这个锁）。&lt;/p&gt;
&lt;p&gt;例子:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Xyz&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Rand 实例不是并发安全的，需要自行解决并发安全问题&lt;/span&gt;
    &lt;span class="nx"&gt;rndMu&lt;/span&gt; &lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Mutex&lt;/span&gt;
    &lt;span class="nx"&gt;rnd&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Rand&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;Xyz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kt"&gt;int32&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rndMu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Lock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rnd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Int31&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rndMu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Unlock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;Xyz&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;rnd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;New&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;UnixNano&lt;/span&gt;&lt;span class="p"&gt;())),&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者可以考虑使用性能更好的第三方 rand 包： &lt;a class="reference external" href="https://github.com/valyala/fastrand"&gt;valyala/fastrand&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2 id="hidid3"&gt;参考资料&lt;a class="headerlink" href="#hidid3" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://blog.sgmansfield.com/2016/01/the-hidden-dangers-of-default-rand/"&gt;The Hidden Dangers of Default Rand · Scott Mansfield&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/golang/go/blob/release-branch.go1.12/src/math/rand/rand.go"&gt;go/rand.go at release-branch.go1.12 · golang/go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://godoc.org/math/rand"&gt;rand - GoDoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/valyala/fastrand"&gt;valyala/fastrand: Fast and scalable pseudorandom generator for Go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="rand"></category></entry><entry><title>Go: traceback 中包含的信息</title><link href="https://mozillazg.com/2019/05/go-read-and-understand-info-from-stack-trace-traceback.html" rel="alternate"></link><updated>2019-05-02T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2019-05-02:2019/05/go-read-and-understand-info-from-stack-trace-traceback.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2 id="hidid1"&gt;约定&lt;a class="headerlink" href="#hidid1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;示例使用的 Go 版本： &lt;tt class="docutils literal"&gt;go version go1.12.3 darwin/amd64&lt;/tt&gt; 。&lt;/p&gt;
&lt;p&gt;因为默认 &lt;tt class="docutils literal"&gt;go build&lt;/tt&gt; 命令会在编译时进行一些优化导致举简单的示例程序的输出不符合举例的要求，所以除特殊说明外，所有示例程序都使用 &lt;tt class="docutils literal"&gt;go build &lt;span class="pre"&gt;-gcflags=all=&amp;quot;-N&lt;/span&gt; &lt;span class="pre"&gt;-l&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;&amp;lt;name&amp;gt;.go&lt;/span&gt;&lt;/tt&gt; 的方式进行编译。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2 id="hidid2"&gt;基本结构&lt;a class="headerlink" href="#hidid2" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

 &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="hll"&gt;     &lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;运行结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; $ ./hello
 hello
 panic: error

 goroutine &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;running&lt;span class="o"&gt;]&lt;/span&gt;:
&lt;span class="hll"&gt; main.main&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     /Users/xxx/hello.go:7 +0x9f
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从这个最基础的 stack trace 信息中可以看到是 &lt;tt class="docutils literal"&gt;/Users/xxx/hello.go&lt;/tt&gt; 这个文件的第 7 行出错了，并且这个错误发生在 main package 的 main 这个函数中。&lt;/p&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3 id="hidid3"&gt;方法&lt;a class="headerlink" href="#hidid3" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;上面是在函数中 panic 了，下面看一下方法中 panic 的 strace 信息。&lt;/p&gt;
&lt;p&gt;非指针实例的方法：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

 &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;
     &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;u&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;     &lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;运行结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; $ ./method
 panic: error

 goroutine &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;running&lt;span class="o"&gt;]&lt;/span&gt;:
&lt;span class="hll"&gt; main.User.Name&lt;span class="o"&gt;(&lt;/span&gt;0x0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     /Users/xxx/method.go:11 +0x42
&lt;/span&gt; main.main&lt;span class="o"&gt;()&lt;/span&gt;
     /Users/xxx/method.go:7 +0x22
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上方的 &lt;tt class="docutils literal"&gt;main.User.Name(0x0)&lt;/tt&gt; 中的 &lt;tt class="docutils literal"&gt;0x0&lt;/tt&gt; 表示的是方法的返回值，这里是 &lt;tt class="docutils literal"&gt;0&lt;/tt&gt; 。&lt;/p&gt;
&lt;p&gt;指针实例的方法：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;cat&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;go&lt;/span&gt;
 &lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

 &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;
     &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;u&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;     &lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;运行结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; $ ./method
 panic: error

 goroutine &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;running&lt;span class="o"&gt;]&lt;/span&gt;:
&lt;span class="hll"&gt; main.&lt;span class="o"&gt;(&lt;/span&gt;*User&lt;span class="o"&gt;)&lt;/span&gt;.Name&lt;span class="o"&gt;(&lt;/span&gt;0xc000044788, 0x0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     /Users/xxx/method.go:11 +0x42
&lt;/span&gt; main.main&lt;span class="o"&gt;()&lt;/span&gt;
     /Users/xxx/method.go:7 +0x2b
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上方的 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;main.(*User).Name(0xc000044788,&lt;/span&gt; 0x0)&lt;/tt&gt; 中&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;0xc000044788&lt;/tt&gt; 表示的是 &lt;tt class="docutils literal"&gt;u&lt;/tt&gt; 的指针地址( &lt;tt class="docutils literal"&gt;&amp;amp;u&lt;/tt&gt; )。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;0x0&lt;/tt&gt; 表示的是方法的返回值，这里是 &lt;tt class="docutils literal"&gt;0&lt;/tt&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2 id="hidid4"&gt;参数&lt;a class="headerlink" href="#hidid4" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;下面举例说明一下函数或方法的参数在 trace 中是如何展示的。&lt;/p&gt;
&lt;div class="section" id="int-float-bool-array"&gt;
&lt;h3 id="hidint-float-bool-array"&gt;int/float/bool/array&lt;a class="headerlink" href="#hidint-float-bool-array" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;int/float/bool/array 这些基本数据类型就是按本来的只显示的：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="kt"&gt;float32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;     &lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; $ ./base
 panic: &lt;span class="nb"&gt;test&lt;/span&gt;

 goroutine &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;running&lt;span class="o"&gt;]&lt;/span&gt;:
&lt;span class="hll"&gt; main.test&lt;span class="o"&gt;(&lt;/span&gt;0xc000044701, 0x2, 0x400ccccd, 0x1, 0x2, 0x3&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     /Users/xxx/base.go:8 +0x39
&lt;/span&gt; main.main&lt;span class="o"&gt;()&lt;/span&gt;
     /Users/xxx/base.go:4 +0x55
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果解析:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
main.test(
    0xc000044701,   // 一个常量，表示 true, false 是 0xc000044700 （至少在我的机器上是两个值）
    0x2,            // 2
    0x400ccccd,     // 2.2 的 16 进制表示
    0x1, 0x2, 0x3   // [3]int{1, 2, 3}
    )
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="string"&gt;
&lt;h3 id="hidstring"&gt;string&lt;a class="headerlink" href="#hidstring" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;     &lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; $ ./string
 panic: string

 goroutine &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;running&lt;span class="o"&gt;]&lt;/span&gt;:
&lt;span class="hll"&gt; main.test&lt;span class="o"&gt;(&lt;/span&gt;0x1074265, 0x4&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     /Users/mg/tmp/test_go/strace/string.go:8 +0x39
&lt;/span&gt; main.main&lt;span class="o"&gt;()&lt;/span&gt;
     /Users/mg/tmp/test_go/strace/string.go:4 +0x36
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为啥这里 &lt;tt class="docutils literal"&gt;main.test(0x1074265, 0x4)&lt;/tt&gt; 显示的是两个参数呢，因为字符串是用两个参数来表示的: 第一个参数是指向字符串底层数组的指针地址(&lt;tt class="docutils literal"&gt;0x1074265&lt;/tt&gt;)，第二个参数是字符串的长度(&lt;tt class="docutils literal"&gt;0x4&lt;/tt&gt; 表示长度为 4 )。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="slice"&gt;
&lt;h3 id="hidslice"&gt;slice&lt;a class="headerlink" href="#hidslice" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;slice 的数据用三个参数来表示：第一个是指向底层数组的指针，第二个是长度，第三个是容量:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; goroutine &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;running&lt;span class="o"&gt;]&lt;/span&gt;:
&lt;span class="hll"&gt; main.test&lt;span class="o"&gt;(&lt;/span&gt;0xc000044758, 0x3, 0x3&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     /Users/xxx/slice.go:8 +0x39
&lt;/span&gt; main.main&lt;span class="o"&gt;()&lt;/span&gt;
     /Users/xxx/slice.go:4 +0x8c
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="map"&gt;
&lt;h3 id="hidmap"&gt;map&lt;a class="headerlink" href="#hidmap" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;map 的话就是一个指针地址表示:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; goroutine &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;running&lt;span class="o"&gt;]&lt;/span&gt;:
&lt;span class="hll"&gt; main.test&lt;span class="o"&gt;(&lt;/span&gt;0xc000044648&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     /Users/xxx/map.go:10 +0x39
&lt;/span&gt; main.main&lt;span class="o"&gt;()&lt;/span&gt;
     /Users/xxx/map.go:4 +0x139
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="struct"&gt;
&lt;h3 id="hidstruct"&gt;struct&lt;a class="headerlink" href="#hidstruct" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;会显示 struct 中所有字段的值:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;u&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;233&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
     &lt;span class="nx"&gt;age&lt;/span&gt;  &lt;span class="kt"&gt;int&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;u&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;     &lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; $ ./struct
 panic: &lt;span class="nb"&gt;test&lt;/span&gt;

 goroutine &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;running&lt;span class="o"&gt;]&lt;/span&gt;:
&lt;span class="hll"&gt; main.test&lt;span class="o"&gt;(&lt;/span&gt;0x1074474, 0x3, 0xe9&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     /Users/xxx/struct.go:17 +0x39
&lt;/span&gt; main.main&lt;span class="o"&gt;()&lt;/span&gt;
     /Users/xxx/struct.go:8 +0x67
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;解析:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
main.test(
    0x1074474, 0x3,  // name 字段的值 &amp;quot;Tom&amp;quot;，0x1074474: 底层数组，0x3: 字符串长度
    0xe9             // age 字段的值 233 的 16 进制表示
)
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="point"&gt;
&lt;h3 id="hidpoint"&gt;point&lt;a class="headerlink" href="#hidpoint" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;指针类型的话就显示一个指针地址:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; $ ./point
 panic: &lt;span class="nb"&gt;test&lt;/span&gt;

 goroutine &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;running&lt;span class="o"&gt;]&lt;/span&gt;:
&lt;span class="hll"&gt; main.test&lt;span class="o"&gt;(&lt;/span&gt;0xc000044770&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     /Users/xxx/point.go:17 +0x39
&lt;/span&gt; main.main&lt;span class="o"&gt;()&lt;/span&gt;
     /Users/xxx/point.go:8 +0x5a
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="interface"&gt;
&lt;h3 id="hidinterface"&gt;interface&lt;a class="headerlink" href="#hidinterface" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;interface 由两个参数表示，第一个是指向 interface 中存储类型信息的指针，第二个是指向真实数据的指针:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

 &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;namer&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt; &lt;span class="nx"&gt;namer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;233&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
     &lt;span class="nx"&gt;age&lt;/span&gt;  &lt;span class="kt"&gt;int&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;u&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="nx"&gt;namer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;     &lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; $ ./interface
 panic: &lt;span class="nb"&gt;test&lt;/span&gt;

 goroutine &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;running&lt;span class="o"&gt;]&lt;/span&gt;:
&lt;span class="hll"&gt; main.test&lt;span class="o"&gt;(&lt;/span&gt;0x107c5c0, 0xc000044770&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     /Users/xxx/interface.go:25 +0x39
&lt;/span&gt; main.main&lt;span class="o"&gt;()&lt;/span&gt;
     /Users/xxx/interface.go:12 +0x8c

 // 0x107c5c0 包含类型信息的指针地址
 // 0xc000044770 实际数据的指针地址
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3 id="hidid5"&gt;多个参数用一个值表示&lt;a class="headerlink" href="#hidid5" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;当多个连续的参数可以用一个值表示的时候，trace 中就会用一个值来表示多个参数的值，比如&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="kt"&gt;uint8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;     &lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; $ ./pack
 panic: &lt;span class="nb"&gt;test&lt;/span&gt;

 goroutine &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;running&lt;span class="o"&gt;]&lt;/span&gt;:
&lt;span class="hll"&gt; main.test&lt;span class="o"&gt;(&lt;/span&gt;0x3c1e14030201&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     /Users/mg/tmp/test_go/strace/pack.go:8 +0x39
&lt;/span&gt; main.main&lt;span class="o"&gt;()&lt;/span&gt;
     /Users/mg/tmp/test_go/strace/pack.go:4 +0x30
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;0x3c1e14030201&lt;/tt&gt; 是由下面6个值组成的:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Bits     Binary     Hex     Value
00-07    0000 0001  01      1
08-15    0000 0002  02      2
16-23    0000 0003  03      3
24-31    0001 0100  14      20
32-39    0001 1110  1e      30
40-47    0011 1100  3c      60
&lt;/pre&gt;
&lt;p&gt;P.S. 等将来找到对应的源码后再补充更详细的合并规则 :joy&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="traceback"&gt;
&lt;h3 id="hidtraceback"&gt;traceback 中显示的值个数&lt;a class="headerlink" href="#hidtraceback" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;最多只能显示 &lt;a class="reference external" href="https://github.com/golang/go/blob/59ea685ce96a696281e56badd80d2e5dd618b0b0/src/runtime/traceback.go#L435-L437"&gt;10 个值&lt;/a&gt; ，超过 10 个时会用 &lt;tt class="docutils literal"&gt;...&lt;/tt&gt; 代替:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;     &lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; $ ./max
 panic: &lt;span class="nb"&gt;test&lt;/span&gt;

 goroutine &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;running&lt;span class="o"&gt;]&lt;/span&gt;:
&lt;span class="hll"&gt; main.test&lt;span class="o"&gt;(&lt;/span&gt;0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, ...&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     /Users/xxx/max.go:8 +0x39
&lt;/span&gt; main.main&lt;span class="o"&gt;()&lt;/span&gt;
     /Users/xxx/max.go:4 +0x4c
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2 id="hidid6"&gt;参考资料&lt;a class="headerlink" href="#hidid6" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://research.swtch.com/godata"&gt;research!rsc: Go Data Structures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://research.swtch.com/interfaces"&gt;research!rsc: Go Data Structures: Interfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.joeshaw.org/understanding-go-panic-output/"&gt;Understanding Go panic output – joe shaw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.ardanlabs.com/blog/2015/01/stack-traces-in-go.html"&gt;Stack Traces In Go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="debug"></category></entry><entry><title>Go: 关于锁（mutex）的一些使用注意事项</title><link href="https://mozillazg.com/2019/04/notes-about-go-lock-mutex.html" rel="alternate"></link><updated>2019-04-07T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2019-04-07:2019/04/notes-about-go-lock-mutex.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2 id="hidid1"&gt;前言&lt;a class="headerlink" href="#hidid1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;最近踩了一个锁的坑，所以在这里简单记录一些 Go 中关于锁（mutex）使用的一些注意事项。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2 id="hidid2"&gt;尽量减少锁的持有时间&lt;a class="headerlink" href="#hidid2" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;尽量减少锁的持有时间，毕竟使用锁是有代价的，通过减少锁的持有时间来减轻这个代价：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;细化锁的粒度。通过细化锁的粒度来减少锁的持有时间以及避免在持有锁操作的时候做各种耗时的操作。&lt;/li&gt;
&lt;li&gt;不要在持有锁的时候做 IO 操作。尽量只通过持有锁来保护 IO 操作需要的资源而不是 IO 操作本身：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;doSomething&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Lock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;// 各种耗时的 IO 操作&lt;/span&gt;
    &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Unlock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// 改为&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;doSomething&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Lock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Unlock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="defer"&gt;
&lt;h2 id="hiddefer"&gt;善用 defer 来确保在函数内正确释放了锁&lt;a class="headerlink" href="#hiddefer" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;尤其是在那些内部有好几个通过 &lt;tt class="docutils literal"&gt;if err != nil&lt;/tt&gt; 判断来提前返回的函数中，通过 &lt;tt class="docutils literal"&gt;defer&lt;/tt&gt; 可以确保不会遗漏释放锁操作，避免出现死锁问题，以及避免函数内非预期的 panic 导致死锁的问题：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;doSomething&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Lock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Unlock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;不过使用 defer 的时候也要注意别因为习惯性的 &lt;tt class="docutils literal"&gt;defer m.Unlock()&lt;/tt&gt; 导致无意中在持有锁的时候做了 IO 操作，出现了非预期的持有锁时间太长的问题。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// 非预期的在持有锁期间做 IO 操作&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;doSomething&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Lock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Unlock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;// 各种耗时的 IO 操作&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以及 &lt;tt class="docutils literal"&gt;defer&lt;/tt&gt; 其实是有点 &lt;a class="reference external" href="https://medium.com/i0exception/runtime-overhead-of-using-defer-in-go-7140d5c40e32"&gt;性能&lt;/a&gt; &lt;a class="reference external" href="https://github.com/golang/go/issues/14939"&gt;消耗&lt;/a&gt; 的，需要取舍下酌情使用。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="rwmutex"&gt;
&lt;h2 id="hidrwmutex"&gt;在适当时候使用 RWMutex&lt;a class="headerlink" href="#hidrwmutex" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;当确定操作不会修改保护的资源时，可以使用 RWMutex 来减少锁等待时间（不同的 goroutine 可以同时持有 RLock, 但是 Lock 限制了只能有一个 goroutine 持有 Lock）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;nickName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;rw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RLock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="nx"&gt;rw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RUnlock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;SetName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;rw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Lock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="nx"&gt;rw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Unlock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="copy"&gt;
&lt;h2 id="hidcopy"&gt;copy 结构体操作可能导致非预期的死锁&lt;a class="headerlink" href="#hidcopy" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;copy 结构体时，如果结构体中有锁的话，记得重新初始化一个锁对象，否则会出现非预期的死锁：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

 &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
     &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;
     &lt;span class="s"&gt;&amp;quot;sync&amp;quot;&lt;/span&gt;
 &lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Mutex&lt;/span&gt;

     &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;u1&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="nx"&gt;u1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Lock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
     &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="nx"&gt;u1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Unlock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="hll"&gt;     &lt;span class="nx"&gt;tmp&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;u1&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     &lt;span class="nx"&gt;u2&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;tmp&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     &lt;span class="c1"&gt;// u2.Mutex = sync.Mutex{} // 没有这一行就会死锁&lt;/span&gt;
&lt;/span&gt;
     &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%#p\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;u1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%#p\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;u2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

     &lt;span class="nx"&gt;u2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Lock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
     &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="nx"&gt;u2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Unlock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ go run main.go
c00000a080
c00000a0a0
fatal error: all goroutines are asleep - deadlock!

goroutine &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;semacquire&lt;span class="o"&gt;]&lt;/span&gt;:
sync.runtime_SemacquireMutex&lt;span class="o"&gt;(&lt;/span&gt;0xc00000a0a4, 0x0&lt;span class="o"&gt;)&lt;/span&gt;
    /usr/local/Cellar/go/1.11/libexec/src/runtime/sema.go:71 +0x3d
sync.&lt;span class="o"&gt;(&lt;/span&gt;*Mutex&lt;span class="o"&gt;)&lt;/span&gt;.Lock&lt;span class="o"&gt;(&lt;/span&gt;0xc00000a0a0&lt;span class="o"&gt;)&lt;/span&gt;
    /usr/local/Cellar/go/1.11/libexec/src/sync/mutex.go:134 +0xff
main.main&lt;span class="o"&gt;()&lt;/span&gt;
    /Users/xxx/tmp/golang/main.go:26 +0x17f
&lt;span class="nb"&gt;exit&lt;/span&gt; status 2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;文档中也有类似的警告：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A Mutex must not be copied after first use&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://godoc.org/sync#Mutex"&gt;https://godoc.org/sync#Mutex&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="go-vet"&gt;
&lt;h2 id="hidgo-vet"&gt;使用 go vet 工具检查代码中锁的使用问题&lt;a class="headerlink" href="#hidgo-vet" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;可以通过 &lt;a class="reference external" href="https://golang.org/cmd/vet/"&gt;vet&lt;/a&gt; 这个命令行来检查上面的锁 copy 的问题。比如上面的例子的检查结果如下：:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ go vet main.go
# command-line-arguments
./main.go:19:9: assignment copies lock value to tmp: command-line-arguments.User
&lt;/pre&gt;
&lt;p&gt;可以看到 vet 提示 19 行那里的 copy 操作中 copy 了一个锁。&lt;/p&gt;
&lt;p&gt;BTW，使用 go vet 命令对整个项目进行检查时，可以通过 &lt;tt class="docutils literal"&gt;go vet $(go list &lt;span class="pre"&gt;./...&lt;/span&gt; | grep &lt;span class="pre"&gt;-v&lt;/span&gt; /vendor/)&lt;/tt&gt; 这个命令忽略掉 vendor 下的包。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="build-test-race"&gt;
&lt;h2 id="hidbuild-test-race"&gt;build/test 时使用 -race 参数以便运行时检测数据竞争问题&lt;a class="headerlink" href="#hidbuild-test-race" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;可以在执行 go build 或 go test 时增加一个 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-race&lt;/span&gt;&lt;/tt&gt; 参数来开启数据竞争检测功能，通过这种方式来实现在本地开发环境/CI/测试环境阶段发现程序中可能存在的数据竞争问题：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;sync&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Mutex&lt;/span&gt;

    &lt;span class="nx"&gt;tasks&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;do&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tasks&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Lock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Unlock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tasks&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;do&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-race&lt;/span&gt;&lt;/tt&gt; 参数可以开启数据竞争检测（详见： &lt;a class="reference external" href="https://golang.org/doc/articles/race_detector.html"&gt;Data Race Detector - The Go Programming Language&lt;/a&gt; ）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ go build -race -o main .
$
$ ./main
&lt;span class="o"&gt;==================&lt;/span&gt;
WARNING: DATA RACE
Read at 0x00c0000a0048 by main goroutine:
  main.&lt;span class="o"&gt;(&lt;/span&gt;*Todo&lt;span class="o"&gt;)&lt;/span&gt;.do&lt;span class="o"&gt;()&lt;/span&gt;
      /Users/xxx/tmp/golang/race/main.go:15 +0x42
  main.main&lt;span class="o"&gt;()&lt;/span&gt;
      /Users/xxx/tmp/golang/race/main.go:34 +0x154

Previous write at 0x00c0000a0048 by goroutine 6:
  main.&lt;span class="o"&gt;(&lt;/span&gt;*Todo&lt;span class="o"&gt;)&lt;/span&gt;.Add&lt;span class="o"&gt;()&lt;/span&gt;
      /Users/xxx/tmp/golang/race/main.go:24 +0x11d

Goroutine &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;finished&lt;span class="o"&gt;)&lt;/span&gt; created at:
  main.main&lt;span class="o"&gt;()&lt;/span&gt;
      /Users/xxx/tmp/golang/race/main.go:31 +0x127
&lt;span class="o"&gt;==================&lt;/span&gt;
&lt;span class="nv"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;==================&lt;/span&gt;
WARNING: DATA RACE
Read at 0x00c0000b0010 by main goroutine:
  main.&lt;span class="o"&gt;(&lt;/span&gt;*Todo&lt;span class="o"&gt;)&lt;/span&gt;.do&lt;span class="o"&gt;()&lt;/span&gt;
      /Users/xxx/tmp/golang/race/main.go:15 +0x85
  main.main&lt;span class="o"&gt;()&lt;/span&gt;
      /Users/xxx/tmp/golang/race/main.go:34 +0x154

Previous write at 0x00c0000b0010 by goroutine 7:
  main.&lt;span class="o"&gt;(&lt;/span&gt;*Todo&lt;span class="o"&gt;)&lt;/span&gt;.Add&lt;span class="o"&gt;()&lt;/span&gt;
      /Users/xxx/tmp/golang/race/main.go:24 +0xe3

Goroutine &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;finished&lt;span class="o"&gt;)&lt;/span&gt; created at:
  main.main&lt;span class="o"&gt;()&lt;/span&gt;
      /Users/xxx/tmp/golang/race/main.go:31 +0x127
&lt;span class="o"&gt;==================&lt;/span&gt;
1
0
1
Found &lt;span class="m"&gt;2&lt;/span&gt; data race&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="go-deadlock"&gt;
&lt;h2 id="hidgo-deadlock"&gt;使用 go-deadlock 检测死锁或锁等待问题&lt;a class="headerlink" href="#hidgo-deadlock" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;上面说的在持有锁的时候做 IO 操作或其他非预期的耗时超时的问题，一方面需要在写程序的时候注意一下，另一方面也有可能是无意中代入进去的（比如上面提到的习惯性 defer 导致的）。对于那些无意中代入进去的锁等待的问题人为的去 review 的话通常很难发现，此时就需要用工具来检测了。恰好有一个叫 &lt;a class="reference external" href="https://github.com/sasha-s/go-deadlock"&gt;go-deadlock&lt;/a&gt; 的工具可以实现这个功能。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;net/http&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;time&amp;quot;&lt;/span&gt;

    &lt;span class="nx"&gt;sync&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;github.com/sasha-s/go-deadlock&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;mu&lt;/span&gt; &lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Mutex&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://baidu.com:90&amp;quot;&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;do&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;mu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Lock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="nx"&gt;mu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Unlock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nx"&gt;u&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;// 非预期的在持有锁期间做 IO 操作，导致锁等待时间变长&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// 检测超过 100 ms 的锁等待&lt;/span&gt;
    &lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Opts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DeadlockTimeout&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Millisecond&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;wg&lt;/span&gt; &lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WaitGroup&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Done&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="nx"&gt;do&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Wait&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ go run main.go
POTENTIAL DEADLOCK:
Previous place where the lock was grabbed
goroutine &lt;span class="m"&gt;36&lt;/span&gt; lock 0x1483b90
main.go:14 main.do &lt;span class="o"&gt;{&lt;/span&gt; mu.Lock&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;
&lt;span class="s"&gt;main.go:30 main&lt;/span&gt;.main.func1 &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

Have been trying to lock it again &lt;span class="k"&gt;for&lt;/span&gt; more than 100ms
goroutine &lt;span class="m"&gt;35&lt;/span&gt; lock 0x1483b90
main.go:14 main.do &lt;span class="o"&gt;{&lt;/span&gt; mu.Lock&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;
&lt;span class="s"&gt;main.go:30 main&lt;/span&gt;.main.func1 &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

Here is what goroutine &lt;span class="m"&gt;36&lt;/span&gt; doing now
goroutine &lt;span class="m"&gt;36&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;:
net/http.&lt;span class="o"&gt;(&lt;/span&gt;*Transport&lt;span class="o"&gt;)&lt;/span&gt;.getConn&lt;span class="o"&gt;(&lt;/span&gt;0x14616c0, 0xc00015e150, 0x0, 0x128adb3, 0x4, 0xc000014100, 0xc, 0x0, 0x0, 0xc0000559e8&lt;span class="o"&gt;)&lt;/span&gt;
    /usr/local/Cellar/go/1.11/libexec/src/net/http/transport.go:1004 +0x58e
net/http.&lt;span class="o"&gt;(&lt;/span&gt;*Transport&lt;span class="o"&gt;)&lt;/span&gt;.roundTrip&lt;span class="o"&gt;(&lt;/span&gt;0x14616c0, 0xc000160000, 0x203000, 0xc000055c90, 0x11d823a&lt;span class="o"&gt;)&lt;/span&gt;
    /usr/local/Cellar/go/1.11/libexec/src/net/http/transport.go:451 +0x690
net/http.&lt;span class="o"&gt;(&lt;/span&gt;*Transport&lt;span class="o"&gt;)&lt;/span&gt;.RoundTrip&lt;span class="o"&gt;(&lt;/span&gt;0x14616c0, 0xc000160000, 0x14616c0, 0x0, 0x0&lt;span class="o"&gt;)&lt;/span&gt;
    /usr/local/Cellar/go/1.11/libexec/src/net/http/roundtrip.go:17 +0x35
net/http.send&lt;span class="o"&gt;(&lt;/span&gt;0xc000160000, 0x12c78a0, 0x14616c0, 0x0, 0x0, 0x0, 0xc00000e030, 0x1708000, 0xc000055d20, 0x1&lt;span class="o"&gt;)&lt;/span&gt;
    /usr/local/Cellar/go/1.11/libexec/src/net/http/client.go:250 +0x14b
net/http.&lt;span class="o"&gt;(&lt;/span&gt;*Client&lt;span class="o"&gt;)&lt;/span&gt;.send&lt;span class="o"&gt;(&lt;/span&gt;0x1466200, 0xc000160000, 0x0, 0x0, 0x0, 0xc00000e030, 0x0, 0x1, 0x0&lt;span class="o"&gt;)&lt;/span&gt;
    /usr/local/Cellar/go/1.11/libexec/src/net/http/client.go:174 +0xfa
net/http.&lt;span class="o"&gt;(&lt;/span&gt;*Client&lt;span class="o"&gt;)&lt;/span&gt;.do&lt;span class="o"&gt;(&lt;/span&gt;0x1466200, 0xc000160000, 0x0, 0x0, 0x0&lt;span class="o"&gt;)&lt;/span&gt;
    /usr/local/Cellar/go/1.11/libexec/src/net/http/client.go:641 +0x2a8
net/http.&lt;span class="o"&gt;(&lt;/span&gt;*Client&lt;span class="o"&gt;)&lt;/span&gt;.Do&lt;span class="o"&gt;(&lt;/span&gt;0x1466200, 0xc000160000, 0x128adb3, 0x13, 0x0&lt;span class="o"&gt;)&lt;/span&gt;
    /usr/local/Cellar/go/1.11/libexec/src/net/http/client.go:509 +0x35
net/http.&lt;span class="o"&gt;(&lt;/span&gt;*Client&lt;span class="o"&gt;)&lt;/span&gt;.Get&lt;span class="o"&gt;(&lt;/span&gt;0x1466200, 0x128adb3, 0x13, 0xc0000220c0, 0x12412c0, 0xc000055f80&lt;span class="o"&gt;)&lt;/span&gt;
    /usr/local/Cellar/go/1.11/libexec/src/net/http/client.go:398 +0x9d
net/http.Get&lt;span class="o"&gt;(&lt;/span&gt;0x128adb3, 0x13, 0x1483b90, 0x0, 0xc000114fb8&lt;span class="o"&gt;)&lt;/span&gt;
    /usr/local/Cellar/go/1.11/libexec/src/net/http/client.go:370 +0x41
main.do&lt;span class="o"&gt;()&lt;/span&gt;
    /Users/xxx/tmp/golang/deadlock/main.go:18 +0x75
main.main.func1&lt;span class="o"&gt;(&lt;/span&gt;0xc00009c3f4&lt;span class="o"&gt;)&lt;/span&gt;
    /Users/xxx/tmp/golang/deadlock/main.go:30 +0x48
created by main.main
    /Users/xxx/tmp/golang/deadlock/main.go:28 +0x83

&lt;span class="nb"&gt;exit&lt;/span&gt; status 2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过上面的输出可以知道 goroutine 36 持有锁的时间过长导致其他 goroutine 获取锁的等待时间超过了 100 ms ，并且 goroutine 36 在持有锁期间正在做 18 行的 http 操作。可以看到 go-deadlock 在优化锁等待时间方面有很大的帮助，可以帮助我们及时发现异常的锁使用姿势。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="trylock"&gt;
&lt;h2 id="hidtrylock"&gt;实现 tryLock 功能&lt;a class="headerlink" href="#hidtrylock" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;一般 &lt;tt class="docutils literal"&gt;Lock()&lt;/tt&gt; 如果拿不到锁的话，会一直阻塞在那里，在某些场景下这个功能不是我们所期望的结果，我们可能希望程序在一定时间内无法获取到锁的话就做其他操作或者直接返回失败：比如在一个 http server 中，处理请求时因为锁等待时间太长导致客户端大量超时，引发客户端重连以及服务端 goroutine 数量持续增长（虽然客户端超时了，但是处理请求的 goroutine 还在继续处理已超时的请求并且阻塞在了获取锁的地方，然后客户端重连又加重了这个问题，表现就是处理请求的 goroutine 数量直线上升）。这个时候我们就需要有一个类似 tryLock 的功能，在发现短时间内无法获取到锁的时候直接返回失败的响应，防止问题进一步加重（Fail Fast）。&lt;/p&gt;
&lt;p&gt;关于 tryLock 这个功能的介绍可以参考 Java 中 &lt;a class="reference external" href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/locks/Lock.html#tryLock-long-java.util.concurrent.TimeUnit-"&gt;tryLock&lt;/a&gt; 的介绍，至于 Go 中如何实现 tryLock 可以参考 &lt;a class="reference external" href="https://colobu.com/2017/03/09/implement-TryLock-in-Go/"&gt;为 Go Mutex 实现 TryLock 方法 | 鸟窝&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="channel"&gt;
&lt;h2 id="hidchannel"&gt;改为使用 channel&lt;a class="headerlink" href="#hidchannel" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;有些时候可能使用 channel 会更符合需求，对于这些更适合 channel 的场景可以改为使用 channel 而不是 lock （可以参考 &lt;a class="reference external" href="https://blog.golang.org/share-memory-by-communicating"&gt;Share Memory By Communicating - The Go Blog&lt;/a&gt; 这篇文章），合适的场景选择合适的方法即可，既不需要畏惧 channel 也不必畏惧 lock 。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2 id="hidid3"&gt;总结&lt;a class="headerlink" href="#hidid3" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;目前能想到的就是这些注意事项了，欢迎纠正和补充。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2 id="hidid4"&gt;参考资料&lt;a class="headerlink" href="#hidid4" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://godoc.org/sync"&gt;sync - GoDoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/sasha-s/go-deadlock"&gt;sasha-s/go-deadlock: Online deadlock detection in go (golang)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://hackernoon.com/dancing-with-go-s-mutexes-92407ae927bf"&gt;Dancing with Go’s Mutexes – Hacker Noon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wavded.com/post/golang-deadlockish/"&gt;Debugging a potential deadlock in Go with go-deadlock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://golang.org/doc/articles/race_detector.html"&gt;Data Race Detector - The Go Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://blog.golang.org/share-memory-by-communicating"&gt;Share Memory By Communicating - The Go Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/locks/Lock.html#tryLock-long-java.util.concurrent.TimeUnit-"&gt;Lock (Java Platform SE 8 )&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://colobu.com/2017/03/09/implement-TryLock-in-Go/"&gt;为 Go Mutex 实现 TryLock 方法 | 鸟窝&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Fail-fast"&gt;Fail-fast - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://medium.com/i0exception/runtime-overhead-of-using-defer-in-go-7140d5c40e32"&gt;Runtime overhead of using defer in go – i0exception – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/golang/go/issues/14939"&gt;runtime: defer is slow · Issue #14939 · golang/go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://golang.org/cmd/vet/"&gt;vet - The Go Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="lock"></category><category term="mutex"></category></entry><entry><title>go-httpheader：将 struct 转换为 http.Header</title><link href="https://mozillazg.com/2017/07/go-intro-go-httpheader.html" rel="alternate"></link><updated>2017-07-02T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2017-07-02:2017/07/go-intro-go-httpheader.html</id><summary type="html">&lt;p&gt;最近在开发 &lt;a class="reference external" href="https://github.com/mozillazg/go-cos"&gt;go-cos&lt;/a&gt; 时，
因为 cos API 的很多可选参数都是放在 header 中，
所以开发了一个将 struct 转换为 http.Header 的包。&lt;/p&gt;
&lt;p&gt;项目地址： &lt;a class="reference external" href="https://github.com/mozillazg/go-httpheader"&gt;https://github.com/mozillazg/go-httpheader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;net/http&amp;quot;&lt;/span&gt;

    &lt;span class="s"&gt;&amp;quot;github.com/mozillazg/go-httpheader&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Options&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;hide&lt;/span&gt;         &lt;span class="kt"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;ContentType&lt;/span&gt;  &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="s"&gt;`header:&amp;quot;Content-Type&amp;quot;`&lt;/span&gt;
    &lt;span class="nx"&gt;Length&lt;/span&gt;       &lt;span class="kt"&gt;int&lt;/span&gt;
    &lt;span class="nx"&gt;XArray&lt;/span&gt;       &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="s"&gt;`header:&amp;quot;X-Array&amp;quot;`&lt;/span&gt;
    &lt;span class="nx"&gt;TestHide&lt;/span&gt;     &lt;span class="kt"&gt;string&lt;/span&gt;   &lt;span class="s"&gt;`header:&amp;quot;-&amp;quot;`&lt;/span&gt;
    &lt;span class="nx"&gt;IgnoreEmpty&lt;/span&gt;  &lt;span class="kt"&gt;string&lt;/span&gt;   &lt;span class="s"&gt;`header:&amp;quot;X-Empty,omitempty&amp;quot;`&lt;/span&gt;
    &lt;span class="nx"&gt;IgnoreEmptyN&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;   &lt;span class="s"&gt;`header:&amp;quot;X-Empty-N,omitempty&amp;quot;`&lt;/span&gt;
    &lt;span class="nx"&gt;CustomHeader&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;opt&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;Options&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;         &lt;span class="s"&gt;&amp;quot;hide&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;ContentType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;       &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;XArray&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;       &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;test2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="nx"&gt;TestHide&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="s"&gt;&amp;quot;hide&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;IgnoreEmptyN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;CustomHeader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;&amp;quot;X-Test-1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;233&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s"&gt;&amp;quot;X-Test-2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;666&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;httpheader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;// h:&lt;/span&gt;
    &lt;span class="c1"&gt;// http.Header{&lt;/span&gt;
    &lt;span class="c1"&gt;//      &amp;quot;X-Test-1&amp;quot;:     []string{&amp;quot;233&amp;quot;},&lt;/span&gt;
    &lt;span class="c1"&gt;//      &amp;quot;X-Test-2&amp;quot;:     []string{&amp;quot;666&amp;quot;},&lt;/span&gt;
    &lt;span class="c1"&gt;//      &amp;quot;Content-Type&amp;quot;: []string{&amp;quot;application/json&amp;quot;},&lt;/span&gt;
    &lt;span class="c1"&gt;//      &amp;quot;Length&amp;quot;:       []string{&amp;quot;2&amp;quot;},&lt;/span&gt;
    &lt;span class="c1"&gt;//      &amp;quot;X-Array&amp;quot;:      []string{&amp;quot;test1&amp;quot;, &amp;quot;test2&amp;quot;},&lt;/span&gt;
    &lt;span class="c1"&gt;//      &amp;quot;X-Empty-N&amp;quot;:    []string{&amp;quot;n&amp;quot;},&lt;/span&gt;
    &lt;span class="c1"&gt;//}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更多信息详见项目文档：&lt;a class="reference external" href="https://godoc.org/github.com/mozillazg/go-httpheader"&gt;https://godoc.org/github.com/mozillazg/go-httpheader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;希望能对有同样需求的人有所帮助。&lt;/p&gt;
</summary></entry><entry><title>[go]如何让命令行程序支持管道和重定向输入</title><link href="https://mozillazg.com/2016/03/go-let-cli-support-pipe-read-data-from-stdin.html" rel="alternate"></link><updated>2016-03-12T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2016-03-12:2016/03/go-let-cli-support-pipe-read-data-from-stdin.html</id><summary type="html">&lt;p&gt;管道和重定向输入的数据都是通过标准输入传入程序的， &lt;tt class="docutils literal"&gt;os.Stdin&lt;/tt&gt; 即为标准输入。&lt;/p&gt;
&lt;p&gt;可以通过 &lt;tt class="docutils literal"&gt;golang.org/x/crypto/ssh/terminal&lt;/tt&gt; 的 &lt;tt class="docutils literal"&gt;terminal.IsTerminal(0)&lt;/tt&gt;
判断是否是管道和重定向输入，为什么是 &lt;tt class="docutils literal"&gt;0&lt;/tt&gt; ：因为标准输入的文件描述符是 &lt;tt class="docutils literal"&gt;0&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;为 &lt;tt class="docutils literal"&gt;true&lt;/tt&gt; 时表示是交互式环境&lt;/li&gt;
&lt;li&gt;为 &lt;tt class="docutils literal"&gt;false&lt;/tt&gt; 时是我们要的场景&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先需要安装 &lt;tt class="docutils literal"&gt;golang.org/x/crypto/ssh/terminal&lt;/tt&gt; 这个包（安装时需要 VPN 的辅助）:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
go get golang.org/x/crypto/ssh/terminal
&lt;/pre&gt;
&lt;p&gt;也可以使用 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;github.com/mattn/go-isatty&lt;/span&gt;&lt;/tt&gt; 这个包:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
!isatty.IsTerminal(os.Stdin.Fd())
&lt;/pre&gt;
&lt;p&gt;下面是示例代码:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;flag&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;io/ioutil&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;os&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;strings&amp;quot;&lt;/span&gt;

    &lt;span class="s"&gt;&amp;quot;golang.org/x/crypto/ssh/terminal&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;flag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Parse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;flag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;terminal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;IsTerminal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;ioutil&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ReadAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stdin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;测试效果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hello&amp;quot;&lt;/span&gt; &amp;gt; hello.txt
$ go run main.go hello world       &lt;span class="c1"&gt;# 参数输入&lt;/span&gt;
hello world
$ cat hello.txt &lt;span class="p"&gt;|&lt;/span&gt; go run main.go   &lt;span class="c1"&gt;# 管道输入&lt;/span&gt;
hello

$ go run main.go &amp;lt; hello.txt       &lt;span class="c1"&gt;# 重定向输入&lt;/span&gt;
hello

$
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2 id="hidid1"&gt;参考资料&lt;a class="headerlink" href="#hidid1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://godoc.org/golang.org/x/crypto/ssh/terminal"&gt;terminal - GoDoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://godoc.org/os"&gt;os - GoDoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://godoc.org/io/ioutil"&gt;ioutil - GoDoc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>comic.mozillazg.com 上线</title><link href="https://mozillazg.com/2015/04/comic.mozillazg.com-is-online.html" rel="alternate"></link><updated>2015-04-07T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-04-07:2015/04/comic.mozillazg.com-is-online.html</id><summary type="html">&lt;p&gt;&lt;a href="http://comic.mozillazg.com"&gt;http://comic.mozillazg.com&lt;/a&gt;  已于昨日正式上线。&lt;/p&gt;
&lt;p&gt;这个网站将用于展示我翻译的一些漫画。&lt;/p&gt;
&lt;p&gt;下面说一下这个网站所使用的技术：&lt;/p&gt;
&lt;p&gt;前端：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bootstrap&lt;/li&gt;
&lt;li&gt;jQuery&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;后端：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go：编程语言&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bmizerany/pat"&gt;pat&lt;/a&gt;： Go HTTP Router 包&lt;/li&gt;
&lt;li&gt;PostgreSQL：数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;部署：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supervisor：进程管理/监控&lt;/li&gt;
&lt;li&gt;nginx：反向代理/负载均衡&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;源代码： &lt;a href="https://github.com/mozillazg/comic"&gt;https://github.com/mozillazg/comic&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>[go] 如何为 HTTP Server 增加 HTTP Basic Auth</title><link href="https://mozillazg.com/2015/04/go-add-http-basic-auth-for-http-server.html" rel="alternate"></link><updated>2015-08-27T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-04-07:2015/04/go-add-http-basic-auth-for-http-server.html</id><summary type="html">&lt;p&gt;一句话总结就是：增加一个装饰器函数 &lt;tt class="docutils literal"&gt;BasicAuth&lt;/tt&gt; 装饰需要被保护的函数。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;bytes&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;encoding/base64&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;io&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;log&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;net/http&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;strings&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ViewFunc&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;BasicAuth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="nx"&gt;ViewFunc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;passwd&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;ViewFunc&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;basicAuthPrefix&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Basic &amp;quot;&lt;/span&gt;

        &lt;span class="c1"&gt;// 获取 request header&lt;/span&gt;
        &lt;span class="nx"&gt;auth&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Authorization&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;// 如果是 http basic auth&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HasPrefix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;basicAuthPrefix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// 解码认证信息&lt;/span&gt;
            &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;base64&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StdEncoding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DecodeString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;basicAuthPrefix&lt;/span&gt;&lt;span class="p"&gt;):],&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;pair&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SplitN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="nb"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pair&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pair&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                    &lt;span class="nx"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pair&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;passwd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="c1"&gt;// 执行被装饰的函数&lt;/span&gt;
                    &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// 认证失败，提示 401 Unauthorized&lt;/span&gt;
        &lt;span class="c1"&gt;// Restricted 可以改成其他的值&lt;/span&gt;
        &lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;WWW-Authenticate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;`Basic realm=&amp;quot;Restricted&amp;quot;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;// 401 状态码&lt;/span&gt;
        &lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WriteHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StatusUnauthorized&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// 需要被保护的内容&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;HelloServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WriteString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;hello, world!\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="nb"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;passwd&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="nb"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;// 装饰需要保护的 handler&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;BasicAuth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;HelloServer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;passwd&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Listen :8000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ListenAndServe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:8000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ListenAndServe: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2 id="hidid1"&gt;效果&lt;a class="headerlink" href="#hidid1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;未输入用户名和密码的情况下，提示未认证：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt; ~$ curl -i http://127.0.0.1:8000/hello&lt;/span&gt;
&lt;span class="go"&gt;HTTP/1.1 401 Unauthorized&lt;/span&gt;
&lt;span class="go"&gt;Www-Authenticate: Basic realm=&amp;quot;Restricted&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;Date: Mon, 06 Apr 2015 11:56:10 GMT&lt;/span&gt;
&lt;span class="go"&gt;Content-Length: 0&lt;/span&gt;
&lt;span class="go"&gt;Content-Type: text/plain; charset=utf-8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输入用户名和密码，显示被保护的内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt; ~$ curl -i --user &amp;quot;foo:bar&amp;quot; http://127.0.0.1:8000/hello&lt;/span&gt;
&lt;span class="go"&gt;HTTP/1.1 200 OK&lt;/span&gt;
&lt;span class="go"&gt;Date: Mon, 06 Apr 2015 11:56:23 GMT&lt;/span&gt;
&lt;span class="go"&gt;Content-Length: 14&lt;/span&gt;
&lt;span class="go"&gt;Content-Type: text/plain; charset=utf-8&lt;/span&gt;

&lt;span class="go"&gt;hello, world!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2 id="hidid2"&gt;参考资料&lt;a class="headerlink" href="#hidid2" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://godoc.org/net/http"&gt;https://godoc.org/net/http&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tools.ietf.org/html/rfc2617#section-2"&gt;http://tools.ietf.org/html/rfc2617#section-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/12701085/what-is-the-realm-in-basic-authentication"&gt;http://stackoverflow.com/questions/12701085/what-is-the-realm-in-basic-authentication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>[go]regexp 包所支持的正则表达式语法</title><link href="https://mozillazg.com/2015/03/go-regexp-supported-regular-expression-syntax.html" rel="alternate"></link><updated>2015-03-04T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-03-04:2015/03/go-regexp-supported-regular-expression-syntax.html</id><summary type="html">&lt;p&gt;本文内容整理自: &lt;a class="reference external" href="http://code.google.com/p/re2/wiki/Syntax"&gt;http://code.google.com/p/re2/wiki/Syntax&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="single-characters"&gt;
&lt;h2 id="hidsingle-characters"&gt;Single characters&lt;a class="headerlink" href="#hidsingle-characters" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="25%" /&gt;
&lt;col width="75%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;.&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;any character, possibly including newline (s=true)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;[xyz]&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;character class&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;[^xyz]&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;negated character class&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\d&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Perl character class&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\D&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;negated Perl character class&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:alpha:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;ASCII character class&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:^alpha:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;negated ASCII character class&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\pN&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Unicode character class (one-letter name)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\p{Greek}&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Unicode character class&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\PN&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;negated Unicode character class (one-letter name)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\P{Greek}&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;negated Unicode character class&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="composites"&gt;
&lt;h2 id="hidcomposites"&gt;Composites&lt;a class="headerlink" href="#hidcomposites" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="29%" /&gt;
&lt;col width="71%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;xy&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;x followed by y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x|y&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;x or y (prefer x)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="repetitions"&gt;
&lt;h2 id="hidrepetitions"&gt;Repetitions&lt;a class="headerlink" href="#hidrepetitions" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="29%" /&gt;
&lt;col width="71%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x*&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;zero or more x, prefer more&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x+&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;one or more x, prefer more&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x?&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;zero or one x, prefer one&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x{n,m}&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;n or n+1 or ... or m x, prefer more&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x{n,}&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;n or more x, prefer more&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x{n}&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;exactly n x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x*?&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;zero or more x, prefer fewer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x+?&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;one or more x, prefer fewer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;x??&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;zero or one x, prefer zero&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x{n,m}?&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;n or n+1 or ... or m x, prefer fewer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;x{n,}?&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;n or more x, prefer fewer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x{n}?&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;exactly n x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x{}&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(≡ &lt;tt class="docutils literal"&gt;x*&lt;/tt&gt; ) (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;x{-}&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(≡ &lt;tt class="docutils literal"&gt;x*?&lt;/tt&gt; ) (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;x{-n}&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(≡ &lt;tt class="docutils literal"&gt;x{n}?&lt;/tt&gt; ) (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x=&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(≡ &lt;tt class="docutils literal"&gt;x?&lt;/tt&gt; ) (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Implementation restriction: The counting forms &lt;tt class="docutils literal"&gt;x{n,m}&lt;/tt&gt; , &lt;tt class="docutils literal"&gt;x{n,}&lt;/tt&gt; , and &lt;tt class="docutils literal"&gt;x{n}&lt;/tt&gt;
reject forms that create a minimum or maximum repetition count above 1000.
Unlimited repetitions are not subject to this restriction.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="possessive-repetitions"&gt;
&lt;h2 id="hidpossessive-repetitions"&gt;Possessive repetitions&lt;a class="headerlink" href="#hidpossessive-repetitions" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="19%" /&gt;
&lt;col width="81%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x*+&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;zero or more x, possessive (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x++&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;one or more x, possessive (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;x?+&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;zero or one x, possessive (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x{n,m}+&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;n or ... or m x, possessive (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;x{n,}+&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;n or more x, possessive (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x{n}+&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;exactly n x, possessive (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="grouping"&gt;
&lt;h2 id="hidgrouping"&gt;Grouping&lt;a class="headerlink" href="#hidgrouping" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="24%" /&gt;
&lt;col width="76%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(re)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;numbered capturing group (submatch)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?P&amp;lt;name&amp;gt;re)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;named &amp;amp; numbered capturing group (submatch)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?&amp;lt;name&amp;gt;re)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;named &amp;amp; numbered capturing group (submatch) (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?'name're)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;named &amp;amp; numbered capturing group (submatch) (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?:re)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;non-capturing group&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?flags)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;set flags within current group; non-capturing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?flags:re)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;set flags during re; non-capturing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?#text)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;comment (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?|x|y|z)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;branch numbering reset (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?&amp;gt;re)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;possessive match of re (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;re&amp;#64;&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;possessive match of re (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;%(re)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;non-capturing group (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="flags"&gt;
&lt;h2 id="hidflags"&gt;Flags&lt;a class="headerlink" href="#hidflags" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="11%" /&gt;
&lt;col width="89%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;i&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;case-insensitive (default false)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;m&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;multi-line mode: &lt;tt class="docutils literal"&gt;^&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;$&lt;/tt&gt; match begin/end line in addition to begin/end text (default false)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;s&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;let &lt;tt class="docutils literal"&gt;.&lt;/tt&gt; match &lt;tt class="docutils literal"&gt;\n&lt;/tt&gt; (default false)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;U&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;ungreedy: swap meaning of &lt;tt class="docutils literal"&gt;x*&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;x*?&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;x+&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;x+?&lt;/tt&gt;, etc (default false)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Flag syntax is &lt;tt class="docutils literal"&gt;xyz&lt;/tt&gt; (set) or &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-xyz&lt;/span&gt;&lt;/tt&gt; (clear) or &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;xy-z&lt;/span&gt;&lt;/tt&gt; (set xy, clear z).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="empty-strings"&gt;
&lt;h2 id="hidempty-strings"&gt;Empty strings&lt;a class="headerlink" href="#hidempty-strings" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="12%" /&gt;
&lt;col width="88%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;^&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;at beginning of text or line (m=true)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;$&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;at end of text (like &lt;tt class="docutils literal"&gt;\z&lt;/tt&gt; not &lt;tt class="docutils literal"&gt;\Z&lt;/tt&gt;) or line (m=true)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\A&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;at beginning of text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\b&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;at ASCII word boundary (&lt;tt class="docutils literal"&gt;\w&lt;/tt&gt; on one side and &lt;tt class="docutils literal"&gt;\W&lt;/tt&gt; , &lt;tt class="docutils literal"&gt;\A&lt;/tt&gt; , or &lt;tt class="docutils literal"&gt;\z&lt;/tt&gt; on the other)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\B&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not at ASCII word boundary&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\G&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;at beginning of subtext being searched (NOT SUPPORTED) PCRE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\G&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;at end of last match (NOT SUPPORTED) PERL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\Z&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;at end of text, or before newline at end of text (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\z&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;at end of text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?=re)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;before text matching re (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?!re)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;before text not matching re (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?&amp;lt;=re)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;after text matching re (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?&amp;lt;!re)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;after text not matching re (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;re&amp;amp;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;before text matching re (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;re&amp;#64;=&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;before text matching re (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;re&amp;#64;!&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;before text not matching re (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;re&amp;#64;&amp;lt;=&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;after text matching re (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;re&amp;#64;&amp;lt;!&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;after text not matching re (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\zs&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;sets start of match (= &lt;tt class="docutils literal"&gt;\K&lt;/tt&gt; ) (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\ze&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;sets end of match (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\%^&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;beginning of file (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\%$&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;end of file (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\%V&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;on screen (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\%#&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;cursor position (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;\%'m&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;mark m position (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\%23l&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;in line 23 (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\%23c&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;in column 23 (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\%23v&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;in virtual column 23 (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="escape-sequences"&gt;
&lt;h2 id="hidescape-sequences"&gt;Escape sequences&lt;a class="headerlink" href="#hidescape-sequences" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="18%" /&gt;
&lt;col width="82%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\a&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;bell (≡ &lt;tt class="docutils literal"&gt;\007&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\f&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;form feed (≡ &lt;tt class="docutils literal"&gt;\014&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\t&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;horizontal tab (≡ &lt;tt class="docutils literal"&gt;\011&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\n&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;newline (≡ &lt;tt class="docutils literal"&gt;\012&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\r&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;carriage return (≡ &lt;tt class="docutils literal"&gt;\015&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\v&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;vertical tab character (≡ &lt;tt class="docutils literal"&gt;\013&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\*&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;literal &lt;tt class="docutils literal"&gt;*&lt;/tt&gt; , for any punctuation character &lt;tt class="docutils literal"&gt;*&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\123&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;octal character code (up to three digits)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\x7F&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;hex character code (exactly two digits)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\x{10FFFF}&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;hex character code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\C&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;match a single byte even in UTF-8 mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;\Q...\E&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;literal text ... even if ... has punctuation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\1&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;backreference (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\b&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;backspace (NOT SUPPORTED) (use &lt;tt class="docutils literal"&gt;\010&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\cK&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;control char &lt;tt class="docutils literal"&gt;^K&lt;/tt&gt; (NOT SUPPORTED) (use &lt;tt class="docutils literal"&gt;\001&lt;/tt&gt; etc)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\e&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;escape (NOT SUPPORTED) (use &lt;tt class="docutils literal"&gt;\033&lt;/tt&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\g1&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;backreference (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\g{1}&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;backreference (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;\g{+1}&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;backreference (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;\g{-1}&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;backreference (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\g{name}&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;named backreference (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\g&amp;lt;name&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;subroutine call (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\g'name'&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;subroutine call (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\k&amp;lt;name&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;named backreference (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\k'name'&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;named backreference (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\lX&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;lowercase X (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\ux&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;uppercase x (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;\L...\E&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;lowercase text ... (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\K&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;reset beginning of &lt;tt class="docutils literal"&gt;$0&lt;/tt&gt; (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\N{name}&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;named Unicode character (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\R&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;line break (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;\U...\E&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;upper case text ... (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\X&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;extended Unicode sequence (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\%d123&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;decimal character 123 (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\%xFF&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;hex character FF (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\%o123&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;octal character 123 (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\%u1234&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Unicode character &lt;tt class="docutils literal"&gt;0x1234&lt;/tt&gt; (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\%U12345678&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Unicode character &lt;tt class="docutils literal"&gt;0x12345678&lt;/tt&gt; (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="character-class-elements"&gt;
&lt;h2 id="hidcharacter-class-elements"&gt;Character class elements&lt;a class="headerlink" href="#hidcharacter-class-elements" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="25%" /&gt;
&lt;col width="75%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;x&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;single character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;A-Z&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;character range (inclusive)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\d&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Perl character class&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;[:foo:]&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;ASCII character class foo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\p{Foo}&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Unicode character class Foo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\pF&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Unicode character class F (one-letter name)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="named-character-classes-as-character-class-elements"&gt;
&lt;h2 id="hidnamed-character-classes-as-character-class-elements"&gt;Named character classes as character class elements&lt;a class="headerlink" href="#hidnamed-character-classes-as-character-class-elements" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="18%" /&gt;
&lt;col width="82%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;[\d]&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;digits (≡ &lt;tt class="docutils literal"&gt;\d&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[^\d]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not digits (≡ &lt;tt class="docutils literal"&gt;\D&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;[\D]&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not digits (≡ &lt;tt class="docutils literal"&gt;\D&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[^\D]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not not digits (≡ &lt;tt class="docutils literal"&gt;\d&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:name:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;named ASCII class inside character class (≡ &lt;tt class="docutils literal"&gt;[:name:]&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[^[:name:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;named ASCII class inside negated character class (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[:^name:]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;[\p{Name}]&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;named Unicode property inside character class (≡ &lt;tt class="docutils literal"&gt;\p{Name}&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[^\p{Name}]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;named Unicode property inside negated character class (≡ &lt;tt class="docutils literal"&gt;\P{Name}&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="perl-character-classes-all-ascii-only"&gt;
&lt;h2 id="hidperl-character-classes-all-ascii-only"&gt;Perl character classes (all ASCII-only)&lt;a class="headerlink" href="#hidperl-character-classes-all-ascii-only" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="15%" /&gt;
&lt;col width="85%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\d&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;digits (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[0-9]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\D&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not digits (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[^0-9]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\s&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;whitespace (≡ &lt;tt class="docutils literal"&gt;[\t\n\f\r ]&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\S&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not whitespace (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[^\t\n\f\r&lt;/span&gt; ]&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\w&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;word characters (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[0-9A-Za-z_]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\W&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not word characters (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[^0-9A-Za-z_]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\h&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;horizontal space (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\H&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not horizontal space (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\v&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;vertical space (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\V&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not vertical space (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="ascii-character-classes"&gt;
&lt;h2 id="hidascii-character-classes"&gt;ASCII character classes&lt;a class="headerlink" href="#hidascii-character-classes" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="19%" /&gt;
&lt;col width="81%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:alnum:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;alphanumeric (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[0-9A-Za-z]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:alpha:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;alphabetic (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[A-Za-z]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:ascii:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;ASCII (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[\x00-\x7F]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:blank:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;blank (≡ &lt;tt class="docutils literal"&gt;[\t ]&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:cntrl:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;control (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[\x00-\x1F\x7F]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:digit:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;digits (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[0-9]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:graph:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;graphical (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[!-~]&lt;/span&gt; == &lt;span class="pre"&gt;[A-Za-z0-9!&amp;quot;#$%&amp;amp;'()*+,\-./:;&amp;lt;=&amp;gt;?&amp;#64;[\\\]^_`{|}~]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:lower:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;lower case (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[a-z]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:print:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;printable (≡ &lt;tt class="docutils literal"&gt;[ &lt;span class="pre"&gt;-~]&lt;/span&gt;&lt;/tt&gt; == &lt;tt class="docutils literal"&gt;[ &lt;span class="pre"&gt;[:graph:]]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:punct:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;punctuation (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[!-/:-&amp;#64;[-`{-~]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:space:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;whitespace (≡ &lt;tt class="docutils literal"&gt;[\t\n\v\f\r ]&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:upper:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;upper case (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[A-Z]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:word:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;word characters (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[0-9A-Za-z_]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[[:xdigit:]]&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;hex digit (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[0-9A-Fa-f]&lt;/span&gt;&lt;/tt&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="unicode-character-class-names-general-category"&gt;
&lt;h2 id="hidunicode-character-class-names-general-category"&gt;Unicode character class names--general category&lt;a class="headerlink" href="#hidunicode-character-class-names-general-category" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="16%" /&gt;
&lt;col width="84%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;C&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;other&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Cc&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;control&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Cf&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Cn&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;unassigned code points (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Co&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;private use&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Cs&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;surrogate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;L&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;letter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;LC&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;cased letter (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;L&amp;amp;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;cased letter (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Ll&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;lowercase letter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Lm&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;modifier letter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Lo&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;other letter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Lt&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;titlecase letter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Lu&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;uppercase letter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;M&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;mark&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Mc&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;spacing mark&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Me&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;enclosing mark&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Mn&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;non-spacing mark&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;N&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Nd&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;decimal number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Nl&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;letter number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;No&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;other number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;P&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;punctuation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Pc&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;connector punctuation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Pd&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;dash punctuation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Pe&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;close punctuation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Pf&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;final punctuation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Pi&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;initial punctuation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Po&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;other punctuation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Ps&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;open punctuation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;S&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;symbol&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Sc&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;currency symbol&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Sk&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;modifier symbol&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Sm&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;math symbol&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;So&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;other symbol&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Z&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;separator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Zl&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;line separator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Zp&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;paragraph separator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Zs&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;space separator&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="unicode-character-class-names-scripts"&gt;
&lt;h2 id="hidunicode-character-class-names-scripts"&gt;Unicode character class names--scripts&lt;a class="headerlink" href="#hidunicode-character-class-names-scripts" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="41%" /&gt;
&lt;col width="59%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Arabic&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Arabic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Armenian&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Armenian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Balinese&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Balinese&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Bamum&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Bamum&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Batak&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Batak&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Bengali&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Bengali&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Bopomofo&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Bopomofo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Brahmi&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Brahmi&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Braille&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Braille&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Buginese&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Buginese&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Buhid&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Buhid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Canadian_Aboriginal&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Canadian Aboriginal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Carian&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Carian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Chakma&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Chakma&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Cham&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Cham&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Cherokee&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Cherokee&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Common&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;characters not specific to one script&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Coptic&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Coptic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Cuneiform&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Cuneiform&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Cypriot&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Cypriot&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Cyrillic&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Cyrillic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Deseret&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Deseret&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Devanagari&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Devanagari&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Egyptian_Hieroglyphs&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Egyptian Hieroglyphs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Ethiopic&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Ethiopic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Georgian&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Georgian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Glagolitic&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Glagolitic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Gothic&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Gothic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Greek&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Greek&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Gujarati&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Gujarati&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Gurmukhi&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Gurmukhi&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Han&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Han&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Hangul&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Hangul&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Hanunoo&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Hanunoo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Hebrew&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Hebrew&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Hiragana&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Hiragana&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Imperial_Aramaic&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Imperial Aramaic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Inherited&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;inherit script from previous character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Inscriptional_Pahlavi&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Inscriptional Pahlavi&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Inscriptional_Parthian&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Inscriptional Parthian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Javanese&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Javanese&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Kaithi&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Kaithi&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Kannada&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Kannada&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Katakana&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Katakana&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Kayah_Li&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Kayah Li&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Kharoshthi&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Kharoshthi&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Khmer&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Khmer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Lao&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Lao&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Latin&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Latin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Lepcha&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Lepcha&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Limbu&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Limbu&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Linear_B&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Linear B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Lycian&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Lycian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Lydian&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Lydian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Malayalam&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Malayalam&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Mandaic&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Mandaic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Meetei_Mayek&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Meetei Mayek&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Meroitic_Cursive&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Meroitic Cursive&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Meroitic_Hieroglyphs&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Meroitic Hieroglyphs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Miao&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Miao&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Mongolian&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Mongolian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Myanmar&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Myanmar&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;New_Tai_Lue&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;New Tai Lue (aka Simplified Tai Lue)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Nko&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Nko&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Ogham&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Ogham&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Ol_Chiki&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Ol Chiki&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Old_Italic&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Old Italic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Old_Persian&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Old Persian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Old_South_Arabian&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Old South Arabian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Old_Turkic&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Old Turkic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Oriya&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Oriya&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Osmanya&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Osmanya&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Phags_Pa&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Phags Pa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Phoenician&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Phoenician&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Rejang&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Rejang&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Runic&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Runic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Saurashtra&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Saurashtra&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Sharada&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Sharada&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Shavian&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Shavian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Sinhala&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Sinhala&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Sora_Sompeng&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Sora Sompeng&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Sundanese&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Sundanese&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Syloti_Nagri&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Syloti Nagri&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Syriac&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Syriac&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Tagalog&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Tagalog&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Tagbanwa&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Tagbanwa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Tai_Le&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Tai Le&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Tai_Tham&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Tai Tham&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Tai_Viet&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Tai Viet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Takri&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Takri&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Tamil&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Tamil&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Telugu&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Telugu&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Thaana&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Thaana&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Thai&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Thai&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Tibetan&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Tibetan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Tifinagh&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Tifinagh&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Ugaritic&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Ugaritic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Vai&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Vai&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;Yi&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Yi&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="vim-character-classes"&gt;
&lt;h2 id="hidvim-character-classes"&gt;Vim character classes&lt;a class="headerlink" href="#hidvim-character-classes" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="11%" /&gt;
&lt;col width="89%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\i&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;identifier character (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\I&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;\i&lt;/tt&gt; except digits (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\k&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;keyword character (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\K&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;\k&lt;/tt&gt; except digits (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\f&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;file name character (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\F&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;\f&lt;/tt&gt; except digits (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\p&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;printable character (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\P&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;\p&lt;/tt&gt; except digits (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\s&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;whitespace character ( &lt;tt class="docutils literal"&gt;≡ [ \t]&lt;/tt&gt; ) (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\S&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;non-white space character ( &lt;tt class="docutils literal"&gt;≡ [^ \t]&lt;/tt&gt; ) (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\d&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;digits ( &lt;tt class="docutils literal"&gt;≡ &lt;span class="pre"&gt;[0-9]&lt;/span&gt;&lt;/tt&gt; ) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\D&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not &lt;tt class="docutils literal"&gt;\d&lt;/tt&gt; VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\x&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;hex digits ( &lt;tt class="docutils literal"&gt;≡ &lt;span class="pre"&gt;[0-9A-Fa-f]&lt;/span&gt;&lt;/tt&gt; ) (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\X&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not &lt;tt class="docutils literal"&gt;\x&lt;/tt&gt; (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\o&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;octal digits ( &lt;tt class="docutils literal"&gt;≡ &lt;span class="pre"&gt;[0-7]&lt;/span&gt;&lt;/tt&gt; ) (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\O&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not &lt;tt class="docutils literal"&gt;\o&lt;/tt&gt; (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\w&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;word character VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\W&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not &lt;tt class="docutils literal"&gt;\w&lt;/tt&gt; VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\h&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;head of word character (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\H&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not &lt;tt class="docutils literal"&gt;\h&lt;/tt&gt; (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\a&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;alphabetic (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\A&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not &lt;tt class="docutils literal"&gt;\a&lt;/tt&gt; (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\l&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;lowercase (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\L&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not lowercase (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\u&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;uppercase (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\U&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;not uppercase (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\_x&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;\x&lt;/tt&gt; plus newline, for any &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="vim-flags"&gt;
&lt;h2 id="hidvim-flags"&gt;Vim flags&lt;a class="headerlink" href="#hidvim-flags" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="10%" /&gt;
&lt;col width="90%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\c&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;ignore case (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\C&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;match case (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\m&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;magic (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\M&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;nomagic (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\v&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;verymagic (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\V&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;verynomagic (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;\Z&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;ignore differences in Unicode combining characters (NOT SUPPORTED) VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="magic"&gt;
&lt;h2 id="hidmagic"&gt;Magic&lt;a class="headerlink" href="#hidmagic" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="29%" /&gt;
&lt;col width="71%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?{code})&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;arbitrary Perl code (NOT SUPPORTED) PERL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(??{code})&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;postponed arbitrary Perl code (NOT SUPPORTED) PERL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?n)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;recursive call to regexp capturing group n (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?+n)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;recursive call to relative group +n (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?-n)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;recursive call to relative group -n (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?C)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;PCRE callout (NOT SUPPORTED) PCRE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?R)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;recursive call to entire regexp (≡ &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?0)&lt;/span&gt;&lt;/tt&gt; ) (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?&amp;amp;name)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;recursive call to named group (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?P=name)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;named backreference (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?P&amp;gt;name)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;recursive call to named group (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?(cond)true|false)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;conditional branch (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(?(cond)true)&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;conditional branch (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(*ACCEPT)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;make regexps more like Prolog (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(*COMMIT)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(*F)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(*FAIL)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(*MARK)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(*PRUNE)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(*SKIP)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(*THEN)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(*ANY)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;set newline convention (NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(*ANYCRLF)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(*CR)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(*CRLF)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(*LF)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(NOT SUPPORTED)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(*BSR_ANYCRLF)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;set &lt;tt class="docutils literal"&gt;\R&lt;/tt&gt; convention (NOT SUPPORTED) PCRE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;(*BSR_UNICODE)&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;(NOT SUPPORTED) PCRE&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</summary></entry><entry><title>[go]使用 goxc 方便的进行交叉编译</title><link href="https://mozillazg.com/2015/02/go-use-goxc-to-cross-compile.html" rel="alternate"></link><updated>2015-02-28T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-02-28:2015/02/go-use-goxc-to-cross-compile.html</id><summary type="html">&lt;h2&gt;安装&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;go get github.com/laher/goxc&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;使用&lt;/h2&gt;
&lt;p&gt;所有命令皆在 main 包所在目录下执行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基本使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;goxc -d=build -pv=0.1.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令的意思是：将编译好的文件保存到 &lt;code&gt;./build&lt;/code&gt; 目录下，指定文件名包含的版本号为 &lt;code&gt;0.1.0&lt;/code&gt;     &lt;br /&gt;
最后生成的文件如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; (master) ccuser$ tree build/
build/
└── 0.1.0
    ├── ccuser_0.1.0_amd64.deb
    ├── ccuser_0.1.0_armhf.deb
    ├── ccuser_0.1.0_darwin_386.zip
    ├── ccuser_0.1.0_darwin_amd64.zip
    ├── ccuser_0.1.0_dragonfly_386.zip
    ├── ccuser_0.1.0_dragonfly_amd64.zip
    ├── ccuser_0.1.0_freebsd_386.zip
    ├── ccuser_0.1.0_freebsd_amd64.zip
    ├── ccuser_0.1.0_freebsd_arm.zip
    ├── ccuser_0.1.0_i386.deb
    ├── ccuser_0.1.0_linux_386.tar.gz
    ├── ccuser_0.1.0_linux_amd64.tar.gz
    ├── ccuser_0.1.0_linux_arm.tar.gz
    ├── ccuser_0.1.0_nacl_386.zip
    ├── ccuser_0.1.0_nacl_amd64p32.zip
    ├── ccuser_0.1.0_nacl_arm.zip
    ├── ccuser_0.1.0_netbsd_386.zip
    ├── ccuser_0.1.0_netbsd_amd64.zip
    ├── ccuser_0.1.0_netbsd_arm.zip
    ├── ccuser_0.1.0_openbsd_386.zip
    ├── ccuser_0.1.0_openbsd_amd64.zip
    ├── ccuser_0.1.0_plan9_386.zip
    ├── ccuser_0.1.0_solaris_amd64.zip
    ├── ccuser_0.1.0_windows_386.zip
    ├── ccuser_0.1.0_windows_amd64.zip
    ├── downloads.md
    ├── LICENSE
    └── README.md
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;指定操作系统平台&lt;/strong&gt;
默认全平台。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;goxc -d=build -pv=0.1.0 -bc='linux,windows,darwin'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;指定只生成适用于 &lt;code&gt;linxu, windows, 苹果系统&lt;/code&gt; 的文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;指定 CPU 架构&lt;/strong&gt;
默认所有 CPU 架构&lt;/p&gt;
&lt;p&gt;&lt;code&gt;goxc -d=build -pv=0.1.0 -arch='386 amd64'&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/laher/goxc"&gt;https://github.com/laher/goxc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>[go] 使用 gvm 管理 go 版本</title><link href="https://mozillazg.com/2014/12/go-use-gvm-to-manage-go-version.html" rel="alternate"></link><updated>2014-12-06T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-12-06:2014/12/go-use-gvm-to-manage-go-version.html</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/moovweb/gvm"&gt;gvm&lt;/a&gt; 是个 go 版本管理工具。
可以让多个版本的 go 编译器在同一台机器上共存，并可以方便的切换要使用的 go 版本。&lt;/p&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;p&gt;安装依赖：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install curl git mercurial make binutils bison gcc build-essential
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装 gvm:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bash &amp;lt; &amp;lt;&lt;span class="o"&gt;(&lt;/span&gt;curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果上面的脚本提示 &lt;code&gt;git clone&lt;/code&gt; 错误的话，可以通过下面的方式解决：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="s s-Atom"&gt;wget&lt;/span&gt; &lt;span class="nn"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="s s-Atom"&gt;raw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;githubusercontent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;moovweb&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;gvm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;master&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;binscripts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;gvm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;installer&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="s s-Atom"&gt;vim&lt;/span&gt; &lt;span class="s s-Atom"&gt;gvm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;installer&lt;/span&gt;   &lt;span class="s s-Atom"&gt;#&lt;/span&gt; &lt;span class="s s-Atom"&gt;修改&lt;/span&gt; &lt;span class="s s-Atom"&gt;gvm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;installer&lt;/span&gt; &lt;span class="s s-Atom"&gt;文件&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="s s-Atom"&gt;#&lt;/span&gt; &lt;span class="s s-Atom"&gt;将&lt;/span&gt; &lt;span class="nv"&gt;SRC_REPO&lt;/span&gt;&lt;span class="s s-Atom"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;SRC_REPO&lt;/span&gt;&lt;span class="p"&gt;:-&lt;/span&gt;&lt;span class="nn"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="s s-Atom"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;moovweb&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;gvm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;git&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="s s-Atom"&gt;#&lt;/span&gt; &lt;span class="s s-Atom"&gt;改为&lt;/span&gt; &lt;span class="nv"&gt;SRC_REPO&lt;/span&gt;&lt;span class="s s-Atom"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;SRC_REPO&lt;/span&gt;&lt;span class="p"&gt;:-&lt;/span&gt;&lt;span class="nn"&gt;git&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="s s-Atom"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;moovweb&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;gvm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;git&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="s s-Atom"&gt;bash&lt;/span&gt; &lt;span class="s s-Atom"&gt;gvm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;installer&lt;/span&gt;
&lt;span class="nv"&gt;Cloning&lt;/span&gt; &lt;span class="s s-Atom"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;git&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="s s-Atom"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;moovweb&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;gvm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;git&lt;/span&gt; &lt;span class="s s-Atom"&gt;to&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;xx/.gvm&lt;/span&gt;
&lt;span class="nv"&gt;Created&lt;/span&gt; &lt;span class="s s-Atom"&gt;profile&lt;/span&gt; &lt;span class="s s-Atom"&gt;for&lt;/span&gt; &lt;span class="s s-Atom"&gt;existing&lt;/span&gt; &lt;span class="s s-Atom"&gt;install&lt;/span&gt; &lt;span class="s s-Atom"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;Go&lt;/span&gt; &lt;span class="s s-Atom"&gt;at&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/usr/lib/go&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;Installed&lt;/span&gt; &lt;span class="nv"&gt;GVM&lt;/span&gt; &lt;span class="s s-Atom"&gt;v1&lt;/span&gt;&lt;span class="mf"&gt;.0.22&lt;/span&gt;

&lt;span class="nv"&gt;Please&lt;/span&gt; &lt;span class="s s-Atom"&gt;restart&lt;/span&gt; &lt;span class="s s-Atom"&gt;your&lt;/span&gt; &lt;span class="s s-Atom"&gt;terminal&lt;/span&gt; &lt;span class="s s-Atom"&gt;session&lt;/span&gt; &lt;span class="s s-Atom"&gt;or&lt;/span&gt; &lt;span class="s s-Atom"&gt;to&lt;/span&gt; &lt;span class="s s-Atom"&gt;get&lt;/span&gt; &lt;span class="s s-Atom"&gt;started&lt;/span&gt; &lt;span class="s s-Atom"&gt;right&lt;/span&gt; &lt;span class="s s-Atom"&gt;away&lt;/span&gt; &lt;span class="s s-Atom"&gt;run&lt;/span&gt;
 &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="s s-Atom"&gt;source&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;xx/.gvm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;gvm&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;激活 gvm 脚本:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;source&lt;/span&gt; /home/xx/.gvm/scripts/gvm
$ gvm version
Go Version Manager v1.0.22 installed at /home/xx/.gvm
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;使用&lt;/h2&gt;
&lt;p&gt;安装不同版本的 go，比如安装 1.3 版本:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gvm install go1.3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果提示如下错误，是因为当前网络无法访问 go 源码仓储地址:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gvm install go1.3
Downloading Go source...
ERROR: Couldn&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t download Go source. Check the logs /home/xx/.gvm/logs/go-download.log
$ tail ~/.gvm/logs/go-download.log
中止: 失败: Network is unreachable
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以使用我在 bitbucket 上创建的镜像库(通过 -s/--source 指定 go 源码 hg 仓库的地址）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gvm install go1.3 --source&lt;span class="o"&gt;=&lt;/span&gt;https://mozillazg@bitbucket.org/mozillazg/go
Downloading Go source...
Installing go1.3...
 * Compiling...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看系统中安装的 go 版本：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gvm list

gvm gos &lt;span class="o"&gt;(&lt;/span&gt;installed&lt;span class="o"&gt;)&lt;/span&gt;

   go1.3
   system
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;切换当前使用的 go 版本：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ go version
go version go1.2.1 linux/amd64
$
$ gvm use go1.3
Now using version go1.3
$ go version
go version go1.3 linux/amd64
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/moovweb/gvm"&gt;https://github.com/moovweb/gvm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/mozillazg/go"&gt;https://bitbucket.org/mozillazg/go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>[go]比较两个 slice/struct/map 是否相等</title><link href="https://mozillazg.com/2014/11/go-compare-struct-slice-map-is-equal.html" rel="alternate"></link><updated>2014-11-20T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-11-20:2014/11/go-compare-struct-slice-map-is-equal.html</id><summary type="html">&lt;p&gt;可以通过 &lt;tt class="docutils literal"&gt;reflect.DeepEqual&lt;/tt&gt; 比较两个 slice/struct/map 是否相等:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;reflect&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nx"&gt;a1&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;a2&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;reflect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DeepEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;==&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;b1&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;b2&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;reflect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DeepEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;==&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;c1&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="kd"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;c2&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="kd"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;reflect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DeepEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;==&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在线演示地址： &lt;a class="reference external" href="http://play.golang.org/p/SB8LeLNdA8"&gt;http://play.golang.org/p/SB8LeLNdA8&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2 id="hidid1"&gt;参考资料&lt;a class="headerlink" href="#hidid1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/24534072/golang-how-to-compare-struct-slice-map-is-equal"&gt;go - golang - how to compare struct, slice, map is equal? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>《An Introduction to Programming in Go》学习笔记——安装 Go</title><link href="https://mozillazg.com/2014/11/go-an-introduction-to-programming-in-go-notes-installation.html" rel="alternate"></link><updated>2014-11-03T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-11-03:2014/11/go-an-introduction-to-programming-in-go-notes-installation.html</id><summary type="html">&lt;p&gt;本文介绍在 Ubuntu 下用包管理器的安装过程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装 go: &lt;code&gt;sudo apt-get install golang&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;配置环境变量：&lt;ol&gt;
&lt;li&gt;&lt;code&gt;mkdir ~/go  ~/go/src ~/go/pkg ~/go/bin          # go 工作目录&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在 ~/.bashrc 中加入 &lt;code&gt;export GOPATH=/home/your-user-name/go&lt;/code&gt; （注意要把 your-user-name 替换为你本机的用户名，这里 &lt;strong&gt;不能使用 &lt;code&gt;~&lt;/code&gt; 代替 &lt;code&gt;/home/your-user-name&lt;/code&gt;&lt;/strong&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;验证：直接在终端下输入 &lt;code&gt;go&lt;/code&gt; 命令就可以了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其他安装方式以及在其他操作系统下的安装，请参考：&lt;a href="https://github.com/astaxie/build-web-application-with-golang/blob/master/ebook/01.0.md"&gt;https://github.com/astaxie/build-web-application-with-golang/blob/master/ebook/01.0.md&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>《An Introduction to Programming in Go》学习笔记——介绍</title><link href="https://mozillazg.com/2014/11/go-an-introduction-to-programming-in-go-notes-introduction.html" rel="alternate"></link><updated>2014-11-03T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-11-03:2014/11/go-an-introduction-to-programming-in-go-notes-introduction.html</id><summary type="html">&lt;p&gt;《An Introduction to Programming in Go》是一本 &lt;a href="http://golang.org/"&gt;Go&lt;/a&gt;  语言入门书籍，
在线阅读地址：&lt;a href="http://www.golang-book.com/"&gt;http://www.golang-book.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://golang.org/"&gt;Go&lt;/a&gt;  语言是一种开源的、静态类型的编译型编程语言。&lt;/p&gt;</summary></entry><entry><title>[go]等待 goroutine 结束</title><link href="https://mozillazg.com/2014/10/go-wait-all-goroutines-end.html" rel="alternate"></link><updated>2014-10-27T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-10-27:2014/10/go-wait-all-goroutines-end.html</id><summary type="html">&lt;p&gt;默认情况下，程序不会等待 goroutine 结束就退出了。
下面将讲解一种等待所有 goroutine 结束的方法：使用 &lt;tt class="docutils literal"&gt;sync.WaitGroup&lt;/tt&gt; 。&lt;/p&gt;
&lt;div class="section" id="sync-waitgroup"&gt;
&lt;h2 id="hidsync-waitgroup"&gt;使用 sync.WaitGroup&lt;a class="headerlink" href="#hidsync-waitgroup" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;sync&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;wg&lt;/span&gt; &lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WaitGroup&lt;/span&gt; &lt;span class="c1"&gt;// 定义 WaitGroup&lt;/span&gt;
    &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 增加一个 wait 任务&lt;/span&gt;
        &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Done&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// 函数结束时，通知此 wait 任务已经完成&lt;/span&gt;
            &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// 等待所有任务完成&lt;/span&gt;
    &lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Wait&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在线演示地址：&lt;a class="reference external" href="http://play.golang.org/p/fECMMK8Rja"&gt;http://play.golang.org/p/fECMMK8Rja&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="chan"&gt;
&lt;h2 id="hidchan"&gt;使用 chan&lt;a class="headerlink" href="#hidchan" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;评论区 remones 大佬提到了另一种方法，那就是使用 &lt;tt class="docutils literal"&gt;chan&lt;/tt&gt; 来实现。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;ch&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;chan&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;ch&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt;&lt;span class="p"&gt;{}{}&lt;/span&gt;
        &lt;span class="p"&gt;}(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="nx"&gt;ch&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者 remones 大佬的版本：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;time&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;workFn&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="kd"&gt;chan&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;doneC&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;chan&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;
        &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Millisecond&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;routine %d was finished.\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;doneC&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt;&lt;span class="p"&gt;{}{}&lt;/span&gt;
        &lt;span class="p"&gt;}(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;doneC&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;chs&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="kd"&gt;chan&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;ch&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;workFn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;chs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ch&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;chs&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="nx"&gt;ch&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2 id="hidid1"&gt;参考资料&lt;a class="headerlink" href="#hidid1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/18207772/how-to-wait-for-all-goroutines-to-finish-without-using-time-sleep"&gt;http://stackoverflow.com/questions/18207772/how-to-wait-for-all-goroutines-to-finish-without-using-time-sleep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://nathanleclaire.com/blog/2014/02/15/how-to-wait-for-all-goroutines-to-finish-executing-before-continuing/"&gt;http://nathanleclaire.com/blog/2014/02/15/how-to-wait-for-all-goroutines-to-finish-executing-before-continuing/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://blog.golang.org/share-memory-by-communicating"&gt;Share Memory By Communicating - The Go Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://dave.cheney.net/2014/03/25/the-empty-struct"&gt;The empty struct | Dave Cheney&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="goroutine"></category></entry></feed>