<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Huang Huang 的博客</title><link href="https://mozillazg.com/" rel="alternate"></link><link href="https://mozillazg.com/feeds/git.atom.xml" rel="self"></link><id>https://mozillazg.com/</id><updated>2016-01-31T00:00:00+00:00</updated><entry><title>解决 git push 时出现 error: pack-objects died of signal 13 的问题</title><link href="https://mozillazg.com/2016/01/fix-git-push-raise-error-pack-objects-died-of-signal-13.html" rel="alternate"></link><updated>2016-01-31T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2016-01-31:2016/01/fix-git-push-raise-error-pack-objects-died-of-signal-13.html</id><summary type="html">&lt;p&gt;今天执行 &lt;code&gt;git push&lt;/code&gt; 的时候报了如下的错误：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git push
Warning: Permanently added &lt;span class="s1"&gt;&amp;#39;ssh.github.com,192.30.252.149&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;RSA&lt;span class="o"&gt;)&lt;/span&gt; to the list of known hosts.
对象计数中: 27, 完成.
Delta compression using up to &lt;span class="m"&gt;4&lt;/span&gt; threads.
压缩对象中: 100% &lt;span class="o"&gt;(&lt;/span&gt;26/26&lt;span class="o"&gt;)&lt;/span&gt;, 完成.
Write failed: Broken pipe 3.20 MiB &lt;span class="p"&gt;|&lt;/span&gt; 93.00 KiB/s
写入对象中:  81% &lt;span class="o"&gt;(&lt;/span&gt;22/27&lt;span class="o"&gt;)&lt;/span&gt;fatal: , 3.83 MiB &lt;span class="p"&gt;|&lt;/span&gt; 52.00 KiB/sThe remote end hung up unexpectedly
error: pack-objects died of signal 13
error: 无法推送一些引用到 &lt;span class="s1"&gt;&amp;#39;git@github.com:mozillazg/mozillazg.com.git&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后的解决办法是加大 &lt;code&gt;http.postBuffer&lt;/code&gt; 的值:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git config http.postBuffer 52428800
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;http.postBuffer&lt;/code&gt; 的值的单位是字节， 52428800 = 1024 * 1024 * 50 即 50 M。&lt;/p&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/a/25846617/1804866"&gt;git - Can&amp;#39;t push to GitHub error: pack-objects died of signal 13 - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/site/master/issues/7567/git-push-remote-end-hung-up"&gt;site / master / issues / #7567 - git push remote end hung up &amp;mdash; Bitbucket&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>git clone 时使用了 --depth 后，如何再重新拉取全部的历史</title><link href="https://mozillazg.com/2016/01/git-revert-depth-1.html" rel="alternate"></link><updated>2016-01-10T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2016-01-10:2016/01/git-revert-depth-1.html</id><summary type="html">&lt;p&gt;有时我们为了加快 clone 的速度会使用 &lt;code&gt;--depth&lt;/code&gt; 参数，比如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://xxx/xxx.git --depth 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果我们之后要把之前的历史重新再 &lt;code&gt;pull&lt;/code&gt; 下来呢？
比如要把本地的仓库 &lt;code&gt;push&lt;/code&gt; 到一个新的空仓库（
会出现 &lt;code&gt;error: failed to push some refs&lt;/code&gt; 错误
）。&lt;/p&gt;
&lt;p&gt;可以使用 &lt;code&gt;--unshallow&lt;/code&gt; 参数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git pull --unshallow
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>git 查看某个 commit 的改动</title><link href="https://mozillazg.com/2015/11/git-view-one-commit-diff.html" rel="alternate"></link><updated>2015-11-03T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-11-03:2015/11/git-view-one-commit-diff.html</id><summary type="html">&lt;p&gt;命令如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git show COMMIT
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git diff COMMIT^!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;比如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git show d34ff657f5
git diff d34ff657f5^!
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/7663451/view-a-specific-git-commit"&gt;http://stackoverflow.com/questions/7663451/view-a-specific-git-commit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/17563726/git-diff-for-one-commit"&gt;http://stackoverflow.com/questions/17563726/git-diff-for-one-commit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>改用 443 端口连接 Github 修复 git push 时出现 Connection timed out 的问题</title><link href="https://mozillazg.com/2015/08/use-443-port-fix-github-connection-timeout.html" rel="alternate"></link><updated>2015-08-25T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-08-25:2015/08/use-443-port-fix-github-connection-timeout.html</id><summary type="html">&lt;p&gt;最近几天我这里出现了 &lt;code&gt;git push&lt;/code&gt; 出现 timeout 的问题：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git push
ssh: connect to host github.com port 22: Connection timed out
fatal: Could not &lt;span class="nb"&gt;read&lt;/span&gt; from remote repository.

Please make sure you have the correct access rights
and the repository exists.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;不想改用 https 协议，因为 https 每次都要询问用户名，密码太烦了。最后找到了一个使用 443 端口连接 github 的方法：&lt;/p&gt;
&lt;p&gt;修改 ~/.ssh/config 中 github.com 的配置，
&lt;code&gt;Hostname&lt;/code&gt; 改为 &lt;code&gt;ssh.github.com&lt;/code&gt;, &lt;code&gt;Port&lt;/code&gt; 改为
&lt;code&gt;443&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Host github.com
  Hostname ssh.github.com
  Port 443
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;测试：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh -T git@github.com
Warning: Permanently added &lt;span class="s1"&gt;&amp;#39;[ssh.github.com]:443,[192.30.252.148]:443&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;RSA&lt;span class="o"&gt;)&lt;/span&gt; to the list of known hosts.
Hi mozillazg! You&lt;span class="s1"&gt;&amp;#39;ve successfully authenticated, but GitHub does not provide shell access.&lt;/span&gt;

&lt;span class="s1"&gt;$ git push&lt;/span&gt;
&lt;span class="s1"&gt;Warning: Permanently added &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;ssh.github.com&lt;span class="o"&gt;]&lt;/span&gt;:443,&lt;span class="o"&gt;[&lt;/span&gt;192.30.252.151&lt;span class="o"&gt;]&lt;/span&gt;:443&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;RSA&lt;span class="o"&gt;)&lt;/span&gt; to the list of known hosts.
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/using-ssh-over-the-https-port/"&gt;Using SSH over the HTTPS port - User Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="github"></category></entry><entry><title>使用 git-remote-hg 镜像一个 Hg 仓库</title><link href="https://mozillazg.com/2015/08/git-how-to-mirror-an-Mercurial-hg-repo-with-git-remote-hg.html" rel="alternate"></link><updated>2015-08-16T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-08-16:2015/08/git-how-to-mirror-an-Mercurial-hg-repo-with-git-remote-hg.html</id><summary type="html">&lt;p&gt;前段时间在 github 上建了一个 PyPy 的 &lt;a href="https://github.com/mozillazg/pypy"&gt;镜像仓库&lt;/a&gt; （官方 PyPy 仓库是个存放在  bitbucket 上的 Mercurial(Hg) 仓库）。本文将记录我使用 git-remote-hg 镜像 Hg 仓库的步骤以及后续的同步更新操作。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装 git 2.x （如果系统上的 git 是 2.x 版本可以跳过本步骤）。由于我用的是 CentOS 6 系统，通过 yum 安装的 git 版本是 1.x ，所以需要编译安装 2.x 版本的 git。详细步骤在这里: &lt;a href="http://mozillazg.com/2015/08/install-git-2-on-centos-6.html"&gt;在 CentOS 6 上编译安装 git 2.x&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装 Python 包：mercurial&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /tmp
wget https://bootstrap.pypa.io/get-pip.py
python get-pip.py
pip install mercurial
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装 &lt;a href="https://github.com/fingolfin/git-remote-hg"&gt;git-remote-hg&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir /usr/local/bin
curl -o /usr/local/bin/git-remote-hg https://raw.githubusercontent.com/fingolfin/git-remote-hg/master/git-remote-hg
chmod +x /usr/local/bin/git-remote-hg
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 &lt;code&gt;PATH&lt;/code&gt; 环境变量:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;echo &amp;#39;export PATH=/usr/local/bin:&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;&amp;#39; &amp;gt;&amp;gt; ~/.bashrc&lt;/span&gt;
&lt;span class="x"&gt;source ~/.bashrc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 git:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config --global core.notesRef refs/notes/hg
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;clone Hg 仓库，假设仓库存放在 /www&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /www
git clone &amp;quot;hg::https://mozillazg@bitbucket.org/pypy/pypy&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 github 仓库地址&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /www/pypy/
git remote add mine git@github.com:mozillazg/pypy.git
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同步分支信息&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载 &lt;a href="https://github.com/mozillazg/snippets/blob/master/git/track_all_remote_branches.py"&gt;fetch_remote_branch_name_to_local.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;执行脚本&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /www/pypy/
python fetch_remote_branch_name_to_local.py
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;push 到 github 仓库&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git push mine --all
git push mine --tags
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定时同步代码&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载同步分支信息的脚本： &lt;a href="https://github.com/mozillazg/snippets/blob/master/git/track_all_remote_branches.py"&gt;fetch_remote_branch_name_to_local.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将下面的代码同步脚本保存为 update.sh:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;step 0&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; /www/pypy/

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;step 1&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; remote in &lt;span class="sb"&gt;`&lt;/span&gt;git branch&lt;span class="p"&gt;|&lt;/span&gt;grep -v &lt;span class="s1"&gt;&amp;#39;\* master&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; git branch -d &lt;span class="nv"&gt;$remote&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="k"&gt;done&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;step 2&amp;quot;&lt;/span&gt;
git fetch origin

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;step 3&amp;quot;&lt;/span&gt;
python track_all_remote_branches.py

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;step 4&amp;quot;&lt;/span&gt;
git pull

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;step 5&amp;quot;&lt;/span&gt;
git push mine --all -f

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;step 6&amp;quot;&lt;/span&gt;
git push mine --tags -f
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 crontab 定时任务，每天 3 点同步一次代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ crontab -e

&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; * * * &lt;span class="nb"&gt;cd&lt;/span&gt; /www/pypy &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; /usr/bin/env bash /www/pypy/update.sh &amp;gt; /var/log/mirror_pypy.log 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;想抢先查看实际效果？欢迎围观我创建的 &lt;a href="https://github.com/mozillazg/pypy"&gt;PyPy 镜像仓库&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fingolfin/git-remote-hg"&gt;https://github.com/fingolfin/git-remote-hg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/pypy/pypy"&gt;https://bitbucket.org/pypy/pypy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pip.pypa.io/en/latest/installing.html"&gt;https://pip.pypa.io/en/latest/installing.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mozillazg/pypy"&gt;https://github.com/mozillazg/pypy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>如何撤销第一次提交的 git commit</title><link href="https://mozillazg.com/2015/08/ru-he-che-xiao-di-yi-ci-ti-jiao-de-git-commit.html" rel="alternate"></link><updated>2015-08-16T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-08-16:2015/08/ru-he-che-xiao-di-yi-ci-ti-jiao-de-git-commit.html</id><summary type="html">&lt;p&gt;可以通过如下命令撤销创建仓库后第一次提交的 commit&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git update-ref -d HEAD
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;http://stackoverflow.com/questions/6632191/how-to-revert-initial-git-commit&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>在 CentOS 6 上编译安装 git 2.x</title><link href="https://mozillazg.com/2015/08/install-git-2-on-centos-6.html" rel="alternate"></link><updated>2015-08-15T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-08-15:2015/08/install-git-2-on-centos-6.html</id><summary type="html">&lt;p&gt;CentOS 6 上通过 yum 安装的是 git 1.x 版本，
本文将讲述如何在 CentOS 6 上编译安装 git 2.x 。下面是详细步骤:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装编译所需的环境依赖&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum -y install wget curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-ExtUtils-MakeMaker gcc asciidoc xmlto docbook2x

# 解决编译时出现的 /bin/sh: line 1: docbook2x-texi: command not found
ln -s /usr/bin/db2x_docbook2texi /usr/bin/docbook2x-texi
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载 &lt;a href="https://www.kernel.org/pub/software/scm/git/"&gt;git 2.x 源码包&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /tmp
wget https://www.kernel.org/pub/software/scm/git/git-2.5.0.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解压，编译，安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /tmp
tar zxvf git-2.5.0.tar.gz 
cd git-2.5.0/
make configure
./configure --prefix=/usr/local
make all doc info
make install install-doc install-html install-info
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 &lt;code&gt;PATH&lt;/code&gt; 环境变量&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;echo &amp;#39;export PATH=/usr/local/bin:&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;&amp;#39; &amp;gt;&amp;gt; ~/.bashrc&lt;/span&gt;
&lt;span class="x"&gt;source ~/.bashrc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git --version
git version 2.5.0
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git"&gt;Git - Installing Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>[git]如何删除在远程已被删除的本地分支（清理本地分支）</title><link href="https://mozillazg.com/2014/02/git-delete-all-local-branches-which-are-remotely-deleted.html" rel="alternate"></link><updated>2014-02-12T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-02-12:2014/02/git-delete-all-local-branches-which-are-remotely-deleted.html</id><summary type="html">&lt;p&gt;通过 &lt;tt class="docutils literal"&gt;git fetch &lt;span class="pre"&gt;-p&lt;/span&gt;&lt;/tt&gt; 命令可以实现清理本地分支的功能:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git fetch -p
 x [deleted]         (none)     -&amp;gt; origin/feature-xxx
 x [deleted]         (none)     -&amp;gt; origin/feature-xxxx
 x [deleted]         (none)     -&amp;gt; origin/feature-xxxxx
 x [deleted]         (none)     -&amp;gt; origin/hotfix-xx

# 然后再执行
$ git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 &amp;lt;(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d
 已删除分支 feature-xxx（曾为 328b639）。
 已删除分支 feature-xxxx（曾为 5e77d10）。
 已删除分支 hotfix-xx（曾为 5c13813）。
&lt;/pre&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2 id="hidid1"&gt;参考资料&lt;a class="headerlink" href="#hidid1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/1072171/how-do-you-remove-an-invalid-remote-branch-reference-from-git"&gt;How do you remove an invalid remote branch reference from Git? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/13064613/git-how-to-prune-local-tracking-branches-that-do-not-exist-on-remote-anymore"&gt;Git: How to prune local tracking branches that do not exist on remote anymore - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="git"></category></entry><entry><title>[git]按日期列出所有分支信息</title><link href="https://mozillazg.com/2013/08/git-show-branches-by-date.html" rel="alternate"></link><updated>2013-08-17T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-08-17:2013/08/git-show-branches-by-date.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;for k in `git branch|perl -pe s/^..//`;do echo -e &amp;quot;\e[31m&amp;quot;$k&amp;quot;\e[0m&amp;quot; `git log -1 --pretty=format:&amp;#39;- %s %Cgreen(%ci %cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset&amp;#39; &amp;quot;$k&amp;quot;|head -n 2`\\t;done | sort&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="git-show-branches-by-date" src="/static/images/2013-8-17_19-04-55.png" title="title" /&gt;&lt;/p&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.commandlinefu.com/commands/view/2345/show-git-branches-by-date-useful-for-showing-active-branches"&gt;Show git branches by date - useful for showing active branches | commandlinefu.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="git"></category></entry><entry><title>[git]显示单个文件变更日志</title><link href="https://mozillazg.com/2013/08/git-show-file-changelog.html" rel="alternate"></link><updated>2013-08-17T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-08-17:2013/08/git-show-file-changelog.html</id><summary type="html">&lt;p&gt;&lt;code&gt;git log -p filename&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git log -p fabfile.py
&lt;span class="go"&gt;commit fd792030bc0ac1db0f1f97ec701a2fd8bcb26a07&lt;/span&gt;
&lt;span class="go"&gt;Author: username &amp;lt;email&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Date:   Sun Jun 23 15:36:58 2013 +0800&lt;/span&gt;

&lt;span class="go"&gt;    commit title&lt;/span&gt;

&lt;span class="go"&gt;diff --git a/fabfile.py b/fabfile.py&lt;/span&gt;
&lt;span class="go"&gt;index 4ed36fa..1408118 100644&lt;/span&gt;
&lt;span class="go"&gt;--- a/fabfile.py&lt;/span&gt;
&lt;span class="go"&gt;+++ b/fabfile.py&lt;/span&gt;
&lt;span class="go"&gt;@@ -9,28 +9,29 @@ from fabric.api import settings&lt;/span&gt;

&lt;span class="go"&gt; @task&lt;/span&gt;
&lt;span class="go"&gt; def make_html():&lt;/span&gt;
&lt;span class="go"&gt;-    &amp;quot;&amp;quot;&amp;quot;生成 html 文件&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;-    local(&amp;#39;pelican content -o output -s pelicanconf.py&amp;#39;)&lt;/span&gt;
&lt;span class="go"&gt;+    &amp;quot;&amp;quot;&amp;quot;generate the web site&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;+    with settings(warn_only=True):&lt;/span&gt;
&lt;span class="go"&gt;+        local(&amp;#39;pelican content -o output -s pelicanconf.py -D&amp;#39;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;git log filename&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git log fabfile.py
&lt;span class="go"&gt;commit fd792030bc0ac1db0f1f97ec701a2fd8bcb26a07&lt;/span&gt;
&lt;span class="go"&gt;Author: username &amp;lt;email&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Date:   Sun Jun 23 15:36:58 2013 +0800&lt;/span&gt;

&lt;span class="go"&gt;    commit title&lt;/span&gt;


&lt;span class="gp"&gt;$&lt;/span&gt; git log --graph --pretty&lt;span class="o"&gt;=&lt;/span&gt;format:&lt;span class="s1"&gt;&amp;#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset&amp;#39;&lt;/span&gt; --abbrev-commit fabfile.py
&lt;span class="go"&gt;* fd79203 - commit title (8 weeks ago) &amp;lt;username&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;* 7642a05 - commit title (10 weeks ago) &amp;lt;username&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;* d04ba24 - commit title (10 weeks ago) &amp;lt;username&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/278192/view-the-change-history-of-a-file-using-git-versioning"&gt;git log - View the change history of a file using Git versioning - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="git"></category></entry></feed>