<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>mozillazg's Blog</title><link href="https://mozillazg.com/" rel="alternate"></link><link href="https://mozillazg.com/feeds/git.atom.xml" rel="self"></link><id>https://mozillazg.com/</id><updated>2016-01-31T00:00:00+00:00</updated><entry><title>解决 git push 时出现 error: pack-objects died of signal 13 的问题</title><link href="https://mozillazg.com/2016/01/fix-git-push-raise-error-pack-objects-died-of-signal-13.html" rel="alternate"></link><published>2016-01-31T00:00:00+00:00</published><updated>2016-01-31T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2016-01-31:2016/01/fix-git-push-raise-error-pack-objects-died-of-signal-13.html</id><summary type="html">&lt;p&gt;今天执行 &lt;code&gt;git push&lt;/code&gt; 的时候报了如下的错误：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;push
Warning:&lt;span class="w"&gt; &lt;/span&gt;Permanently&lt;span class="w"&gt; &lt;/span&gt;added&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ssh.github.com,192.30.252.149&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;RSA&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;list&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;hosts.
对象计数中:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;27&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;完成.
Delta&lt;span class="w"&gt; &lt;/span&gt;compression&lt;span class="w"&gt; &lt;/span&gt;using&lt;span class="w"&gt; &lt;/span&gt;up&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;threads.
压缩对象中:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;26&lt;/span&gt;/26&lt;span class="o"&gt;)&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;完成.
Write&lt;span class="w"&gt; &lt;/span&gt;failed:&lt;span class="w"&gt; &lt;/span&gt;Broken&lt;span class="w"&gt; &lt;/span&gt;pipe&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.20&lt;span class="w"&gt; &lt;/span&gt;MiB&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;93&lt;/span&gt;.00&lt;span class="w"&gt; &lt;/span&gt;KiB/s
写入对象中:&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;81&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;22&lt;/span&gt;/27&lt;span class="o"&gt;)&lt;/span&gt;fatal:&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.83&lt;span class="w"&gt; &lt;/span&gt;MiB&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;52&lt;/span&gt;.00&lt;span class="w"&gt; &lt;/span&gt;KiB/sThe&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;end&lt;span class="w"&gt; &lt;/span&gt;hung&lt;span class="w"&gt; &lt;/span&gt;up&lt;span class="w"&gt; &lt;/span&gt;unexpectedly
error:&lt;span class="w"&gt; &lt;/span&gt;pack-objects&lt;span class="w"&gt; &lt;/span&gt;died&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;signal&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;
error:&lt;span class="w"&gt; &lt;/span&gt;无法推送一些引用到&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;git@github.com:mozillazg/mozillazg.com.git&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后的解决办法是加大 &lt;code&gt;http.postBuffer&lt;/code&gt; 的值:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;http.postBuffer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;52428800&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;http.postBuffer&lt;/code&gt; 的值的单位是字节， 52428800 = 1024 * 1024 * 50 即 50 M。&lt;/p&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/a/25846617/1804866"&gt;git - Can&amp;#39;t push to GitHub error: pack-objects died of signal 13 - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/site/master/issues/7567/git-push-remote-end-hung-up"&gt;site / master / issues / #7567 - git push remote end hung up &amp;mdash; Bitbucket&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>git clone 时使用了 --depth 后，如何再重新拉取全部的历史</title><link href="https://mozillazg.com/2016/01/git-revert-depth-1.html" rel="alternate"></link><published>2016-01-10T00:00:00+00:00</published><updated>2016-01-10T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2016-01-10:2016/01/git-revert-depth-1.html</id><summary type="html">&lt;p&gt;有时我们为了加快 clone 的速度会使用 &lt;code&gt;--depth&lt;/code&gt; 参数，比如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://xxx/xxx.git --depth 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果我们之后要把之前的历史重新再 &lt;code&gt;pull&lt;/code&gt; 下来呢？
比如要把本地的仓库 &lt;code&gt;push&lt;/code&gt; 到一个新的空仓库（
会出现 &lt;code&gt;error: failed to push some refs&lt;/code&gt; 错误
）。&lt;/p&gt;
&lt;p&gt;可以使用 &lt;code&gt;--unshallow&lt;/code&gt; 参数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git pull --unshallow
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>git 查看某个 commit 的改动</title><link href="https://mozillazg.com/2015/11/git-view-one-commit-diff.html" rel="alternate"></link><published>2015-11-03T00:00:00+00:00</published><updated>2015-11-03T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-11-03:2015/11/git-view-one-commit-diff.html</id><summary type="html">&lt;p&gt;命令如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;COMMIT&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git diff COMMIT^!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;比如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;d34ff657f5&lt;/span&gt;
&lt;span class="nv"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;diff&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;d34ff657f5&lt;/span&gt;&lt;span class="o"&gt;^!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/7663451/view-a-specific-git-commit"&gt;http://stackoverflow.com/questions/7663451/view-a-specific-git-commit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/17563726/git-diff-for-one-commit"&gt;http://stackoverflow.com/questions/17563726/git-diff-for-one-commit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>改用 443 端口连接 Github 修复 git push 时出现 Connection timed out 的问题</title><link href="https://mozillazg.com/2015/08/use-443-port-fix-github-connection-timeout.html" rel="alternate"></link><published>2015-08-25T00:00:00+00:00</published><updated>2015-08-25T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-08-25:2015/08/use-443-port-fix-github-connection-timeout.html</id><summary type="html">&lt;p&gt;最近几天我这里出现了 &lt;code&gt;git push&lt;/code&gt; 出现 timeout 的问题：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;push
ssh:&lt;span class="w"&gt; &lt;/span&gt;connect&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;host&lt;span class="w"&gt; &lt;/span&gt;github.com&lt;span class="w"&gt; &lt;/span&gt;port&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;22&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Connection&lt;span class="w"&gt; &lt;/span&gt;timed&lt;span class="w"&gt; &lt;/span&gt;out
fatal:&lt;span class="w"&gt; &lt;/span&gt;Could&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;read&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;repository.

Please&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;sure&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;have&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;correct&lt;span class="w"&gt; &lt;/span&gt;access&lt;span class="w"&gt; &lt;/span&gt;rights
and&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;repository&lt;span class="w"&gt; &lt;/span&gt;exists.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;不想改用 https 协议，因为 https 每次都要询问用户名，密码太烦了。最后找到了一个使用 443 端口连接 github 的方法：&lt;/p&gt;
&lt;p&gt;修改 ~/.ssh/config 中 github.com 的配置，
&lt;code&gt;Hostname&lt;/code&gt; 改为 &lt;code&gt;ssh.github.com&lt;/code&gt;, &lt;code&gt;Port&lt;/code&gt; 改为
&lt;code&gt;443&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Host github.com
  Hostname ssh.github.com
  Port 443
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;测试：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-T&lt;span class="w"&gt; &lt;/span&gt;git@github.com
Warning:&lt;span class="w"&gt; &lt;/span&gt;Permanently&lt;span class="w"&gt; &lt;/span&gt;added&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[ssh.github.com]:443,[192.30.252.148]:443&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;RSA&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;list&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;hosts.
Hi&lt;span class="w"&gt; &lt;/span&gt;mozillazg!&lt;span class="w"&gt; &lt;/span&gt;You&lt;span class="s1"&gt;&amp;#39;ve successfully authenticated, but GitHub does not provide shell access.&lt;/span&gt;

&lt;span class="s1"&gt;$ git push&lt;/span&gt;
&lt;span class="s1"&gt;Warning: Permanently added &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;ssh.github.com&lt;span class="o"&gt;]&lt;/span&gt;:443,&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;192&lt;/span&gt;.30.252.151&lt;span class="o"&gt;]&lt;/span&gt;:443&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;RSA&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;list&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;hosts.
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/using-ssh-over-the-https-port/"&gt;Using SSH over the HTTPS port - User Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="github"></category></entry><entry><title>使用 git-remote-hg 镜像一个 Hg 仓库</title><link href="https://mozillazg.com/2015/08/git-how-to-mirror-an-Mercurial-hg-repo-with-git-remote-hg.html" rel="alternate"></link><published>2015-08-16T00:00:00+00:00</published><updated>2015-08-16T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-08-16:2015/08/git-how-to-mirror-an-Mercurial-hg-repo-with-git-remote-hg.html</id><summary type="html">&lt;p&gt;前段时间在 github 上建了一个 PyPy 的 &lt;a href="https://github.com/mozillazg/pypy"&gt;镜像仓库&lt;/a&gt; （官方 PyPy 仓库是个存放在  bitbucket 上的 Mercurial(Hg) 仓库）。本文将记录我使用 git-remote-hg 镜像 Hg 仓库的步骤以及后续的同步更新操作。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装 git 2.x （如果系统上的 git 是 2.x 版本可以跳过本步骤）。由于我用的是 CentOS 6 系统，通过 yum 安装的 git 版本是 1.x ，所以需要编译安装 2.x 版本的 git。详细步骤在这里: &lt;a href="http://mozillazg.com/2015/08/install-git-2-on-centos-6.html"&gt;在 CentOS 6 上编译安装 git 2.x&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装 Python 包：mercurial&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /tmp
wget https://bootstrap.pypa.io/get-pip.py
python get-pip.py
pip install mercurial
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装 &lt;a href="https://github.com/fingolfin/git-remote-hg"&gt;git-remote-hg&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir /usr/local/bin
curl -o /usr/local/bin/git-remote-hg https://raw.githubusercontent.com/fingolfin/git-remote-hg/master/git-remote-hg
chmod +x /usr/local/bin/git-remote-hg
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 &lt;code&gt;PATH&lt;/code&gt; 环境变量:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;export PATH=/usr/local/bin:$PATH&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;bashrc&lt;/span&gt;
&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;bashrc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 git:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config --global core.notesRef refs/notes/hg
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;clone Hg 仓库，假设仓库存放在 /www&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;clone&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;hg::https://mozillazg@bitbucket.org/pypy/pypy&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 github 仓库地址&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pypy&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mine&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="nv"&gt;@github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;com&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;mozillazg&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pypy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同步分支信息&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载 &lt;a href="https://github.com/mozillazg/snippets/blob/master/git/track_all_remote_branches.py"&gt;fetch_remote_branch_name_to_local.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;执行脚本&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /www/pypy/
python fetch_remote_branch_name_to_local.py
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;push 到 github 仓库&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git push mine --all
git push mine --tags
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定时同步代码&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载同步分支信息的脚本： &lt;a href="https://github.com/mozillazg/snippets/blob/master/git/track_all_remote_branches.py"&gt;fetch_remote_branch_name_to_local.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将下面的代码同步脚本保存为 update.sh:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;~/.bashrc

&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;step 0&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/www/pypy/

&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;step 1&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;branch&lt;span class="p"&gt;|&lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;-v&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\* master&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;branch&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$remote&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;step 2&amp;quot;&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;fetch&lt;span class="w"&gt; &lt;/span&gt;origin

&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;step 3&amp;quot;&lt;/span&gt;
python&lt;span class="w"&gt; &lt;/span&gt;track_all_remote_branches.py

&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;step 4&amp;quot;&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;pull

&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;step 5&amp;quot;&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;mine&lt;span class="w"&gt; &lt;/span&gt;--all&lt;span class="w"&gt; &lt;/span&gt;-f

&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;step 6&amp;quot;&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;mine&lt;span class="w"&gt; &lt;/span&gt;--tags&lt;span class="w"&gt; &lt;/span&gt;-f
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 crontab 定时任务，每天 3 点同步一次代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;crontab&lt;span class="w"&gt; &lt;/span&gt;-e

&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;*&lt;span class="w"&gt; &lt;/span&gt;*&lt;span class="w"&gt; &lt;/span&gt;*&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/www/pypy&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/usr/bin/env&lt;span class="w"&gt; &lt;/span&gt;bash&lt;span class="w"&gt; &lt;/span&gt;/www/pypy/update.sh&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;/var/log/mirror_pypy.log&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;想抢先查看实际效果？欢迎围观我创建的 &lt;a href="https://github.com/mozillazg/pypy"&gt;PyPy 镜像仓库&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fingolfin/git-remote-hg"&gt;https://github.com/fingolfin/git-remote-hg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/pypy/pypy"&gt;https://bitbucket.org/pypy/pypy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pip.pypa.io/en/latest/installing.html"&gt;https://pip.pypa.io/en/latest/installing.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mozillazg/pypy"&gt;https://github.com/mozillazg/pypy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>如何撤销第一次提交的 git commit</title><link href="https://mozillazg.com/2015/08/ru-he-che-xiao-di-yi-ci-ti-jiao-de-git-commit.html" rel="alternate"></link><published>2015-08-16T00:00:00+00:00</published><updated>2015-08-16T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-08-16:2015/08/ru-he-che-xiao-di-yi-ci-ti-jiao-de-git-commit.html</id><summary type="html">&lt;p&gt;可以通过如下命令撤销创建仓库后第一次提交的 commit&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git update-ref -d HEAD
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;http://stackoverflow.com/questions/6632191/how-to-revert-initial-git-commit&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>在 CentOS 6 上编译安装 git 2.x</title><link href="https://mozillazg.com/2015/08/install-git-2-on-centos-6.html" rel="alternate"></link><published>2015-08-15T00:00:00+00:00</published><updated>2015-08-15T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2015-08-15:2015/08/install-git-2-on-centos-6.html</id><summary type="html">&lt;p&gt;CentOS 6 上通过 yum 安装的是 git 1.x 版本，
本文将讲述如何在 CentOS 6 上编译安装 git 2.x 。下面是详细步骤:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装编译所需的环境依赖&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum -y install wget curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-ExtUtils-MakeMaker gcc asciidoc xmlto docbook2x

&lt;span class="gh"&gt;#&lt;/span&gt; 解决编译时出现的 /bin/sh: line 1: docbook2x-texi: command not found
ln -s /usr/bin/db2x_docbook2texi /usr/bin/docbook2x-texi
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载 &lt;a href="https://www.kernel.org/pub/software/scm/git/"&gt;git 2.x 源码包&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /tmp
wget https://www.kernel.org/pub/software/scm/git/git-2.5.0.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解压，编译，安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /tmp
tar zxvf git-2.5.0.tar.gz 
cd git-2.5.0/
make configure
./configure --prefix=/usr/local
make all doc info
make install install-doc install-html install-info
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 &lt;code&gt;PATH&lt;/code&gt; 环境变量&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;export PATH=/usr/local/bin:$PATH&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;bashrc&lt;/span&gt;
&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;bashrc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;--version
git&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.5.0
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git"&gt;Git - Installing Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>[git]如何删除在远程已被删除的本地分支（清理本地分支）</title><link href="https://mozillazg.com/2014/02/git-delete-all-local-branches-which-are-remotely-deleted.html" rel="alternate"></link><published>2014-02-12T00:00:00+00:00</published><updated>2014-02-12T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-02-12:2014/02/git-delete-all-local-branches-which-are-remotely-deleted.html</id><summary type="html">&lt;p&gt;通过 &lt;tt class="docutils literal"&gt;git fetch &lt;span class="pre"&gt;-p&lt;/span&gt;&lt;/tt&gt; 命令可以实现清理本地分支的功能:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git fetch -p
 x [deleted]         (none)     -&amp;gt; origin/feature-xxx
 x [deleted]         (none)     -&amp;gt; origin/feature-xxxx
 x [deleted]         (none)     -&amp;gt; origin/feature-xxxxx
 x [deleted]         (none)     -&amp;gt; origin/hotfix-xx

# 然后再执行
$ git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 &amp;lt;(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d
 已删除分支 feature-xxx（曾为 328b639）。
 已删除分支 feature-xxxx（曾为 5e77d10）。
 已删除分支 hotfix-xx（曾为 5c13813）。
&lt;/pre&gt;
&lt;div class="section" id="section-1"&gt;
&lt;h2 id="hidsection-1"&gt;参考资料&lt;a class="headerlink" href="#hidsection-1" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/1072171/how-do-you-remove-an-invalid-remote-branch-reference-from-git"&gt;How do you remove an invalid remote branch reference from Git? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/13064613/git-how-to-prune-local-tracking-branches-that-do-not-exist-on-remote-anymore"&gt;Git: How to prune local tracking branches that do not exist on remote anymore - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="git"></category></entry></feed>